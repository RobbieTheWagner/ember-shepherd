{"version":3,"file":"assets/chunk.643ee22fb88369f7111d.js","mappings":"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","sources":["webpack://test-app/../../src/utils/type-check.ts","webpack://test-app/../../src/evented.ts","webpack://test-app/../../.pnpm/deepmerge-ts@7.1.1/node_modules/deepmerge-ts/dist/index.mjs","webpack://test-app/../../src/utils/auto-bind.ts","webpack://test-app/../../src/utils/general.ts","webpack://test-app/../../.pnpm/@floating-ui+utils@0.2.5/node_modules/@floating-ui/utils/dist/floating-ui.utils.mjs","webpack://test-app/../../.pnpm/@floating-ui+core@1.6.5/node_modules/@floating-ui/core/dist/floating-ui.core.mjs","webpack://test-app/../../.pnpm/@floating-ui+utils@0.2.5/node_modules/@floating-ui/utils/dist/floating-ui.utils.dom.mjs","webpack://test-app/../../.pnpm/@floating-ui+dom@1.6.8/node_modules/@floating-ui/dom/dist/floating-ui.dom.mjs","webpack://test-app/../../src/utils/floating-ui.ts","webpack://test-app/../../.pnpm/svelte@4.2.19/node_modules/svelte/src/runtime/internal/utils.js","webpack://test-app/../../.pnpm/svelte@4.2.19/node_modules/svelte/src/runtime/internal/dom.js","webpack://test-app/../../.pnpm/svelte@4.2.19/node_modules/svelte/src/runtime/internal/lifecycle.js","webpack://test-app/../../.pnpm/svelte@4.2.19/node_modules/svelte/src/runtime/internal/scheduler.js","webpack://test-app/../../.pnpm/svelte@4.2.19/node_modules/svelte/src/runtime/internal/transitions.js","webpack://test-app/../../.pnpm/svelte@4.2.19/node_modules/svelte/src/runtime/internal/each.js","webpack://test-app/../../.pnpm/svelte@4.2.19/node_modules/svelte/src/runtime/internal/Component.js","webpack://test-app/../../src/components/shepherd-button.svelte","webpack://test-app/../../.pnpm/svelte@4.2.19/node_modules/svelte/src/runtime/internal/disclose-version/index.js","webpack://test-app/../../.pnpm/svelte@4.2.19/node_modules/svelte/src/shared/version.js","webpack://test-app/../../src/components/shepherd-footer.svelte","webpack://test-app/../../src/components/shepherd-cancel-icon.svelte","webpack://test-app/../../src/components/shepherd-title.svelte","webpack://test-app/../../src/components/shepherd-header.svelte","webpack://test-app/../../src/components/shepherd-text.svelte","webpack://test-app/../../src/components/shepherd-content.svelte","webpack://test-app/../../src/components/shepherd-element.svelte","webpack://test-app/../../.pnpm/svelte@4.2.19/node_modules/svelte/src/runtime/internal/spread.js","webpack://test-app/../../src/step.ts","webpack://test-app/../../src/utils/bind.ts","webpack://test-app/../../src/components/shepherd-modal.svelte","webpack://test-app/../../src/utils/overlay-path.ts","webpack://test-app/../../src/tour.ts","webpack://test-app/../../src/shepherd.ts","webpack://test-app/../../src/utils/cleanup.ts"],"sourcesContent":["/**\n * Checks if `value` is classified as an `Element`.\n * @param value The param to check if it is an Element\n */\nexport function isElement<T>(value: T | Element): value is Element {\n  return value instanceof Element;\n}\n\n/**\n * Checks if `value` is classified as an `HTMLElement`.\n * @param value The param to check if it is an HTMLElement\n */\nexport function isHTMLElement<T>(value: T | HTMLElement): value is HTMLElement {\n  return value instanceof HTMLElement;\n}\n\n/**\n * Checks if `value` is classified as a `Function` object.\n * @param value The param to check if it is a function\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function isFunction<T>(value: T | Function): value is Function {\n  return typeof value === 'function';\n}\n\n/**\n * Checks if `value` is classified as a `String` object.\n * @param value The param to check if it is a string\n */\nexport function isString<T>(value: T | string): value is string {\n  return typeof value === 'string';\n}\n\n/**\n * Checks if `value` is undefined.\n * @param value The param to check if it is undefined\n */\nexport function isUndefined<T>(value: T | undefined): value is undefined {\n  return value === undefined;\n}\n","import { isUndefined } from './utils/type-check.ts';\n\nexport type Bindings = {\n  [key: string]: Array<{ handler: () => void; ctx?: unknown; once?: boolean }>;\n};\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type AnyHandler = (...args: any[]) => void;\n\nexport class Evented {\n  declare bindings: Bindings;\n\n  /**\n   * Adds an event listener for the given event string.\n   *\n   * @param {string} event\n   * @param {Function} handler\n   * @param ctx\n   * @param {boolean} once\n   * @returns\n   */\n  on(event: string, handler: AnyHandler, ctx?: unknown, once = false) {\n    if (isUndefined(this.bindings)) {\n      this.bindings = {};\n    }\n    if (isUndefined(this.bindings[event])) {\n      this.bindings[event] = [];\n    }\n    this.bindings[event]?.push({ handler, ctx, once });\n\n    return this;\n  }\n\n  /**\n   * Adds an event listener that only fires once for the given event string.\n   *\n   * @param {string} event\n   * @param {Function} handler\n   * @param ctx\n   * @returns\n   */\n  once(event: string, handler: AnyHandler, ctx?: unknown) {\n    return this.on(event, handler, ctx, true);\n  }\n\n  /**\n   * Removes an event listener for the given event string.\n   *\n   * @param {string} event\n   * @param {Function} handler\n   * @returns\n   */\n  off(event: string, handler?: AnyHandler) {\n    if (isUndefined(this.bindings) || isUndefined(this.bindings[event])) {\n      return this;\n    }\n\n    if (isUndefined(handler)) {\n      delete this.bindings[event];\n    } else {\n      this.bindings[event]?.forEach((binding, index) => {\n        if (binding.handler === handler) {\n          this.bindings[event]?.splice(index, 1);\n        }\n      });\n    }\n\n    return this;\n  }\n\n  /**\n   * Triggers an event listener for the given event string.\n   *\n   * @param {string} event\n   * @returns\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  trigger(event: string, ...args: any[]) {\n    if (!isUndefined(this.bindings) && this.bindings[event]) {\n      this.bindings[event]?.forEach((binding, index) => {\n        const { ctx, handler, once } = binding;\n\n        const context = ctx || this;\n\n        handler.apply(context, args as []);\n\n        if (once) {\n          this.bindings[event]?.splice(index, 1);\n        }\n      });\n    }\n\n    return this;\n  }\n}\n","/**\n * Special values that tell deepmerge to perform a certain action.\n */\nconst actions = {\n    defaultMerge: Symbol(\"deepmerge-ts: default merge\"),\n    skip: Symbol(\"deepmerge-ts: skip\"),\n};\n/**\n * Special values that tell deepmergeInto to perform a certain action.\n */\nconst actionsInto = {\n    defaultMerge: actions.defaultMerge,\n};\n\n/**\n * The default function to update meta data.\n *\n * It doesn't update the meta data.\n */\nfunction defaultMetaDataUpdater(previousMeta, metaMeta) {\n    return metaMeta;\n}\n/**\n * The default function to filter values.\n *\n * It filters out undefined values.\n */\nfunction defaultFilterValues(values, meta) {\n    return values.filter((value) => value !== undefined);\n}\n\n/**\n * The different types of objects deepmerge-ts support.\n */\nvar ObjectType;\n(function (ObjectType) {\n    ObjectType[ObjectType[\"NOT\"] = 0] = \"NOT\";\n    ObjectType[ObjectType[\"RECORD\"] = 1] = \"RECORD\";\n    ObjectType[ObjectType[\"ARRAY\"] = 2] = \"ARRAY\";\n    ObjectType[ObjectType[\"SET\"] = 3] = \"SET\";\n    ObjectType[ObjectType[\"MAP\"] = 4] = \"MAP\";\n    ObjectType[ObjectType[\"OTHER\"] = 5] = \"OTHER\";\n})(ObjectType || (ObjectType = {}));\n/**\n * Get the type of the given object.\n *\n * @param object - The object to get the type of.\n * @returns The type of the given object.\n */\nfunction getObjectType(object) {\n    if (typeof object !== \"object\" || object === null) {\n        return 0 /* ObjectType.NOT */;\n    }\n    if (Array.isArray(object)) {\n        return 2 /* ObjectType.ARRAY */;\n    }\n    if (isRecord(object)) {\n        return 1 /* ObjectType.RECORD */;\n    }\n    if (object instanceof Set) {\n        return 3 /* ObjectType.SET */;\n    }\n    if (object instanceof Map) {\n        return 4 /* ObjectType.MAP */;\n    }\n    return 5 /* ObjectType.OTHER */;\n}\n/**\n * Get the keys of the given objects including symbol keys.\n *\n * Note: Only keys to enumerable properties are returned.\n *\n * @param objects - An array of objects to get the keys of.\n * @returns A set containing all the keys of all the given objects.\n */\nfunction getKeys(objects) {\n    const keys = new Set();\n    for (const object of objects) {\n        for (const key of [...Object.keys(object), ...Object.getOwnPropertySymbols(object)]) {\n            keys.add(key);\n        }\n    }\n    return keys;\n}\n/**\n * Does the given object have the given property.\n *\n * @param object - The object to test.\n * @param property - The property to test.\n * @returns Whether the object has the property.\n */\nfunction objectHasProperty(object, property) {\n    return typeof object === \"object\" && Object.prototype.propertyIsEnumerable.call(object, property);\n}\n/**\n * Get an iterable object that iterates over the given iterables.\n */\nfunction getIterableOfIterables(iterables) {\n    return {\n        *[Symbol.iterator]() {\n            for (const iterable of iterables) {\n                for (const value of iterable) {\n                    yield value;\n                }\n            }\n        },\n    };\n}\nconst validRecordToStringValues = new Set([\"[object Object]\", \"[object Module]\"]);\n/**\n * Does the given object appear to be a record.\n */\nfunction isRecord(value) {\n    // All records are objects.\n    if (!validRecordToStringValues.has(Object.prototype.toString.call(value))) {\n        return false;\n    }\n    const { constructor } = value;\n    // If has modified constructor.\n    // eslint-disable-next-line ts/no-unnecessary-condition\n    if (constructor === undefined) {\n        return true;\n    }\n    const prototype = constructor.prototype;\n    // If has modified prototype.\n    if (prototype === null ||\n        typeof prototype !== \"object\" ||\n        !validRecordToStringValues.has(Object.prototype.toString.call(prototype))) {\n        return false;\n    }\n    // If constructor does not have an Object-specific method.\n    // eslint-disable-next-line sonar/prefer-single-boolean-return, no-prototype-builtins\n    if (!prototype.hasOwnProperty(\"isPrototypeOf\")) {\n        return false;\n    }\n    // Most likely a record.\n    return true;\n}\n\n/**\n * The default strategy to merge records.\n *\n * @param values - The records.\n */\nfunction mergeRecords$1(values, utils, meta) {\n    const result = {};\n    for (const key of getKeys(values)) {\n        const propValues = [];\n        for (const value of values) {\n            if (objectHasProperty(value, key)) {\n                propValues.push(value[key]);\n            }\n        }\n        if (propValues.length === 0) {\n            continue;\n        }\n        const updatedMeta = utils.metaDataUpdater(meta, {\n            key,\n            parents: values,\n        });\n        const propertyResult = mergeUnknowns(propValues, utils, updatedMeta);\n        if (propertyResult === actions.skip) {\n            continue;\n        }\n        if (key === \"__proto__\") {\n            Object.defineProperty(result, key, {\n                value: propertyResult,\n                configurable: true,\n                enumerable: true,\n                writable: true,\n            });\n        }\n        else {\n            result[key] = propertyResult;\n        }\n    }\n    return result;\n}\n/**\n * The default strategy to merge arrays.\n *\n * @param values - The arrays.\n */\nfunction mergeArrays$1(values) {\n    return values.flat();\n}\n/**\n * The default strategy to merge sets.\n *\n * @param values - The sets.\n */\nfunction mergeSets$1(values) {\n    return new Set(getIterableOfIterables(values));\n}\n/**\n * The default strategy to merge maps.\n *\n * @param values - The maps.\n */\nfunction mergeMaps$1(values) {\n    return new Map(getIterableOfIterables(values));\n}\n/**\n * Get the last non-undefined value in the given array.\n */\nfunction mergeOthers$1(values) {\n    return values.at(-1);\n}\n/**\n * The merge functions.\n */\nconst mergeFunctions = {\n    mergeRecords: mergeRecords$1,\n    mergeArrays: mergeArrays$1,\n    mergeSets: mergeSets$1,\n    mergeMaps: mergeMaps$1,\n    mergeOthers: mergeOthers$1,\n};\n\n/**\n * Deeply merge objects.\n *\n * @param objects - The objects to merge.\n */\nfunction deepmerge(...objects) {\n    return deepmergeCustom({})(...objects);\n}\nfunction deepmergeCustom(options, rootMetaData) {\n    const utils = getUtils(options, customizedDeepmerge);\n    /**\n     * The customized deepmerge function.\n     */\n    function customizedDeepmerge(...objects) {\n        return mergeUnknowns(objects, utils, rootMetaData);\n    }\n    return customizedDeepmerge;\n}\n/**\n * The the utils that are available to the merge functions.\n *\n * @param options - The options the user specified\n */\nfunction getUtils(options, customizedDeepmerge) {\n    return {\n        defaultMergeFunctions: mergeFunctions,\n        mergeFunctions: {\n            ...mergeFunctions,\n            ...Object.fromEntries(Object.entries(options)\n                .filter(([key, option]) => Object.hasOwn(mergeFunctions, key))\n                .map(([key, option]) => (option === false ? [key, mergeFunctions.mergeOthers] : [key, option]))),\n        },\n        metaDataUpdater: (options.metaDataUpdater ?? defaultMetaDataUpdater),\n        deepmerge: customizedDeepmerge,\n        useImplicitDefaultMerging: options.enableImplicitDefaultMerging ?? false,\n        filterValues: options.filterValues === false ? undefined : (options.filterValues ?? defaultFilterValues),\n        actions,\n    };\n}\n/**\n * Merge unknown things.\n *\n * @param values - The values.\n */\nfunction mergeUnknowns(values, utils, meta) {\n    const filteredValues = utils.filterValues?.(values, meta) ?? values;\n    if (filteredValues.length === 0) {\n        return undefined;\n    }\n    if (filteredValues.length === 1) {\n        return mergeOthers(filteredValues, utils, meta);\n    }\n    const type = getObjectType(filteredValues[0]);\n    if (type !== 0 /* ObjectType.NOT */ && type !== 5 /* ObjectType.OTHER */) {\n        for (let m_index = 1; m_index < filteredValues.length; m_index++) {\n            if (getObjectType(filteredValues[m_index]) === type) {\n                continue;\n            }\n            return mergeOthers(filteredValues, utils, meta);\n        }\n    }\n    switch (type) {\n        case 1 /* ObjectType.RECORD */: {\n            return mergeRecords(filteredValues, utils, meta);\n        }\n        case 2 /* ObjectType.ARRAY */: {\n            return mergeArrays(filteredValues, utils, meta);\n        }\n        case 3 /* ObjectType.SET */: {\n            return mergeSets(filteredValues, utils, meta);\n        }\n        case 4 /* ObjectType.MAP */: {\n            return mergeMaps(filteredValues, utils, meta);\n        }\n        default: {\n            return mergeOthers(filteredValues, utils, meta);\n        }\n    }\n}\n/**\n * Merge records.\n *\n * @param values - The records.\n */\nfunction mergeRecords(values, utils, meta) {\n    const result = utils.mergeFunctions.mergeRecords(values, utils, meta);\n    if (result === actions.defaultMerge ||\n        (utils.useImplicitDefaultMerging &&\n            result === undefined &&\n            utils.mergeFunctions.mergeRecords !== utils.defaultMergeFunctions.mergeRecords)) {\n        return utils.defaultMergeFunctions.mergeRecords(values, utils, meta);\n    }\n    return result;\n}\n/**\n * Merge arrays.\n *\n * @param values - The arrays.\n */\nfunction mergeArrays(values, utils, meta) {\n    const result = utils.mergeFunctions.mergeArrays(values, utils, meta);\n    if (result === actions.defaultMerge ||\n        (utils.useImplicitDefaultMerging &&\n            result === undefined &&\n            utils.mergeFunctions.mergeArrays !== utils.defaultMergeFunctions.mergeArrays)) {\n        return utils.defaultMergeFunctions.mergeArrays(values);\n    }\n    return result;\n}\n/**\n * Merge sets.\n *\n * @param values - The sets.\n */\nfunction mergeSets(values, utils, meta) {\n    const result = utils.mergeFunctions.mergeSets(values, utils, meta);\n    if (result === actions.defaultMerge ||\n        (utils.useImplicitDefaultMerging &&\n            result === undefined &&\n            utils.mergeFunctions.mergeSets !== utils.defaultMergeFunctions.mergeSets)) {\n        return utils.defaultMergeFunctions.mergeSets(values);\n    }\n    return result;\n}\n/**\n * Merge maps.\n *\n * @param values - The maps.\n */\nfunction mergeMaps(values, utils, meta) {\n    const result = utils.mergeFunctions.mergeMaps(values, utils, meta);\n    if (result === actions.defaultMerge ||\n        (utils.useImplicitDefaultMerging &&\n            result === undefined &&\n            utils.mergeFunctions.mergeMaps !== utils.defaultMergeFunctions.mergeMaps)) {\n        return utils.defaultMergeFunctions.mergeMaps(values);\n    }\n    return result;\n}\n/**\n * Merge other things.\n *\n * @param values - The other things.\n */\nfunction mergeOthers(values, utils, meta) {\n    const result = utils.mergeFunctions.mergeOthers(values, utils, meta);\n    if (result === actions.defaultMerge ||\n        (utils.useImplicitDefaultMerging &&\n            result === undefined &&\n            utils.mergeFunctions.mergeOthers !== utils.defaultMergeFunctions.mergeOthers)) {\n        return utils.defaultMergeFunctions.mergeOthers(values);\n    }\n    return result;\n}\n\n/**\n * The default strategy to merge records into a target record.\n *\n * @param m_target - The result will be mutated into this record\n * @param values - The records (including the target's value if there is one).\n */\nfunction mergeRecordsInto$1(m_target, values, utils, meta) {\n    for (const key of getKeys(values)) {\n        const propValues = [];\n        for (const value of values) {\n            if (objectHasProperty(value, key)) {\n                propValues.push(value[key]);\n            }\n        }\n        if (propValues.length === 0) {\n            continue;\n        }\n        const updatedMeta = utils.metaDataUpdater(meta, {\n            key,\n            parents: values,\n        });\n        const propertyTarget = { value: propValues[0] };\n        mergeUnknownsInto(propertyTarget, propValues, utils, updatedMeta);\n        if (key === \"__proto__\") {\n            Object.defineProperty(m_target.value, key, {\n                value: propertyTarget.value,\n                configurable: true,\n                enumerable: true,\n                writable: true,\n            });\n        }\n        else {\n            m_target.value[key] = propertyTarget.value;\n        }\n    }\n}\n/**\n * The default strategy to merge arrays into a target array.\n *\n * @param m_target - The result will be mutated into this array\n * @param values - The arrays (including the target's value if there is one).\n */\nfunction mergeArraysInto$1(m_target, values) {\n    m_target.value.push(...values.slice(1).flat());\n}\n/**\n * The default strategy to merge sets into a target set.\n *\n * @param m_target - The result will be mutated into this set\n * @param values - The sets (including the target's value if there is one).\n */\nfunction mergeSetsInto$1(m_target, values) {\n    for (const value of getIterableOfIterables(values.slice(1))) {\n        m_target.value.add(value);\n    }\n}\n/**\n * The default strategy to merge maps into a target map.\n *\n * @param m_target - The result will be mutated into this map\n * @param values - The maps (including the target's value if there is one).\n */\nfunction mergeMapsInto$1(m_target, values) {\n    for (const [key, value] of getIterableOfIterables(values.slice(1))) {\n        m_target.value.set(key, value);\n    }\n}\n/**\n * Set the target to the last non-undefined value.\n */\nfunction mergeOthersInto$1(m_target, values) {\n    m_target.value = values.at(-1);\n}\n/**\n * The merge functions.\n */\nconst mergeIntoFunctions = {\n    mergeRecords: mergeRecordsInto$1,\n    mergeArrays: mergeArraysInto$1,\n    mergeSets: mergeSetsInto$1,\n    mergeMaps: mergeMapsInto$1,\n    mergeOthers: mergeOthersInto$1,\n};\n\nfunction deepmergeInto(target, ...objects) {\n    return void deepmergeIntoCustom({})(target, ...objects);\n}\nfunction deepmergeIntoCustom(options, rootMetaData) {\n    const utils = getIntoUtils(options, customizedDeepmergeInto);\n    /**\n     * The customized deepmerge function.\n     */\n    function customizedDeepmergeInto(target, ...objects) {\n        mergeUnknownsInto({ value: target }, [target, ...objects], utils, rootMetaData);\n    }\n    return customizedDeepmergeInto;\n}\n/**\n * The the utils that are available to the merge functions.\n *\n * @param options - The options the user specified\n */\nfunction getIntoUtils(options, customizedDeepmergeInto) {\n    return {\n        defaultMergeFunctions: mergeIntoFunctions,\n        mergeFunctions: {\n            ...mergeIntoFunctions,\n            ...Object.fromEntries(Object.entries(options)\n                .filter(([key, option]) => Object.hasOwn(mergeIntoFunctions, key))\n                .map(([key, option]) => (option === false ? [key, mergeIntoFunctions.mergeOthers] : [key, option]))),\n        },\n        metaDataUpdater: (options.metaDataUpdater ?? defaultMetaDataUpdater),\n        deepmergeInto: customizedDeepmergeInto,\n        filterValues: options.filterValues === false ? undefined : (options.filterValues ?? defaultFilterValues),\n        actions: actionsInto,\n    };\n}\n/**\n * Merge unknown things into a target.\n *\n * @param m_target - The target to merge into.\n * @param values - The values.\n */\nfunction mergeUnknownsInto(m_target, values, utils, meta) {\n    const filteredValues = utils.filterValues?.(values, meta) ?? values;\n    if (filteredValues.length === 0) {\n        return;\n    }\n    if (filteredValues.length === 1) {\n        return void mergeOthersInto(m_target, filteredValues, utils, meta);\n    }\n    const type = getObjectType(m_target.value);\n    if (type !== 0 /* ObjectType.NOT */ && type !== 5 /* ObjectType.OTHER */) {\n        for (let m_index = 1; m_index < filteredValues.length; m_index++) {\n            if (getObjectType(filteredValues[m_index]) === type) {\n                continue;\n            }\n            return void mergeOthersInto(m_target, filteredValues, utils, meta);\n        }\n    }\n    switch (type) {\n        case 1 /* ObjectType.RECORD */: {\n            return void mergeRecordsInto(m_target, filteredValues, utils, meta);\n        }\n        case 2 /* ObjectType.ARRAY */: {\n            return void mergeArraysInto(m_target, filteredValues, utils, meta);\n        }\n        case 3 /* ObjectType.SET */: {\n            return void mergeSetsInto(m_target, filteredValues, utils, meta);\n        }\n        case 4 /* ObjectType.MAP */: {\n            return void mergeMapsInto(m_target, filteredValues, utils, meta);\n        }\n        default: {\n            return void mergeOthersInto(m_target, filteredValues, utils, meta);\n        }\n    }\n}\n/**\n * Merge records into a target record.\n *\n * @param m_target - The target to merge into.\n * @param values - The records.\n */\nfunction mergeRecordsInto(m_target, values, utils, meta) {\n    const action = utils.mergeFunctions.mergeRecords(m_target, values, utils, meta);\n    if (action === actionsInto.defaultMerge) {\n        utils.defaultMergeFunctions.mergeRecords(m_target, values, utils, meta);\n    }\n}\n/**\n * Merge arrays into a target array.\n *\n * @param m_target - The target to merge into.\n * @param values - The arrays.\n */\nfunction mergeArraysInto(m_target, values, utils, meta) {\n    const action = utils.mergeFunctions.mergeArrays(m_target, values, utils, meta);\n    if (action === actionsInto.defaultMerge) {\n        utils.defaultMergeFunctions.mergeArrays(m_target, values);\n    }\n}\n/**\n * Merge sets into a target set.\n *\n * @param m_target - The target to merge into.\n * @param values - The sets.\n */\nfunction mergeSetsInto(m_target, values, utils, meta) {\n    const action = utils.mergeFunctions.mergeSets(m_target, values, utils, meta);\n    if (action === actionsInto.defaultMerge) {\n        utils.defaultMergeFunctions.mergeSets(m_target, values);\n    }\n}\n/**\n * Merge maps into a target map.\n *\n * @param m_target - The target to merge into.\n * @param values - The maps.\n */\nfunction mergeMapsInto(m_target, values, utils, meta) {\n    const action = utils.mergeFunctions.mergeMaps(m_target, values, utils, meta);\n    if (action === actionsInto.defaultMerge) {\n        utils.defaultMergeFunctions.mergeMaps(m_target, values);\n    }\n}\n/**\n * Merge other things into a target.\n *\n * @param m_target - The target to merge into.\n * @param values - The other things.\n */\nfunction mergeOthersInto(m_target, values, utils, meta) {\n    const action = utils.mergeFunctions.mergeOthers(m_target, values, utils, meta);\n    if (action === actionsInto.defaultMerge || m_target.value === actionsInto.defaultMerge) {\n        utils.defaultMergeFunctions.mergeOthers(m_target, values);\n    }\n}\n\nexport { deepmerge, deepmergeCustom, deepmergeInto, deepmergeIntoCustom, getKeys, getObjectType, objectHasProperty };\n","/**\n * Binds all the methods on a JS Class to the `this` context of the class.\n * Adapted from https://github.com/sindresorhus/auto-bind\n * @param self The `this` context of the class\n * @return The `this` context of the class\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport default function autoBind(self: any) {\n  const keys = Object.getOwnPropertyNames(self.constructor.prototype);\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i] as keyof typeof self;\n    const val = self[key];\n    if (key !== 'constructor' && typeof val === 'function') {\n      self[key] = val.bind(self);\n    }\n  }\n\n  return self;\n}\n","import { type Tour, type TourOptions } from '../tour.ts';\nimport {\n  type StepOptionsAttachTo,\n  type Step,\n  type StepOptions\n} from '../step.ts';\nimport { isFunction, isString } from './type-check.ts';\n\nexport class StepNoOp {\n  constructor(_options: StepOptions) {}\n}\n\nexport class TourNoOp {\n  constructor(_tour: Tour, _options: TourOptions) {}\n}\n\n/**\n * Ensure class prefix ends in `-`\n * @param prefix - The prefix to prepend to the class names generated by nano-css\n * @return The prefix ending in `-`\n */\nexport function normalizePrefix(prefix?: string) {\n  if (!isString(prefix) || prefix === '') {\n    return '';\n  }\n\n  return prefix.charAt(prefix.length - 1) !== '-' ? `${prefix}-` : prefix;\n}\n\n/**\n * Resolves attachTo options, converting element option value to a qualified HTMLElement.\n * @param step - The step instance\n * @returns {{}|{element, on}}\n * `element` is a qualified HTML Element\n * `on` is a string position value\n */\nexport function parseAttachTo(step: Step) {\n  const options = step.options.attachTo || {};\n  const returnOpts = Object.assign({}, options);\n\n  if (isFunction(returnOpts.element)) {\n    // Bind the callback to step so that it has access to the object, to enable running additional logic\n    returnOpts.element = returnOpts.element.call(step);\n  }\n\n  if (isString(returnOpts.element)) {\n    // Can't override the element in user opts reference because we can't\n    // guarantee that the element will exist in the future.\n    try {\n      returnOpts.element = document.querySelector(\n        returnOpts.element\n      ) as HTMLElement;\n    } catch (e) {\n      // TODO\n    }\n    if (!returnOpts.element) {\n      console.error(\n        `The element for this Shepherd step was not found ${options.element}`\n      );\n    }\n  }\n\n  return returnOpts;\n}\n\n/*\n * Resolves the step's `extraHighlights` option, converting any locator values to HTMLElements.\n */\nexport function parseExtraHighlights(step: Step): HTMLElement[] {\n  if (step.options.extraHighlights) {\n    return step.options.extraHighlights.flatMap((highlight) => {\n      return Array.from(document.querySelectorAll(highlight)) as HTMLElement[];\n    });\n  }\n  return [];\n}\n\n/**\n * Checks if the step should be centered or not. Does not trigger attachTo.element evaluation, making it a pure\n * alternative for the deprecated step.isCentered() method.\n */\nexport function shouldCenterStep(resolvedAttachToOptions: StepOptionsAttachTo) {\n  if (\n    resolvedAttachToOptions === undefined ||\n    resolvedAttachToOptions === null\n  ) {\n    return true;\n  }\n\n  return !resolvedAttachToOptions.element || !resolvedAttachToOptions.on;\n}\n\n/**\n * Create a unique id for steps, tours, modals, etc\n */\nexport function uuid() {\n  let d = Date.now();\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n    const r = (d + Math.random() * 16) % 16 | 0;\n    d = Math.floor(d / 16);\n    return (c == 'x' ? r : (r & 0x3) | 0x8).toString(16);\n  });\n}\n","/**\n * Custom positioning reference element.\n * @see https://floating-ui.com/docs/virtual-elements\n */\n\nconst sides = ['top', 'right', 'bottom', 'left'];\nconst alignments = ['start', 'end'];\nconst placements = /*#__PURE__*/sides.reduce((acc, side) => acc.concat(side, side + \"-\" + alignments[0], side + \"-\" + alignments[1]), []);\nconst min = Math.min;\nconst max = Math.max;\nconst round = Math.round;\nconst floor = Math.floor;\nconst createCoords = v => ({\n  x: v,\n  y: v\n});\nconst oppositeSideMap = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\nconst oppositeAlignmentMap = {\n  start: 'end',\n  end: 'start'\n};\nfunction clamp(start, value, end) {\n  return max(start, min(value, end));\n}\nfunction evaluate(value, param) {\n  return typeof value === 'function' ? value(param) : value;\n}\nfunction getSide(placement) {\n  return placement.split('-')[0];\n}\nfunction getAlignment(placement) {\n  return placement.split('-')[1];\n}\nfunction getOppositeAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}\nfunction getAxisLength(axis) {\n  return axis === 'y' ? 'height' : 'width';\n}\nfunction getSideAxis(placement) {\n  return ['top', 'bottom'].includes(getSide(placement)) ? 'y' : 'x';\n}\nfunction getAlignmentAxis(placement) {\n  return getOppositeAxis(getSideAxis(placement));\n}\nfunction getAlignmentSides(placement, rects, rtl) {\n  if (rtl === void 0) {\n    rtl = false;\n  }\n  const alignment = getAlignment(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const length = getAxisLength(alignmentAxis);\n  let mainAlignmentSide = alignmentAxis === 'x' ? alignment === (rtl ? 'end' : 'start') ? 'right' : 'left' : alignment === 'start' ? 'bottom' : 'top';\n  if (rects.reference[length] > rects.floating[length]) {\n    mainAlignmentSide = getOppositePlacement(mainAlignmentSide);\n  }\n  return [mainAlignmentSide, getOppositePlacement(mainAlignmentSide)];\n}\nfunction getExpandedPlacements(placement) {\n  const oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];\n}\nfunction getOppositeAlignmentPlacement(placement) {\n  return placement.replace(/start|end/g, alignment => oppositeAlignmentMap[alignment]);\n}\nfunction getSideList(side, isStart, rtl) {\n  const lr = ['left', 'right'];\n  const rl = ['right', 'left'];\n  const tb = ['top', 'bottom'];\n  const bt = ['bottom', 'top'];\n  switch (side) {\n    case 'top':\n    case 'bottom':\n      if (rtl) return isStart ? rl : lr;\n      return isStart ? lr : rl;\n    case 'left':\n    case 'right':\n      return isStart ? tb : bt;\n    default:\n      return [];\n  }\n}\nfunction getOppositeAxisPlacements(placement, flipAlignment, direction, rtl) {\n  const alignment = getAlignment(placement);\n  let list = getSideList(getSide(placement), direction === 'start', rtl);\n  if (alignment) {\n    list = list.map(side => side + \"-\" + alignment);\n    if (flipAlignment) {\n      list = list.concat(list.map(getOppositeAlignmentPlacement));\n    }\n  }\n  return list;\n}\nfunction getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, side => oppositeSideMap[side]);\n}\nfunction expandPaddingObject(padding) {\n  return {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    ...padding\n  };\n}\nfunction getPaddingObject(padding) {\n  return typeof padding !== 'number' ? expandPaddingObject(padding) : {\n    top: padding,\n    right: padding,\n    bottom: padding,\n    left: padding\n  };\n}\nfunction rectToClientRect(rect) {\n  const {\n    x,\n    y,\n    width,\n    height\n  } = rect;\n  return {\n    width,\n    height,\n    top: y,\n    left: x,\n    right: x + width,\n    bottom: y + height,\n    x,\n    y\n  };\n}\n\nexport { alignments, clamp, createCoords, evaluate, expandPaddingObject, floor, getAlignment, getAlignmentAxis, getAlignmentSides, getAxisLength, getExpandedPlacements, getOppositeAlignmentPlacement, getOppositeAxis, getOppositeAxisPlacements, getOppositePlacement, getPaddingObject, getSide, getSideAxis, max, min, placements, rectToClientRect, round, sides };\n","import { getSideAxis, getAlignmentAxis, getAxisLength, getSide, getAlignment, evaluate, getPaddingObject, rectToClientRect, min, clamp, placements, getAlignmentSides, getOppositeAlignmentPlacement, getOppositePlacement, getExpandedPlacements, getOppositeAxisPlacements, sides, max, getOppositeAxis } from '@floating-ui/utils';\nexport { rectToClientRect } from '@floating-ui/utils';\n\nfunction computeCoordsFromPlacement(_ref, placement, rtl) {\n  let {\n    reference,\n    floating\n  } = _ref;\n  const sideAxis = getSideAxis(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const alignLength = getAxisLength(alignmentAxis);\n  const side = getSide(placement);\n  const isVertical = sideAxis === 'y';\n  const commonX = reference.x + reference.width / 2 - floating.width / 2;\n  const commonY = reference.y + reference.height / 2 - floating.height / 2;\n  const commonAlign = reference[alignLength] / 2 - floating[alignLength] / 2;\n  let coords;\n  switch (side) {\n    case 'top':\n      coords = {\n        x: commonX,\n        y: reference.y - floating.height\n      };\n      break;\n    case 'bottom':\n      coords = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n    case 'right':\n      coords = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n    case 'left':\n      coords = {\n        x: reference.x - floating.width,\n        y: commonY\n      };\n      break;\n    default:\n      coords = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n  switch (getAlignment(placement)) {\n    case 'start':\n      coords[alignmentAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n    case 'end':\n      coords[alignmentAxis] += commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n  }\n  return coords;\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a given reference element.\n *\n * This export does not have any `platform` interface logic. You will need to\n * write one for the platform you are using Floating UI with.\n */\nconst computePosition = async (reference, floating, config) => {\n  const {\n    placement = 'bottom',\n    strategy = 'absolute',\n    middleware = [],\n    platform\n  } = config;\n  const validMiddleware = middleware.filter(Boolean);\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(floating));\n  let rects = await platform.getElementRects({\n    reference,\n    floating,\n    strategy\n  });\n  let {\n    x,\n    y\n  } = computeCoordsFromPlacement(rects, placement, rtl);\n  let statefulPlacement = placement;\n  let middlewareData = {};\n  let resetCount = 0;\n  for (let i = 0; i < validMiddleware.length; i++) {\n    const {\n      name,\n      fn\n    } = validMiddleware[i];\n    const {\n      x: nextX,\n      y: nextY,\n      data,\n      reset\n    } = await fn({\n      x,\n      y,\n      initialPlacement: placement,\n      placement: statefulPlacement,\n      strategy,\n      middlewareData,\n      rects,\n      platform,\n      elements: {\n        reference,\n        floating\n      }\n    });\n    x = nextX != null ? nextX : x;\n    y = nextY != null ? nextY : y;\n    middlewareData = {\n      ...middlewareData,\n      [name]: {\n        ...middlewareData[name],\n        ...data\n      }\n    };\n    if (reset && resetCount <= 50) {\n      resetCount++;\n      if (typeof reset === 'object') {\n        if (reset.placement) {\n          statefulPlacement = reset.placement;\n        }\n        if (reset.rects) {\n          rects = reset.rects === true ? await platform.getElementRects({\n            reference,\n            floating,\n            strategy\n          }) : reset.rects;\n        }\n        ({\n          x,\n          y\n        } = computeCoordsFromPlacement(rects, statefulPlacement, rtl));\n      }\n      i = -1;\n    }\n  }\n  return {\n    x,\n    y,\n    placement: statefulPlacement,\n    strategy,\n    middlewareData\n  };\n};\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nasync function detectOverflow(state, options) {\n  var _await$platform$isEle;\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    x,\n    y,\n    platform,\n    rects,\n    elements,\n    strategy\n  } = state;\n  const {\n    boundary = 'clippingAncestors',\n    rootBoundary = 'viewport',\n    elementContext = 'floating',\n    altBoundary = false,\n    padding = 0\n  } = evaluate(options, state);\n  const paddingObject = getPaddingObject(padding);\n  const altContext = elementContext === 'floating' ? 'reference' : 'floating';\n  const element = elements[altBoundary ? altContext : elementContext];\n  const clippingClientRect = rectToClientRect(await platform.getClippingRect({\n    element: ((_await$platform$isEle = await (platform.isElement == null ? void 0 : platform.isElement(element))) != null ? _await$platform$isEle : true) ? element : element.contextElement || (await (platform.getDocumentElement == null ? void 0 : platform.getDocumentElement(elements.floating))),\n    boundary,\n    rootBoundary,\n    strategy\n  }));\n  const rect = elementContext === 'floating' ? {\n    x,\n    y,\n    width: rects.floating.width,\n    height: rects.floating.height\n  } : rects.reference;\n  const offsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating));\n  const offsetScale = (await (platform.isElement == null ? void 0 : platform.isElement(offsetParent))) ? (await (platform.getScale == null ? void 0 : platform.getScale(offsetParent))) || {\n    x: 1,\n    y: 1\n  } : {\n    x: 1,\n    y: 1\n  };\n  const elementClientRect = rectToClientRect(platform.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform.convertOffsetParentRelativeRectToViewportRelativeRect({\n    elements,\n    rect,\n    offsetParent,\n    strategy\n  }) : rect);\n  return {\n    top: (clippingClientRect.top - elementClientRect.top + paddingObject.top) / offsetScale.y,\n    bottom: (elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom) / offsetScale.y,\n    left: (clippingClientRect.left - elementClientRect.left + paddingObject.left) / offsetScale.x,\n    right: (elementClientRect.right - clippingClientRect.right + paddingObject.right) / offsetScale.x\n  };\n}\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = options => ({\n  name: 'arrow',\n  options,\n  async fn(state) {\n    const {\n      x,\n      y,\n      placement,\n      rects,\n      platform,\n      elements,\n      middlewareData\n    } = state;\n    // Since `element` is required, we don't Partial<> the type.\n    const {\n      element,\n      padding = 0\n    } = evaluate(options, state) || {};\n    if (element == null) {\n      return {};\n    }\n    const paddingObject = getPaddingObject(padding);\n    const coords = {\n      x,\n      y\n    };\n    const axis = getAlignmentAxis(placement);\n    const length = getAxisLength(axis);\n    const arrowDimensions = await platform.getDimensions(element);\n    const isYAxis = axis === 'y';\n    const minProp = isYAxis ? 'top' : 'left';\n    const maxProp = isYAxis ? 'bottom' : 'right';\n    const clientProp = isYAxis ? 'clientHeight' : 'clientWidth';\n    const endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];\n    const startDiff = coords[axis] - rects.reference[axis];\n    const arrowOffsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(element));\n    let clientSize = arrowOffsetParent ? arrowOffsetParent[clientProp] : 0;\n\n    // DOM platform can return `window` as the `offsetParent`.\n    if (!clientSize || !(await (platform.isElement == null ? void 0 : platform.isElement(arrowOffsetParent)))) {\n      clientSize = elements.floating[clientProp] || rects.floating[length];\n    }\n    const centerToReference = endDiff / 2 - startDiff / 2;\n\n    // If the padding is large enough that it causes the arrow to no longer be\n    // centered, modify the padding so that it is centered.\n    const largestPossiblePadding = clientSize / 2 - arrowDimensions[length] / 2 - 1;\n    const minPadding = min(paddingObject[minProp], largestPossiblePadding);\n    const maxPadding = min(paddingObject[maxProp], largestPossiblePadding);\n\n    // Make sure the arrow doesn't overflow the floating element if the center\n    // point is outside the floating element's bounds.\n    const min$1 = minPadding;\n    const max = clientSize - arrowDimensions[length] - maxPadding;\n    const center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;\n    const offset = clamp(min$1, center, max);\n\n    // If the reference is small enough that the arrow's padding causes it to\n    // to point to nothing for an aligned placement, adjust the offset of the\n    // floating element itself. To ensure `shift()` continues to take action,\n    // a single reset is performed when this is true.\n    const shouldAddOffset = !middlewareData.arrow && getAlignment(placement) != null && center !== offset && rects.reference[length] / 2 - (center < min$1 ? minPadding : maxPadding) - arrowDimensions[length] / 2 < 0;\n    const alignmentOffset = shouldAddOffset ? center < min$1 ? center - min$1 : center - max : 0;\n    return {\n      [axis]: coords[axis] + alignmentOffset,\n      data: {\n        [axis]: offset,\n        centerOffset: center - offset - alignmentOffset,\n        ...(shouldAddOffset && {\n          alignmentOffset\n        })\n      },\n      reset: shouldAddOffset\n    };\n  }\n});\n\nfunction getPlacementList(alignment, autoAlignment, allowedPlacements) {\n  const allowedPlacementsSortedByAlignment = alignment ? [...allowedPlacements.filter(placement => getAlignment(placement) === alignment), ...allowedPlacements.filter(placement => getAlignment(placement) !== alignment)] : allowedPlacements.filter(placement => getSide(placement) === placement);\n  return allowedPlacementsSortedByAlignment.filter(placement => {\n    if (alignment) {\n      return getAlignment(placement) === alignment || (autoAlignment ? getOppositeAlignmentPlacement(placement) !== placement : false);\n    }\n    return true;\n  });\n}\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'autoPlacement',\n    options,\n    async fn(state) {\n      var _middlewareData$autoP, _middlewareData$autoP2, _placementsThatFitOnE;\n      const {\n        rects,\n        middlewareData,\n        placement,\n        platform,\n        elements\n      } = state;\n      const {\n        crossAxis = false,\n        alignment,\n        allowedPlacements = placements,\n        autoAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const placements$1 = alignment !== undefined || allowedPlacements === placements ? getPlacementList(alignment || null, autoAlignment, allowedPlacements) : allowedPlacements;\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const currentIndex = ((_middlewareData$autoP = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP.index) || 0;\n      const currentPlacement = placements$1[currentIndex];\n      if (currentPlacement == null) {\n        return {};\n      }\n      const alignmentSides = getAlignmentSides(currentPlacement, rects, await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating)));\n\n      // Make `computeCoords` start from the right place.\n      if (placement !== currentPlacement) {\n        return {\n          reset: {\n            placement: placements$1[0]\n          }\n        };\n      }\n      const currentOverflows = [overflow[getSide(currentPlacement)], overflow[alignmentSides[0]], overflow[alignmentSides[1]]];\n      const allOverflows = [...(((_middlewareData$autoP2 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP2.overflows) || []), {\n        placement: currentPlacement,\n        overflows: currentOverflows\n      }];\n      const nextPlacement = placements$1[currentIndex + 1];\n\n      // There are more placements to check.\n      if (nextPlacement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: nextPlacement\n          }\n        };\n      }\n      const placementsSortedByMostSpace = allOverflows.map(d => {\n        const alignment = getAlignment(d.placement);\n        return [d.placement, alignment && crossAxis ?\n        // Check along the mainAxis and main crossAxis side.\n        d.overflows.slice(0, 2).reduce((acc, v) => acc + v, 0) :\n        // Check only the mainAxis.\n        d.overflows[0], d.overflows];\n      }).sort((a, b) => a[1] - b[1]);\n      const placementsThatFitOnEachSide = placementsSortedByMostSpace.filter(d => d[2].slice(0,\n      // Aligned placements should not check their opposite crossAxis\n      // side.\n      getAlignment(d[0]) ? 2 : 3).every(v => v <= 0));\n      const resetPlacement = ((_placementsThatFitOnE = placementsThatFitOnEachSide[0]) == null ? void 0 : _placementsThatFitOnE[0]) || placementsSortedByMostSpace[0][0];\n      if (resetPlacement !== placement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: resetPlacement\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'flip',\n    options,\n    async fn(state) {\n      var _middlewareData$arrow, _middlewareData$flip;\n      const {\n        placement,\n        middlewareData,\n        rects,\n        initialPlacement,\n        platform,\n        elements\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true,\n        fallbackPlacements: specifiedFallbackPlacements,\n        fallbackStrategy = 'bestFit',\n        fallbackAxisSideDirection = 'none',\n        flipAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n\n      // If a reset by the arrow was caused due to an alignment offset being\n      // added, we should skip any logic now since `flip()` has already done its\n      // work.\n      // https://github.com/floating-ui/floating-ui/issues/2549#issuecomment-1719601643\n      if ((_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      const side = getSide(placement);\n      const initialSideAxis = getSideAxis(initialPlacement);\n      const isBasePlacement = getSide(initialPlacement) === initialPlacement;\n      const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n      const fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));\n      const hasFallbackAxisSideDirection = fallbackAxisSideDirection !== 'none';\n      if (!specifiedFallbackPlacements && hasFallbackAxisSideDirection) {\n        fallbackPlacements.push(...getOppositeAxisPlacements(initialPlacement, flipAlignment, fallbackAxisSideDirection, rtl));\n      }\n      const placements = [initialPlacement, ...fallbackPlacements];\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const overflows = [];\n      let overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];\n      if (checkMainAxis) {\n        overflows.push(overflow[side]);\n      }\n      if (checkCrossAxis) {\n        const sides = getAlignmentSides(placement, rects, rtl);\n        overflows.push(overflow[sides[0]], overflow[sides[1]]);\n      }\n      overflowsData = [...overflowsData, {\n        placement,\n        overflows\n      }];\n\n      // One or more sides is overflowing.\n      if (!overflows.every(side => side <= 0)) {\n        var _middlewareData$flip2, _overflowsData$filter;\n        const nextIndex = (((_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) || 0) + 1;\n        const nextPlacement = placements[nextIndex];\n        if (nextPlacement) {\n          // Try next placement and re-run the lifecycle.\n          return {\n            data: {\n              index: nextIndex,\n              overflows: overflowsData\n            },\n            reset: {\n              placement: nextPlacement\n            }\n          };\n        }\n\n        // First, find the candidates that fit on the mainAxis side of overflow,\n        // then find the placement that fits the best on the main crossAxis side.\n        let resetPlacement = (_overflowsData$filter = overflowsData.filter(d => d.overflows[0] <= 0).sort((a, b) => a.overflows[1] - b.overflows[1])[0]) == null ? void 0 : _overflowsData$filter.placement;\n\n        // Otherwise fallback.\n        if (!resetPlacement) {\n          switch (fallbackStrategy) {\n            case 'bestFit':\n              {\n                var _overflowsData$filter2;\n                const placement = (_overflowsData$filter2 = overflowsData.filter(d => {\n                  if (hasFallbackAxisSideDirection) {\n                    const currentSideAxis = getSideAxis(d.placement);\n                    return currentSideAxis === initialSideAxis ||\n                    // Create a bias to the `y` side axis due to horizontal\n                    // reading directions favoring greater width.\n                    currentSideAxis === 'y';\n                  }\n                  return true;\n                }).map(d => [d.placement, d.overflows.filter(overflow => overflow > 0).reduce((acc, overflow) => acc + overflow, 0)]).sort((a, b) => a[1] - b[1])[0]) == null ? void 0 : _overflowsData$filter2[0];\n                if (placement) {\n                  resetPlacement = placement;\n                }\n                break;\n              }\n            case 'initialPlacement':\n              resetPlacement = initialPlacement;\n              break;\n          }\n        }\n        if (placement !== resetPlacement) {\n          return {\n            reset: {\n              placement: resetPlacement\n            }\n          };\n        }\n      }\n      return {};\n    }\n  };\n};\n\nfunction getSideOffsets(overflow, rect) {\n  return {\n    top: overflow.top - rect.height,\n    right: overflow.right - rect.width,\n    bottom: overflow.bottom - rect.height,\n    left: overflow.left - rect.width\n  };\n}\nfunction isAnySideFullyClipped(overflow) {\n  return sides.some(side => overflow[side] >= 0);\n}\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'hide',\n    options,\n    async fn(state) {\n      const {\n        rects\n      } = state;\n      const {\n        strategy = 'referenceHidden',\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      switch (strategy) {\n        case 'referenceHidden':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              elementContext: 'reference'\n            });\n            const offsets = getSideOffsets(overflow, rects.reference);\n            return {\n              data: {\n                referenceHiddenOffsets: offsets,\n                referenceHidden: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        case 'escaped':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              altBoundary: true\n            });\n            const offsets = getSideOffsets(overflow, rects.floating);\n            return {\n              data: {\n                escapedOffsets: offsets,\n                escaped: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        default:\n          {\n            return {};\n          }\n      }\n    }\n  };\n};\n\nfunction getBoundingRect(rects) {\n  const minX = min(...rects.map(rect => rect.left));\n  const minY = min(...rects.map(rect => rect.top));\n  const maxX = max(...rects.map(rect => rect.right));\n  const maxY = max(...rects.map(rect => rect.bottom));\n  return {\n    x: minX,\n    y: minY,\n    width: maxX - minX,\n    height: maxY - minY\n  };\n}\nfunction getRectsByLine(rects) {\n  const sortedRects = rects.slice().sort((a, b) => a.y - b.y);\n  const groups = [];\n  let prevRect = null;\n  for (let i = 0; i < sortedRects.length; i++) {\n    const rect = sortedRects[i];\n    if (!prevRect || rect.y - prevRect.y > prevRect.height / 2) {\n      groups.push([rect]);\n    } else {\n      groups[groups.length - 1].push(rect);\n    }\n    prevRect = rect;\n  }\n  return groups.map(rect => rectToClientRect(getBoundingRect(rect)));\n}\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'inline',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        elements,\n        rects,\n        platform,\n        strategy\n      } = state;\n      // A MouseEvent's client{X,Y} coords can be up to 2 pixels off a\n      // ClientRect's bounds, despite the event listener being triggered. A\n      // padding of 2 seems to handle this issue.\n      const {\n        padding = 2,\n        x,\n        y\n      } = evaluate(options, state);\n      const nativeClientRects = Array.from((await (platform.getClientRects == null ? void 0 : platform.getClientRects(elements.reference))) || []);\n      const clientRects = getRectsByLine(nativeClientRects);\n      const fallback = rectToClientRect(getBoundingRect(nativeClientRects));\n      const paddingObject = getPaddingObject(padding);\n      function getBoundingClientRect() {\n        // There are two rects and they are disjoined.\n        if (clientRects.length === 2 && clientRects[0].left > clientRects[1].right && x != null && y != null) {\n          // Find the first rect in which the point is fully inside.\n          return clientRects.find(rect => x > rect.left - paddingObject.left && x < rect.right + paddingObject.right && y > rect.top - paddingObject.top && y < rect.bottom + paddingObject.bottom) || fallback;\n        }\n\n        // There are 2 or more connected rects.\n        if (clientRects.length >= 2) {\n          if (getSideAxis(placement) === 'y') {\n            const firstRect = clientRects[0];\n            const lastRect = clientRects[clientRects.length - 1];\n            const isTop = getSide(placement) === 'top';\n            const top = firstRect.top;\n            const bottom = lastRect.bottom;\n            const left = isTop ? firstRect.left : lastRect.left;\n            const right = isTop ? firstRect.right : lastRect.right;\n            const width = right - left;\n            const height = bottom - top;\n            return {\n              top,\n              bottom,\n              left,\n              right,\n              width,\n              height,\n              x: left,\n              y: top\n            };\n          }\n          const isLeftSide = getSide(placement) === 'left';\n          const maxRight = max(...clientRects.map(rect => rect.right));\n          const minLeft = min(...clientRects.map(rect => rect.left));\n          const measureRects = clientRects.filter(rect => isLeftSide ? rect.left === minLeft : rect.right === maxRight);\n          const top = measureRects[0].top;\n          const bottom = measureRects[measureRects.length - 1].bottom;\n          const left = minLeft;\n          const right = maxRight;\n          const width = right - left;\n          const height = bottom - top;\n          return {\n            top,\n            bottom,\n            left,\n            right,\n            width,\n            height,\n            x: left,\n            y: top\n          };\n        }\n        return fallback;\n      }\n      const resetRects = await platform.getElementRects({\n        reference: {\n          getBoundingClientRect\n        },\n        floating: elements.floating,\n        strategy\n      });\n      if (rects.reference.x !== resetRects.reference.x || rects.reference.y !== resetRects.reference.y || rects.reference.width !== resetRects.reference.width || rects.reference.height !== resetRects.reference.height) {\n        return {\n          reset: {\n            rects: resetRects\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n// For type backwards-compatibility, the `OffsetOptions` type was also\n// Derivable.\n\nasync function convertValueToCoords(state, options) {\n  const {\n    placement,\n    platform,\n    elements\n  } = state;\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n  const side = getSide(placement);\n  const alignment = getAlignment(placement);\n  const isVertical = getSideAxis(placement) === 'y';\n  const mainAxisMulti = ['left', 'top'].includes(side) ? -1 : 1;\n  const crossAxisMulti = rtl && isVertical ? -1 : 1;\n  const rawValue = evaluate(options, state);\n\n  // eslint-disable-next-line prefer-const\n  let {\n    mainAxis,\n    crossAxis,\n    alignmentAxis\n  } = typeof rawValue === 'number' ? {\n    mainAxis: rawValue,\n    crossAxis: 0,\n    alignmentAxis: null\n  } : {\n    mainAxis: 0,\n    crossAxis: 0,\n    alignmentAxis: null,\n    ...rawValue\n  };\n  if (alignment && typeof alignmentAxis === 'number') {\n    crossAxis = alignment === 'end' ? alignmentAxis * -1 : alignmentAxis;\n  }\n  return isVertical ? {\n    x: crossAxis * crossAxisMulti,\n    y: mainAxis * mainAxisMulti\n  } : {\n    x: mainAxis * mainAxisMulti,\n    y: crossAxis * crossAxisMulti\n  };\n}\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = function (options) {\n  if (options === void 0) {\n    options = 0;\n  }\n  return {\n    name: 'offset',\n    options,\n    async fn(state) {\n      var _middlewareData$offse, _middlewareData$arrow;\n      const {\n        x,\n        y,\n        placement,\n        middlewareData\n      } = state;\n      const diffCoords = await convertValueToCoords(state, options);\n\n      // If the placement is the same and the arrow caused an alignment offset\n      // then we don't need to change the positioning coordinates.\n      if (placement === ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse.placement) && (_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      return {\n        x: x + diffCoords.x,\n        y: y + diffCoords.y,\n        data: {\n          ...diffCoords,\n          placement\n        }\n      };\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'shift',\n    options,\n    async fn(state) {\n      const {\n        x,\n        y,\n        placement\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = false,\n        limiter = {\n          fn: _ref => {\n            let {\n              x,\n              y\n            } = _ref;\n            return {\n              x,\n              y\n            };\n          }\n        },\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const crossAxis = getSideAxis(getSide(placement));\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      if (checkMainAxis) {\n        const minSide = mainAxis === 'y' ? 'top' : 'left';\n        const maxSide = mainAxis === 'y' ? 'bottom' : 'right';\n        const min = mainAxisCoord + overflow[minSide];\n        const max = mainAxisCoord - overflow[maxSide];\n        mainAxisCoord = clamp(min, mainAxisCoord, max);\n      }\n      if (checkCrossAxis) {\n        const minSide = crossAxis === 'y' ? 'top' : 'left';\n        const maxSide = crossAxis === 'y' ? 'bottom' : 'right';\n        const min = crossAxisCoord + overflow[minSide];\n        const max = crossAxisCoord - overflow[maxSide];\n        crossAxisCoord = clamp(min, crossAxisCoord, max);\n      }\n      const limitedCoords = limiter.fn({\n        ...state,\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      });\n      return {\n        ...limitedCoords,\n        data: {\n          x: limitedCoords.x - x,\n          y: limitedCoords.y - y\n        }\n      };\n    }\n  };\n};\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    options,\n    fn(state) {\n      const {\n        x,\n        y,\n        placement,\n        rects,\n        middlewareData\n      } = state;\n      const {\n        offset = 0,\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const crossAxis = getSideAxis(placement);\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      const rawOffset = evaluate(offset, state);\n      const computedOffset = typeof rawOffset === 'number' ? {\n        mainAxis: rawOffset,\n        crossAxis: 0\n      } : {\n        mainAxis: 0,\n        crossAxis: 0,\n        ...rawOffset\n      };\n      if (checkMainAxis) {\n        const len = mainAxis === 'y' ? 'height' : 'width';\n        const limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis;\n        const limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;\n        if (mainAxisCoord < limitMin) {\n          mainAxisCoord = limitMin;\n        } else if (mainAxisCoord > limitMax) {\n          mainAxisCoord = limitMax;\n        }\n      }\n      if (checkCrossAxis) {\n        var _middlewareData$offse, _middlewareData$offse2;\n        const len = mainAxis === 'y' ? 'width' : 'height';\n        const isOriginSide = ['top', 'left'].includes(getSide(placement));\n        const limitMin = rects.reference[crossAxis] - rects.floating[len] + (isOriginSide ? ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse[crossAxis]) || 0 : 0) + (isOriginSide ? 0 : computedOffset.crossAxis);\n        const limitMax = rects.reference[crossAxis] + rects.reference[len] + (isOriginSide ? 0 : ((_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) || 0) - (isOriginSide ? computedOffset.crossAxis : 0);\n        if (crossAxisCoord < limitMin) {\n          crossAxisCoord = limitMin;\n        } else if (crossAxisCoord > limitMax) {\n          crossAxisCoord = limitMax;\n        }\n      }\n      return {\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      };\n    }\n  };\n};\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'size',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        rects,\n        platform,\n        elements\n      } = state;\n      const {\n        apply = () => {},\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const side = getSide(placement);\n      const alignment = getAlignment(placement);\n      const isYAxis = getSideAxis(placement) === 'y';\n      const {\n        width,\n        height\n      } = rects.floating;\n      let heightSide;\n      let widthSide;\n      if (side === 'top' || side === 'bottom') {\n        heightSide = side;\n        widthSide = alignment === ((await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating))) ? 'start' : 'end') ? 'left' : 'right';\n      } else {\n        widthSide = side;\n        heightSide = alignment === 'end' ? 'top' : 'bottom';\n      }\n      const maximumClippingHeight = height - overflow.top - overflow.bottom;\n      const maximumClippingWidth = width - overflow.left - overflow.right;\n      const overflowAvailableHeight = min(height - overflow[heightSide], maximumClippingHeight);\n      const overflowAvailableWidth = min(width - overflow[widthSide], maximumClippingWidth);\n      const noShift = !state.middlewareData.shift;\n      let availableHeight = overflowAvailableHeight;\n      let availableWidth = overflowAvailableWidth;\n      if (isYAxis) {\n        availableWidth = alignment || noShift ? min(overflowAvailableWidth, maximumClippingWidth) : maximumClippingWidth;\n      } else {\n        availableHeight = alignment || noShift ? min(overflowAvailableHeight, maximumClippingHeight) : maximumClippingHeight;\n      }\n      if (noShift && !alignment) {\n        const xMin = max(overflow.left, 0);\n        const xMax = max(overflow.right, 0);\n        const yMin = max(overflow.top, 0);\n        const yMax = max(overflow.bottom, 0);\n        if (isYAxis) {\n          availableWidth = width - 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : max(overflow.left, overflow.right));\n        } else {\n          availableHeight = height - 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : max(overflow.top, overflow.bottom));\n        }\n      }\n      await apply({\n        ...state,\n        availableWidth,\n        availableHeight\n      });\n      const nextDimensions = await platform.getDimensions(elements.floating);\n      if (width !== nextDimensions.width || height !== nextDimensions.height) {\n        return {\n          reset: {\n            rects: true\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\nexport { arrow, autoPlacement, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, shift, size };\n","function getNodeName(node) {\n  if (isNode(node)) {\n    return (node.nodeName || '').toLowerCase();\n  }\n  // Mocked nodes in testing environments may not be instances of Node. By\n  // returning `#document` an infinite loop won't occur.\n  // https://github.com/floating-ui/floating-ui/issues/2317\n  return '#document';\n}\nfunction getWindow(node) {\n  var _node$ownerDocument;\n  return (node == null || (_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;\n}\nfunction getDocumentElement(node) {\n  var _ref;\n  return (_ref = (isNode(node) ? node.ownerDocument : node.document) || window.document) == null ? void 0 : _ref.documentElement;\n}\nfunction isNode(value) {\n  return value instanceof Node || value instanceof getWindow(value).Node;\n}\nfunction isElement(value) {\n  return value instanceof Element || value instanceof getWindow(value).Element;\n}\nfunction isHTMLElement(value) {\n  return value instanceof HTMLElement || value instanceof getWindow(value).HTMLElement;\n}\nfunction isShadowRoot(value) {\n  // Browsers without `ShadowRoot` support.\n  if (typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n  return value instanceof ShadowRoot || value instanceof getWindow(value).ShadowRoot;\n}\nfunction isOverflowElement(element) {\n  const {\n    overflow,\n    overflowX,\n    overflowY,\n    display\n  } = getComputedStyle(element);\n  return /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) && !['inline', 'contents'].includes(display);\n}\nfunction isTableElement(element) {\n  return ['table', 'td', 'th'].includes(getNodeName(element));\n}\nfunction isTopLayer(element) {\n  return [':popover-open', ':modal'].some(selector => {\n    try {\n      return element.matches(selector);\n    } catch (e) {\n      return false;\n    }\n  });\n}\nfunction isContainingBlock(elementOrCss) {\n  const webkit = isWebKit();\n  const css = isElement(elementOrCss) ? getComputedStyle(elementOrCss) : elementOrCss;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  return css.transform !== 'none' || css.perspective !== 'none' || (css.containerType ? css.containerType !== 'normal' : false) || !webkit && (css.backdropFilter ? css.backdropFilter !== 'none' : false) || !webkit && (css.filter ? css.filter !== 'none' : false) || ['transform', 'perspective', 'filter'].some(value => (css.willChange || '').includes(value)) || ['paint', 'layout', 'strict', 'content'].some(value => (css.contain || '').includes(value));\n}\nfunction getContainingBlock(element) {\n  let currentNode = getParentNode(element);\n  while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    if (isContainingBlock(currentNode)) {\n      return currentNode;\n    } else if (isTopLayer(currentNode)) {\n      return null;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  return null;\n}\nfunction isWebKit() {\n  if (typeof CSS === 'undefined' || !CSS.supports) return false;\n  return CSS.supports('-webkit-backdrop-filter', 'none');\n}\nfunction isLastTraversableNode(node) {\n  return ['html', 'body', '#document'].includes(getNodeName(node));\n}\nfunction getComputedStyle(element) {\n  return getWindow(element).getComputedStyle(element);\n}\nfunction getNodeScroll(element) {\n  if (isElement(element)) {\n    return {\n      scrollLeft: element.scrollLeft,\n      scrollTop: element.scrollTop\n    };\n  }\n  return {\n    scrollLeft: element.scrollX,\n    scrollTop: element.scrollY\n  };\n}\nfunction getParentNode(node) {\n  if (getNodeName(node) === 'html') {\n    return node;\n  }\n  const result =\n  // Step into the shadow DOM of the parent of a slotted node.\n  node.assignedSlot ||\n  // DOM Element detected.\n  node.parentNode ||\n  // ShadowRoot detected.\n  isShadowRoot(node) && node.host ||\n  // Fallback.\n  getDocumentElement(node);\n  return isShadowRoot(result) ? result.host : result;\n}\nfunction getNearestOverflowAncestor(node) {\n  const parentNode = getParentNode(node);\n  if (isLastTraversableNode(parentNode)) {\n    return node.ownerDocument ? node.ownerDocument.body : node.body;\n  }\n  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {\n    return parentNode;\n  }\n  return getNearestOverflowAncestor(parentNode);\n}\nfunction getOverflowAncestors(node, list, traverseIframes) {\n  var _node$ownerDocument2;\n  if (list === void 0) {\n    list = [];\n  }\n  if (traverseIframes === void 0) {\n    traverseIframes = true;\n  }\n  const scrollableAncestor = getNearestOverflowAncestor(node);\n  const isBody = scrollableAncestor === ((_node$ownerDocument2 = node.ownerDocument) == null ? void 0 : _node$ownerDocument2.body);\n  const win = getWindow(scrollableAncestor);\n  if (isBody) {\n    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : [], win.frameElement && traverseIframes ? getOverflowAncestors(win.frameElement) : []);\n  }\n  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor, [], traverseIframes));\n}\n\nexport { getComputedStyle, getContainingBlock, getDocumentElement, getNearestOverflowAncestor, getNodeName, getNodeScroll, getOverflowAncestors, getParentNode, getWindow, isContainingBlock, isElement, isHTMLElement, isLastTraversableNode, isNode, isOverflowElement, isShadowRoot, isTableElement, isTopLayer, isWebKit };\n","import { rectToClientRect, detectOverflow as detectOverflow$1, offset as offset$1, autoPlacement as autoPlacement$1, shift as shift$1, flip as flip$1, size as size$1, hide as hide$1, arrow as arrow$1, inline as inline$1, limitShift as limitShift$1, computePosition as computePosition$1 } from '@floating-ui/core';\nimport { round, createCoords, max, min, floor } from '@floating-ui/utils';\nimport { getComputedStyle, isHTMLElement, isElement, getWindow, isWebKit, getDocumentElement, isTopLayer, getNodeName, isOverflowElement, getNodeScroll, getOverflowAncestors, getParentNode, isLastTraversableNode, isContainingBlock, isTableElement, getContainingBlock } from '@floating-ui/utils/dom';\nexport { getOverflowAncestors } from '@floating-ui/utils/dom';\n\nfunction getCssDimensions(element) {\n  const css = getComputedStyle(element);\n  // In testing environments, the `width` and `height` properties are empty\n  // strings for SVG elements, returning NaN. Fallback to `0` in this case.\n  let width = parseFloat(css.width) || 0;\n  let height = parseFloat(css.height) || 0;\n  const hasOffset = isHTMLElement(element);\n  const offsetWidth = hasOffset ? element.offsetWidth : width;\n  const offsetHeight = hasOffset ? element.offsetHeight : height;\n  const shouldFallback = round(width) !== offsetWidth || round(height) !== offsetHeight;\n  if (shouldFallback) {\n    width = offsetWidth;\n    height = offsetHeight;\n  }\n  return {\n    width,\n    height,\n    $: shouldFallback\n  };\n}\n\nfunction unwrapElement(element) {\n  return !isElement(element) ? element.contextElement : element;\n}\n\nfunction getScale(element) {\n  const domElement = unwrapElement(element);\n  if (!isHTMLElement(domElement)) {\n    return createCoords(1);\n  }\n  const rect = domElement.getBoundingClientRect();\n  const {\n    width,\n    height,\n    $\n  } = getCssDimensions(domElement);\n  let x = ($ ? round(rect.width) : rect.width) / width;\n  let y = ($ ? round(rect.height) : rect.height) / height;\n\n  // 0, NaN, or Infinity should always fallback to 1.\n\n  if (!x || !Number.isFinite(x)) {\n    x = 1;\n  }\n  if (!y || !Number.isFinite(y)) {\n    y = 1;\n  }\n  return {\n    x,\n    y\n  };\n}\n\nconst noOffsets = /*#__PURE__*/createCoords(0);\nfunction getVisualOffsets(element) {\n  const win = getWindow(element);\n  if (!isWebKit() || !win.visualViewport) {\n    return noOffsets;\n  }\n  return {\n    x: win.visualViewport.offsetLeft,\n    y: win.visualViewport.offsetTop\n  };\n}\nfunction shouldAddVisualOffsets(element, isFixed, floatingOffsetParent) {\n  if (isFixed === void 0) {\n    isFixed = false;\n  }\n  if (!floatingOffsetParent || isFixed && floatingOffsetParent !== getWindow(element)) {\n    return false;\n  }\n  return isFixed;\n}\n\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n  const clientRect = element.getBoundingClientRect();\n  const domElement = unwrapElement(element);\n  let scale = createCoords(1);\n  if (includeScale) {\n    if (offsetParent) {\n      if (isElement(offsetParent)) {\n        scale = getScale(offsetParent);\n      }\n    } else {\n      scale = getScale(element);\n    }\n  }\n  const visualOffsets = shouldAddVisualOffsets(domElement, isFixedStrategy, offsetParent) ? getVisualOffsets(domElement) : createCoords(0);\n  let x = (clientRect.left + visualOffsets.x) / scale.x;\n  let y = (clientRect.top + visualOffsets.y) / scale.y;\n  let width = clientRect.width / scale.x;\n  let height = clientRect.height / scale.y;\n  if (domElement) {\n    const win = getWindow(domElement);\n    const offsetWin = offsetParent && isElement(offsetParent) ? getWindow(offsetParent) : offsetParent;\n    let currentWin = win;\n    let currentIFrame = currentWin.frameElement;\n    while (currentIFrame && offsetParent && offsetWin !== currentWin) {\n      const iframeScale = getScale(currentIFrame);\n      const iframeRect = currentIFrame.getBoundingClientRect();\n      const css = getComputedStyle(currentIFrame);\n      const left = iframeRect.left + (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x;\n      const top = iframeRect.top + (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;\n      x *= iframeScale.x;\n      y *= iframeScale.y;\n      width *= iframeScale.x;\n      height *= iframeScale.y;\n      x += left;\n      y += top;\n      currentWin = getWindow(currentIFrame);\n      currentIFrame = currentWin.frameElement;\n    }\n  }\n  return rectToClientRect({\n    width,\n    height,\n    x,\n    y\n  });\n}\n\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  let {\n    elements,\n    rect,\n    offsetParent,\n    strategy\n  } = _ref;\n  const isFixed = strategy === 'fixed';\n  const documentElement = getDocumentElement(offsetParent);\n  const topLayer = elements ? isTopLayer(elements.floating) : false;\n  if (offsetParent === documentElement || topLayer && isFixed) {\n    return rect;\n  }\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  let scale = createCoords(1);\n  const offsets = createCoords(0);\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent);\n      scale = getScale(offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    }\n  }\n  return {\n    width: rect.width * scale.x,\n    height: rect.height * scale.y,\n    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x,\n    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y\n  };\n}\n\nfunction getClientRects(element) {\n  return Array.from(element.getClientRects());\n}\n\nfunction getWindowScrollBarX(element) {\n  // If <html> has a CSS width greater than the viewport, then this will be\n  // incorrect for RTL.\n  return getBoundingClientRect(getDocumentElement(element)).left + getNodeScroll(element).scrollLeft;\n}\n\n// Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable.\nfunction getDocumentRect(element) {\n  const html = getDocumentElement(element);\n  const scroll = getNodeScroll(element);\n  const body = element.ownerDocument.body;\n  const width = max(html.scrollWidth, html.clientWidth, body.scrollWidth, body.clientWidth);\n  const height = max(html.scrollHeight, html.clientHeight, body.scrollHeight, body.clientHeight);\n  let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -scroll.scrollTop;\n  if (getComputedStyle(body).direction === 'rtl') {\n    x += max(html.clientWidth, body.clientWidth) - width;\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\nfunction getViewportRect(element, strategy) {\n  const win = getWindow(element);\n  const html = getDocumentElement(element);\n  const visualViewport = win.visualViewport;\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    const visualViewportBased = isWebKit();\n    if (!visualViewportBased || visualViewportBased && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\n// Returns the inner client rect, subtracting scrollbars if present.\nfunction getInnerBoundingClientRect(element, strategy) {\n  const clientRect = getBoundingClientRect(element, true, strategy === 'fixed');\n  const top = clientRect.top + element.clientTop;\n  const left = clientRect.left + element.clientLeft;\n  const scale = isHTMLElement(element) ? getScale(element) : createCoords(1);\n  const width = element.clientWidth * scale.x;\n  const height = element.clientHeight * scale.y;\n  const x = left * scale.x;\n  const y = top * scale.y;\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\nfunction getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {\n  let rect;\n  if (clippingAncestor === 'viewport') {\n    rect = getViewportRect(element, strategy);\n  } else if (clippingAncestor === 'document') {\n    rect = getDocumentRect(getDocumentElement(element));\n  } else if (isElement(clippingAncestor)) {\n    rect = getInnerBoundingClientRect(clippingAncestor, strategy);\n  } else {\n    const visualOffsets = getVisualOffsets(element);\n    rect = {\n      ...clippingAncestor,\n      x: clippingAncestor.x - visualOffsets.x,\n      y: clippingAncestor.y - visualOffsets.y\n    };\n  }\n  return rectToClientRect(rect);\n}\nfunction hasFixedPositionAncestor(element, stopNode) {\n  const parentNode = getParentNode(element);\n  if (parentNode === stopNode || !isElement(parentNode) || isLastTraversableNode(parentNode)) {\n    return false;\n  }\n  return getComputedStyle(parentNode).position === 'fixed' || hasFixedPositionAncestor(parentNode, stopNode);\n}\n\n// A \"clipping ancestor\" is an `overflow` element with the characteristic of\n// clipping (or hiding) child elements. This returns all clipping ancestors\n// of the given element up the tree.\nfunction getClippingElementAncestors(element, cache) {\n  const cachedResult = cache.get(element);\n  if (cachedResult) {\n    return cachedResult;\n  }\n  let result = getOverflowAncestors(element, [], false).filter(el => isElement(el) && getNodeName(el) !== 'body');\n  let currentContainingBlockComputedStyle = null;\n  const elementIsFixed = getComputedStyle(element).position === 'fixed';\n  let currentNode = elementIsFixed ? getParentNode(element) : element;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    const computedStyle = getComputedStyle(currentNode);\n    const currentNodeIsContaining = isContainingBlock(currentNode);\n    if (!currentNodeIsContaining && computedStyle.position === 'fixed') {\n      currentContainingBlockComputedStyle = null;\n    }\n    const shouldDropCurrentNode = elementIsFixed ? !currentNodeIsContaining && !currentContainingBlockComputedStyle : !currentNodeIsContaining && computedStyle.position === 'static' && !!currentContainingBlockComputedStyle && ['absolute', 'fixed'].includes(currentContainingBlockComputedStyle.position) || isOverflowElement(currentNode) && !currentNodeIsContaining && hasFixedPositionAncestor(element, currentNode);\n    if (shouldDropCurrentNode) {\n      // Drop non-containing blocks.\n      result = result.filter(ancestor => ancestor !== currentNode);\n    } else {\n      // Record last containing block for next iteration.\n      currentContainingBlockComputedStyle = computedStyle;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  cache.set(element, result);\n  return result;\n}\n\n// Gets the maximum area that the element is visible in due to any number of\n// clipping ancestors.\nfunction getClippingRect(_ref) {\n  let {\n    element,\n    boundary,\n    rootBoundary,\n    strategy\n  } = _ref;\n  const elementClippingAncestors = boundary === 'clippingAncestors' ? isTopLayer(element) ? [] : getClippingElementAncestors(element, this._c) : [].concat(boundary);\n  const clippingAncestors = [...elementClippingAncestors, rootBoundary];\n  const firstClippingAncestor = clippingAncestors[0];\n  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {\n    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n  return {\n    width: clippingRect.right - clippingRect.left,\n    height: clippingRect.bottom - clippingRect.top,\n    x: clippingRect.left,\n    y: clippingRect.top\n  };\n}\n\nfunction getDimensions(element) {\n  const {\n    width,\n    height\n  } = getCssDimensions(element);\n  return {\n    width,\n    height\n  };\n}\n\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  const isFixed = strategy === 'fixed';\n  const rect = getBoundingClientRect(element, true, isFixed, offsetParent);\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = createCoords(0);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isOffsetParentAnElement) {\n      const offsetRect = getBoundingClientRect(offsetParent, true, isFixed, offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n  const x = rect.left + scroll.scrollLeft - offsets.x;\n  const y = rect.top + scroll.scrollTop - offsets.y;\n  return {\n    x,\n    y,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\nfunction isStaticPositioned(element) {\n  return getComputedStyle(element).position === 'static';\n}\n\nfunction getTrueOffsetParent(element, polyfill) {\n  if (!isHTMLElement(element) || getComputedStyle(element).position === 'fixed') {\n    return null;\n  }\n  if (polyfill) {\n    return polyfill(element);\n  }\n  return element.offsetParent;\n}\n\n// Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\nfunction getOffsetParent(element, polyfill) {\n  const win = getWindow(element);\n  if (isTopLayer(element)) {\n    return win;\n  }\n  if (!isHTMLElement(element)) {\n    let svgOffsetParent = getParentNode(element);\n    while (svgOffsetParent && !isLastTraversableNode(svgOffsetParent)) {\n      if (isElement(svgOffsetParent) && !isStaticPositioned(svgOffsetParent)) {\n        return svgOffsetParent;\n      }\n      svgOffsetParent = getParentNode(svgOffsetParent);\n    }\n    return win;\n  }\n  let offsetParent = getTrueOffsetParent(element, polyfill);\n  while (offsetParent && isTableElement(offsetParent) && isStaticPositioned(offsetParent)) {\n    offsetParent = getTrueOffsetParent(offsetParent, polyfill);\n  }\n  if (offsetParent && isLastTraversableNode(offsetParent) && isStaticPositioned(offsetParent) && !isContainingBlock(offsetParent)) {\n    return win;\n  }\n  return offsetParent || getContainingBlock(element) || win;\n}\n\nconst getElementRects = async function (data) {\n  const getOffsetParentFn = this.getOffsetParent || getOffsetParent;\n  const getDimensionsFn = this.getDimensions;\n  const floatingDimensions = await getDimensionsFn(data.floating);\n  return {\n    reference: getRectRelativeToOffsetParent(data.reference, await getOffsetParentFn(data.floating), data.strategy),\n    floating: {\n      x: 0,\n      y: 0,\n      width: floatingDimensions.width,\n      height: floatingDimensions.height\n    }\n  };\n};\n\nfunction isRTL(element) {\n  return getComputedStyle(element).direction === 'rtl';\n}\n\nconst platform = {\n  convertOffsetParentRelativeRectToViewportRelativeRect,\n  getDocumentElement,\n  getClippingRect,\n  getOffsetParent,\n  getElementRects,\n  getClientRects,\n  getDimensions,\n  getScale,\n  isElement,\n  isRTL\n};\n\n// https://samthor.au/2021/observing-dom/\nfunction observeMove(element, onMove) {\n  let io = null;\n  let timeoutId;\n  const root = getDocumentElement(element);\n  function cleanup() {\n    var _io;\n    clearTimeout(timeoutId);\n    (_io = io) == null || _io.disconnect();\n    io = null;\n  }\n  function refresh(skip, threshold) {\n    if (skip === void 0) {\n      skip = false;\n    }\n    if (threshold === void 0) {\n      threshold = 1;\n    }\n    cleanup();\n    const {\n      left,\n      top,\n      width,\n      height\n    } = element.getBoundingClientRect();\n    if (!skip) {\n      onMove();\n    }\n    if (!width || !height) {\n      return;\n    }\n    const insetTop = floor(top);\n    const insetRight = floor(root.clientWidth - (left + width));\n    const insetBottom = floor(root.clientHeight - (top + height));\n    const insetLeft = floor(left);\n    const rootMargin = -insetTop + \"px \" + -insetRight + \"px \" + -insetBottom + \"px \" + -insetLeft + \"px\";\n    const options = {\n      rootMargin,\n      threshold: max(0, min(1, threshold)) || 1\n    };\n    let isFirstUpdate = true;\n    function handleObserve(entries) {\n      const ratio = entries[0].intersectionRatio;\n      if (ratio !== threshold) {\n        if (!isFirstUpdate) {\n          return refresh();\n        }\n        if (!ratio) {\n          // If the reference is clipped, the ratio is 0. Throttle the refresh\n          // to prevent an infinite loop of updates.\n          timeoutId = setTimeout(() => {\n            refresh(false, 1e-7);\n          }, 1000);\n        } else {\n          refresh(false, ratio);\n        }\n      }\n      isFirstUpdate = false;\n    }\n\n    // Older browsers don't support a `document` as the root and will throw an\n    // error.\n    try {\n      io = new IntersectionObserver(handleObserve, {\n        ...options,\n        // Handle <iframe>s\n        root: root.ownerDocument\n      });\n    } catch (e) {\n      io = new IntersectionObserver(handleObserve, options);\n    }\n    io.observe(element);\n  }\n  refresh(true);\n  return cleanup;\n}\n\n/**\n * Automatically updates the position of the floating element when necessary.\n * Should only be called when the floating element is mounted on the DOM or\n * visible on the screen.\n * @returns cleanup function that should be invoked when the floating element is\n * removed from the DOM or hidden from the screen.\n * @see https://floating-ui.com/docs/autoUpdate\n */\nfunction autoUpdate(reference, floating, update, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    ancestorScroll = true,\n    ancestorResize = true,\n    elementResize = typeof ResizeObserver === 'function',\n    layoutShift = typeof IntersectionObserver === 'function',\n    animationFrame = false\n  } = options;\n  const referenceEl = unwrapElement(reference);\n  const ancestors = ancestorScroll || ancestorResize ? [...(referenceEl ? getOverflowAncestors(referenceEl) : []), ...getOverflowAncestors(floating)] : [];\n  ancestors.forEach(ancestor => {\n    ancestorScroll && ancestor.addEventListener('scroll', update, {\n      passive: true\n    });\n    ancestorResize && ancestor.addEventListener('resize', update);\n  });\n  const cleanupIo = referenceEl && layoutShift ? observeMove(referenceEl, update) : null;\n  let reobserveFrame = -1;\n  let resizeObserver = null;\n  if (elementResize) {\n    resizeObserver = new ResizeObserver(_ref => {\n      let [firstEntry] = _ref;\n      if (firstEntry && firstEntry.target === referenceEl && resizeObserver) {\n        // Prevent update loops when using the `size` middleware.\n        // https://github.com/floating-ui/floating-ui/issues/1740\n        resizeObserver.unobserve(floating);\n        cancelAnimationFrame(reobserveFrame);\n        reobserveFrame = requestAnimationFrame(() => {\n          var _resizeObserver;\n          (_resizeObserver = resizeObserver) == null || _resizeObserver.observe(floating);\n        });\n      }\n      update();\n    });\n    if (referenceEl && !animationFrame) {\n      resizeObserver.observe(referenceEl);\n    }\n    resizeObserver.observe(floating);\n  }\n  let frameId;\n  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\n  if (animationFrame) {\n    frameLoop();\n  }\n  function frameLoop() {\n    const nextRefRect = getBoundingClientRect(reference);\n    if (prevRefRect && (nextRefRect.x !== prevRefRect.x || nextRefRect.y !== prevRefRect.y || nextRefRect.width !== prevRefRect.width || nextRefRect.height !== prevRefRect.height)) {\n      update();\n    }\n    prevRefRect = nextRefRect;\n    frameId = requestAnimationFrame(frameLoop);\n  }\n  update();\n  return () => {\n    var _resizeObserver2;\n    ancestors.forEach(ancestor => {\n      ancestorScroll && ancestor.removeEventListener('scroll', update);\n      ancestorResize && ancestor.removeEventListener('resize', update);\n    });\n    cleanupIo == null || cleanupIo();\n    (_resizeObserver2 = resizeObserver) == null || _resizeObserver2.disconnect();\n    resizeObserver = null;\n    if (animationFrame) {\n      cancelAnimationFrame(frameId);\n    }\n  };\n}\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nconst detectOverflow = detectOverflow$1;\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = offset$1;\n\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = autoPlacement$1;\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = shift$1;\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = flip$1;\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = size$1;\n\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = hide$1;\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = arrow$1;\n\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = inline$1;\n\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = limitShift$1;\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a given reference element.\n */\nconst computePosition = (reference, floating, options) => {\n  // This caches the expensive `getClippingElementAncestors` function so that\n  // multiple lifecycle resets re-use the same result. It only lives for a\n  // single call. If other functions become expensive, we can add them as well.\n  const cache = new Map();\n  const mergedOptions = {\n    platform,\n    ...options\n  };\n  const platformWithCache = {\n    ...mergedOptions.platform,\n    _c: cache\n  };\n  return computePosition$1(reference, floating, {\n    ...mergedOptions,\n    platform: platformWithCache\n  });\n};\n\nexport { arrow, autoPlacement, autoUpdate, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, platform, shift, size };\n","import { deepmerge } from 'deepmerge-ts';\nimport { shouldCenterStep } from './general.ts';\nimport {\n  autoUpdate,\n  arrow,\n  computePosition,\n  flip,\n  autoPlacement,\n  limitShift,\n  shift,\n  type ComputePositionConfig,\n  type MiddlewareData,\n  type Placement,\n  type Alignment\n} from '@floating-ui/dom';\nimport type { Step, StepOptions, StepOptionsAttachTo } from '../step.ts';\nimport { isHTMLElement } from './type-check.ts';\n\n/**\n * Determines options for the tooltip and initializes event listeners.\n *\n * @param step The step instance\n */\nexport function setupTooltip(step: Step): ComputePositionConfig {\n  if (step.cleanup) {\n    step.cleanup();\n  }\n\n  const attachToOptions = step._getResolvedAttachToOptions();\n\n  let target = attachToOptions.element as HTMLElement;\n  const floatingUIOptions = getFloatingUIOptions(attachToOptions, step);\n  const shouldCenter = shouldCenterStep(attachToOptions);\n\n  if (shouldCenter) {\n    target = document.body;\n    // @ts-expect-error TODO: fix this type error when we type Svelte\n    const content = step.shepherdElementComponent.getElement();\n    content.classList.add('shepherd-centered');\n  }\n\n  step.cleanup = autoUpdate(target, step.el as HTMLElement, () => {\n    // The element might have already been removed by the end of the tour.\n    if (!step.el) {\n      step.cleanup?.();\n      return;\n    }\n\n    setPosition(target, step, floatingUIOptions, shouldCenter);\n  });\n\n  step.target = attachToOptions.element as HTMLElement;\n\n  return floatingUIOptions;\n}\n\n/**\n * Merge tooltip options handling nested keys.\n *\n * @param tourOptions - The default tour options.\n * @param options - Step specific options.\n *\n * @return {floatingUIOptions: FloatingUIOptions}\n */\nexport function mergeTooltipConfig(\n  tourOptions: StepOptions,\n  options: StepOptions\n): { floatingUIOptions: ComputePositionConfig } {\n  return {\n    floatingUIOptions: deepmerge(\n      tourOptions.floatingUIOptions || {},\n      options.floatingUIOptions || {}\n    )\n  };\n}\n\n/**\n * Cleanup function called when the step is closed/destroyed.\n *\n * @param step\n */\nexport function destroyTooltip(step: Step) {\n  if (step.cleanup) {\n    step.cleanup();\n  }\n\n  step.cleanup = null;\n}\n\nfunction setPosition(\n  target: HTMLElement,\n  step: Step,\n  floatingUIOptions: ComputePositionConfig,\n  shouldCenter: boolean\n) {\n  return (\n    computePosition(target, step.el as HTMLElement, floatingUIOptions)\n      .then(floatingUIposition(step, shouldCenter))\n      // Wait before forcing focus.\n      .then(\n        (step: Step) =>\n          new Promise<Step>((resolve) => {\n            setTimeout(() => resolve(step), 300);\n          })\n      )\n      // Replaces focusAfterRender modifier.\n      .then((step: Step) => {\n        if (step?.el) {\n          step.el.focus({ preventScroll: true });\n        }\n      })\n  );\n}\n\nfunction floatingUIposition(step: Step, shouldCenter: boolean) {\n  return ({\n    x,\n    y,\n    placement,\n    middlewareData\n  }: {\n    x: number;\n    y: number;\n    placement: Placement;\n    middlewareData: MiddlewareData;\n  }) => {\n    if (!step.el) {\n      return step;\n    }\n\n    if (shouldCenter) {\n      Object.assign(step.el.style, {\n        position: 'fixed',\n        left: '50%',\n        top: '50%',\n        transform: 'translate(-50%, -50%)'\n      });\n    } else {\n      Object.assign(step.el.style, {\n        position: 'absolute',\n        left: `${x}px`,\n        top: `${y}px`\n      });\n    }\n\n    step.el.dataset['popperPlacement'] = placement;\n\n    placeArrow(step.el, middlewareData);\n\n    return step;\n  };\n}\n\nfunction placeArrow(el: HTMLElement, middlewareData: MiddlewareData) {\n  const arrowEl = el.querySelector('.shepherd-arrow');\n  if (isHTMLElement(arrowEl) && middlewareData.arrow) {\n    const { x: arrowX, y: arrowY } = middlewareData.arrow;\n    Object.assign(arrowEl.style, {\n      left: arrowX != null ? `${arrowX}px` : '',\n      top: arrowY != null ? `${arrowY}px` : ''\n    });\n  }\n}\n\n/**\n * Gets the `Floating UI` options from a set of base `attachTo` options\n * @param attachToOptions\n * @param step The step instance\n * @private\n */\nexport function getFloatingUIOptions(\n  attachToOptions: StepOptionsAttachTo,\n  step: Step\n): ComputePositionConfig {\n  const options: ComputePositionConfig = {\n    strategy: 'absolute'\n  };\n\n  options.middleware = [];\n\n  const arrowEl = addArrow(step);\n\n  const shouldCenter = shouldCenterStep(attachToOptions);\n\n  const hasAutoPlacement = attachToOptions.on?.includes('auto');\n\n  const hasEdgeAlignment =\n    attachToOptions?.on?.includes('-start') ||\n    attachToOptions?.on?.includes('-end');\n\n  if (!shouldCenter) {\n    if (hasAutoPlacement) {\n      options.middleware.push(\n        autoPlacement({\n          crossAxis: true,\n          alignment: hasEdgeAlignment\n            ? (attachToOptions?.on?.split('-').pop() as Alignment)\n            : null\n        })\n      );\n    } else {\n      options.middleware.push(flip());\n    }\n\n    options.middleware.push(\n      // Replicate PopperJS default behavior.\n      shift({\n        limiter: limitShift(),\n        crossAxis: true\n      })\n    );\n\n    if (arrowEl) {\n      options.middleware.push(\n        arrow({ element: arrowEl, padding: hasEdgeAlignment ? 4 : 0 })\n      );\n    }\n\n    if (!hasAutoPlacement) options.placement = attachToOptions.on as Placement;\n  }\n\n  return deepmerge(options, step.options.floatingUIOptions || {});\n}\n\nfunction addArrow(step: Step) {\n  if (step.options.arrow && step.el) {\n    return step.el.querySelector('.shepherd-arrow');\n  }\n\n  return false;\n}\n","/** @returns {void} */\nexport function noop() {}\n\nexport const identity = (x) => x;\n\n/**\n * @template T\n * @template S\n * @param {T} tar\n * @param {S} src\n * @returns {T & S}\n */\nexport function assign(tar, src) {\n\t// @ts-ignore\n\tfor (const k in src) tar[k] = src[k];\n\treturn /** @type {T & S} */ (tar);\n}\n\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\n/**\n * @param {any} value\n * @returns {value is PromiseLike<any>}\n */\nexport function is_promise(value) {\n\treturn (\n\t\t!!value &&\n\t\t(typeof value === 'object' || typeof value === 'function') &&\n\t\ttypeof (/** @type {any} */ (value).then) === 'function'\n\t);\n}\n\n/** @returns {void} */\nexport function add_location(element, file, line, column, char) {\n\telement.__svelte_meta = {\n\t\tloc: { file, line, column, char }\n\t};\n}\n\nexport function run(fn) {\n\treturn fn();\n}\n\nexport function blank_object() {\n\treturn Object.create(null);\n}\n\n/**\n * @param {Function[]} fns\n * @returns {void}\n */\nexport function run_all(fns) {\n\tfns.forEach(run);\n}\n\n/**\n * @param {any} thing\n * @returns {thing is Function}\n */\nexport function is_function(thing) {\n\treturn typeof thing === 'function';\n}\n\n/** @returns {boolean} */\nexport function safe_not_equal(a, b) {\n\treturn a != a ? b == b : a !== b || (a && typeof a === 'object') || typeof a === 'function';\n}\n\nlet src_url_equal_anchor;\n\n/**\n * @param {string} element_src\n * @param {string} url\n * @returns {boolean}\n */\nexport function src_url_equal(element_src, url) {\n\tif (element_src === url) return true;\n\tif (!src_url_equal_anchor) {\n\t\tsrc_url_equal_anchor = document.createElement('a');\n\t}\n\t// This is actually faster than doing URL(..).href\n\tsrc_url_equal_anchor.href = url;\n\treturn element_src === src_url_equal_anchor.href;\n}\n\n/** @param {string} srcset */\nfunction split_srcset(srcset) {\n\treturn srcset.split(',').map((src) => src.trim().split(' ').filter(Boolean));\n}\n\n/**\n * @param {HTMLSourceElement | HTMLImageElement} element_srcset\n * @param {string | undefined | null} srcset\n * @returns {boolean}\n */\nexport function srcset_url_equal(element_srcset, srcset) {\n\tconst element_urls = split_srcset(element_srcset.srcset);\n\tconst urls = split_srcset(srcset || '');\n\n\treturn (\n\t\turls.length === element_urls.length &&\n\t\turls.every(\n\t\t\t([url, width], i) =>\n\t\t\t\twidth === element_urls[i][1] &&\n\t\t\t\t// We need to test both ways because Vite will create an a full URL with\n\t\t\t\t// `new URL(asset, import.meta.url).href` for the client when `base: './'`, and the\n\t\t\t\t// relative URLs inside srcset are not automatically resolved to absolute URLs by\n\t\t\t\t// browsers (in contrast to img.src). This means both SSR and DOM code could\n\t\t\t\t// contain relative or absolute URLs.\n\t\t\t\t(src_url_equal(element_urls[i][0], url) || src_url_equal(url, element_urls[i][0]))\n\t\t)\n\t);\n}\n\n/** @returns {boolean} */\nexport function not_equal(a, b) {\n\treturn a != a ? b == b : a !== b;\n}\n\n/** @returns {boolean} */\nexport function is_empty(obj) {\n\treturn Object.keys(obj).length === 0;\n}\n\n/** @returns {void} */\nexport function validate_store(store, name) {\n\tif (store != null && typeof store.subscribe !== 'function') {\n\t\tthrow new Error(`'${name}' is not a store with a 'subscribe' method`);\n\t}\n}\n\nexport function subscribe(store, ...callbacks) {\n\tif (store == null) {\n\t\tfor (const callback of callbacks) {\n\t\t\tcallback(undefined);\n\t\t}\n\t\treturn noop;\n\t}\n\tconst unsub = store.subscribe(...callbacks);\n\treturn unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\n\n/**\n * Get the current value from a store by subscribing and immediately unsubscribing.\n *\n * https://svelte.dev/docs/svelte-store#get\n * @template T\n * @param {import('../store/public.js').Readable<T>} store\n * @returns {T}\n */\nexport function get_store_value(store) {\n\tlet value;\n\tsubscribe(store, (_) => (value = _))();\n\treturn value;\n}\n\n/** @returns {void} */\nexport function component_subscribe(component, store, callback) {\n\tcomponent.$$.on_destroy.push(subscribe(store, callback));\n}\n\nexport function create_slot(definition, ctx, $$scope, fn) {\n\tif (definition) {\n\t\tconst slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n\t\treturn definition[0](slot_ctx);\n\t}\n}\n\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n\treturn definition[1] && fn ? assign($$scope.ctx.slice(), definition[1](fn(ctx))) : $$scope.ctx;\n}\n\nexport function get_slot_changes(definition, $$scope, dirty, fn) {\n\tif (definition[2] && fn) {\n\t\tconst lets = definition[2](fn(dirty));\n\t\tif ($$scope.dirty === undefined) {\n\t\t\treturn lets;\n\t\t}\n\t\tif (typeof lets === 'object') {\n\t\t\tconst merged = [];\n\t\t\tconst len = Math.max($$scope.dirty.length, lets.length);\n\t\t\tfor (let i = 0; i < len; i += 1) {\n\t\t\t\tmerged[i] = $$scope.dirty[i] | lets[i];\n\t\t\t}\n\t\t\treturn merged;\n\t\t}\n\t\treturn $$scope.dirty | lets;\n\t}\n\treturn $$scope.dirty;\n}\n\n/** @returns {void} */\nexport function update_slot_base(\n\tslot,\n\tslot_definition,\n\tctx,\n\t$$scope,\n\tslot_changes,\n\tget_slot_context_fn\n) {\n\tif (slot_changes) {\n\t\tconst slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n\t\tslot.p(slot_context, slot_changes);\n\t}\n}\n\n/** @returns {void} */\nexport function update_slot(\n\tslot,\n\tslot_definition,\n\tctx,\n\t$$scope,\n\tdirty,\n\tget_slot_changes_fn,\n\tget_slot_context_fn\n) {\n\tconst slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n\tupdate_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\n\n/** @returns {any[] | -1} */\nexport function get_all_dirty_from_scope($$scope) {\n\tif ($$scope.ctx.length > 32) {\n\t\tconst dirty = [];\n\t\tconst length = $$scope.ctx.length / 32;\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tdirty[i] = -1;\n\t\t}\n\t\treturn dirty;\n\t}\n\treturn -1;\n}\n\n/** @returns {{}} */\nexport function exclude_internal_props(props) {\n\tconst result = {};\n\tfor (const k in props) if (k[0] !== '$') result[k] = props[k];\n\treturn result;\n}\n\n/** @returns {{}} */\nexport function compute_rest_props(props, keys) {\n\tconst rest = {};\n\tkeys = new Set(keys);\n\tfor (const k in props) if (!keys.has(k) && k[0] !== '$') rest[k] = props[k];\n\treturn rest;\n}\n\n/** @returns {{}} */\nexport function compute_slots(slots) {\n\tconst result = {};\n\tfor (const key in slots) {\n\t\tresult[key] = true;\n\t}\n\treturn result;\n}\n\n/** @returns {(this: any, ...args: any[]) => void} */\nexport function once(fn) {\n\tlet ran = false;\n\treturn function (...args) {\n\t\tif (ran) return;\n\t\tran = true;\n\t\tfn.call(this, ...args);\n\t};\n}\n\nexport function null_to_empty(value) {\n\treturn value == null ? '' : value;\n}\n\nexport function set_store_value(store, ret, value) {\n\tstore.set(value);\n\treturn ret;\n}\n\nexport const has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\n\nexport function action_destroyer(action_result) {\n\treturn action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\n/** @param {number | string} value\n * @returns {[number, string]}\n */\nexport function split_css_unit(value) {\n\tconst split = typeof value === 'string' && value.match(/^\\s*(-?[\\d.]+)([^\\s]*)\\s*$/);\n\treturn split ? [parseFloat(split[1]), split[2] || 'px'] : [/** @type {number} */ (value), 'px'];\n}\n\nexport const contenteditable_truthy_values = ['', true, 1, 'true', 'contenteditable'];\n","import { contenteditable_truthy_values, has_prop } from './utils.js';\n\nimport { ResizeObserverSingleton } from './ResizeObserverSingleton.js';\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\n\n/**\n * @returns {void}\n */\nexport function start_hydrating() {\n\tis_hydrating = true;\n}\n\n/**\n * @returns {void}\n */\nexport function end_hydrating() {\n\tis_hydrating = false;\n}\n\n/**\n * @param {number} low\n * @param {number} high\n * @param {(index: number) => number} key\n * @param {number} value\n * @returns {number}\n */\nfunction upper_bound(low, high, key, value) {\n\t// Return first index of value larger than input value in the range [low, high)\n\twhile (low < high) {\n\t\tconst mid = low + ((high - low) >> 1);\n\t\tif (key(mid) <= value) {\n\t\t\tlow = mid + 1;\n\t\t} else {\n\t\t\thigh = mid;\n\t\t}\n\t}\n\treturn low;\n}\n\n/**\n * @param {NodeEx} target\n * @returns {void}\n */\nfunction init_hydrate(target) {\n\tif (target.hydrate_init) return;\n\ttarget.hydrate_init = true;\n\t// We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n\n\tlet children = /** @type {ArrayLike<NodeEx2>} */ (target.childNodes);\n\t// If target is <head>, there may be children without claim_order\n\tif (target.nodeName === 'HEAD') {\n\t\tconst my_children = [];\n\t\tfor (let i = 0; i < children.length; i++) {\n\t\t\tconst node = children[i];\n\t\t\tif (node.claim_order !== undefined) {\n\t\t\t\tmy_children.push(node);\n\t\t\t}\n\t\t}\n\t\tchildren = my_children;\n\t}\n\t/*\n\t * Reorder claimed children optimally.\n\t * We can reorder claimed children optimally by finding the longest subsequence of\n\t * nodes that are already claimed in order and only moving the rest. The longest\n\t * subsequence of nodes that are claimed in order can be found by\n\t * computing the longest increasing subsequence of .claim_order values.\n\t *\n\t * This algorithm is optimal in generating the least amount of reorder operations\n\t * possible.\n\t *\n\t * Proof:\n\t * We know that, given a set of reordering operations, the nodes that do not move\n\t * always form an increasing subsequence, since they do not move among each other\n\t * meaning that they must be already ordered among each other. Thus, the maximal\n\t * set of nodes that do not move form a longest increasing subsequence.\n\t */\n\t// Compute longest increasing subsequence\n\t// m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n\tconst m = new Int32Array(children.length + 1);\n\t// Predecessor indices + 1\n\tconst p = new Int32Array(children.length);\n\tm[0] = -1;\n\tlet longest = 0;\n\tfor (let i = 0; i < children.length; i++) {\n\t\tconst current = children[i].claim_order;\n\t\t// Find the largest subsequence length such that it ends in a value less than our current value\n\t\t// upper_bound returns first greater value, so we subtract one\n\t\t// with fast path for when we are on the current longest subsequence\n\t\tconst seq_len =\n\t\t\t(longest > 0 && children[m[longest]].claim_order <= current\n\t\t\t\t? longest + 1\n\t\t\t\t: upper_bound(1, longest, (idx) => children[m[idx]].claim_order, current)) - 1;\n\t\tp[i] = m[seq_len] + 1;\n\t\tconst new_len = seq_len + 1;\n\t\t// We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n\t\tm[new_len] = i;\n\t\tlongest = Math.max(new_len, longest);\n\t}\n\t// The longest increasing subsequence of nodes (initially reversed)\n\n\t/**\n\t * @type {NodeEx2[]}\n\t */\n\tconst lis = [];\n\t// The rest of the nodes, nodes that will be moved\n\n\t/**\n\t * @type {NodeEx2[]}\n\t */\n\tconst to_move = [];\n\tlet last = children.length - 1;\n\tfor (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n\t\tlis.push(children[cur - 1]);\n\t\tfor (; last >= cur; last--) {\n\t\t\tto_move.push(children[last]);\n\t\t}\n\t\tlast--;\n\t}\n\tfor (; last >= 0; last--) {\n\t\tto_move.push(children[last]);\n\t}\n\tlis.reverse();\n\t// We sort the nodes being moved to guarantee that their insertion order matches the claim order\n\tto_move.sort((a, b) => a.claim_order - b.claim_order);\n\t// Finally, we move the nodes\n\tfor (let i = 0, j = 0; i < to_move.length; i++) {\n\t\twhile (j < lis.length && to_move[i].claim_order >= lis[j].claim_order) {\n\t\t\tj++;\n\t\t}\n\t\tconst anchor = j < lis.length ? lis[j] : null;\n\t\ttarget.insertBefore(to_move[i], anchor);\n\t}\n}\n\n/**\n * @param {Node} target\n * @param {Node} node\n * @returns {void}\n */\nexport function append(target, node) {\n\ttarget.appendChild(node);\n}\n\n/**\n * @param {Node} target\n * @param {string} style_sheet_id\n * @param {string} styles\n * @returns {void}\n */\nexport function append_styles(target, style_sheet_id, styles) {\n\tconst append_styles_to = get_root_for_style(target);\n\tif (!append_styles_to.getElementById(style_sheet_id)) {\n\t\tconst style = element('style');\n\t\tstyle.id = style_sheet_id;\n\t\tstyle.textContent = styles;\n\t\tappend_stylesheet(append_styles_to, style);\n\t}\n}\n\n/**\n * @param {Node} node\n * @returns {ShadowRoot | Document}\n */\nexport function get_root_for_style(node) {\n\tif (!node) return document;\n\tconst root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n\tif (root && /** @type {ShadowRoot} */ (root).host) {\n\t\treturn /** @type {ShadowRoot} */ (root);\n\t}\n\treturn node.ownerDocument;\n}\n\n/**\n * @param {Node} node\n * @returns {CSSStyleSheet}\n */\nexport function append_empty_stylesheet(node) {\n\tconst style_element = element('style');\n\t// For transitions to work without 'style-src: unsafe-inline' Content Security Policy,\n\t// these empty tags need to be allowed with a hash as a workaround until we move to the Web Animations API.\n\t// Using the hash for the empty string (for an empty tag) works in all browsers except Safari.\n\t// So as a workaround for the workaround, when we append empty style tags we set their content to /* empty */.\n\t// The hash 'sha256-9OlNO0DNEeaVzHL4RZwCLsBHA8WBQ8toBp/4F5XV2nc=' will then work even in Safari.\n\tstyle_element.textContent = '/* empty */';\n\tappend_stylesheet(get_root_for_style(node), style_element);\n\treturn style_element.sheet;\n}\n\n/**\n * @param {ShadowRoot | Document} node\n * @param {HTMLStyleElement} style\n * @returns {CSSStyleSheet}\n */\nfunction append_stylesheet(node, style) {\n\tappend(/** @type {Document} */ (node).head || node, style);\n\treturn style.sheet;\n}\n\n/**\n * @param {NodeEx} target\n * @param {NodeEx} node\n * @returns {void}\n */\nexport function append_hydration(target, node) {\n\tif (is_hydrating) {\n\t\tinit_hydrate(target);\n\t\tif (\n\t\t\ttarget.actual_end_child === undefined ||\n\t\t\t(target.actual_end_child !== null && target.actual_end_child.parentNode !== target)\n\t\t) {\n\t\t\ttarget.actual_end_child = target.firstChild;\n\t\t}\n\t\t// Skip nodes of undefined ordering\n\t\twhile (target.actual_end_child !== null && target.actual_end_child.claim_order === undefined) {\n\t\t\ttarget.actual_end_child = target.actual_end_child.nextSibling;\n\t\t}\n\t\tif (node !== target.actual_end_child) {\n\t\t\t// We only insert if the ordering of this node should be modified or the parent node is not target\n\t\t\tif (node.claim_order !== undefined || node.parentNode !== target) {\n\t\t\t\ttarget.insertBefore(node, target.actual_end_child);\n\t\t\t}\n\t\t} else {\n\t\t\ttarget.actual_end_child = node.nextSibling;\n\t\t}\n\t} else if (node.parentNode !== target || node.nextSibling !== null) {\n\t\ttarget.appendChild(node);\n\t}\n}\n\n/**\n * @param {Node} target\n * @param {Node} node\n * @param {Node} [anchor]\n * @returns {void}\n */\nexport function insert(target, node, anchor) {\n\ttarget.insertBefore(node, anchor || null);\n}\n\n/**\n * @param {NodeEx} target\n * @param {NodeEx} node\n * @param {NodeEx} [anchor]\n * @returns {void}\n */\nexport function insert_hydration(target, node, anchor) {\n\tif (is_hydrating && !anchor) {\n\t\tappend_hydration(target, node);\n\t} else if (node.parentNode !== target || node.nextSibling != anchor) {\n\t\ttarget.insertBefore(node, anchor || null);\n\t}\n}\n\n/**\n * @param {Node} node\n * @returns {void}\n */\nexport function detach(node) {\n\tif (node.parentNode) {\n\t\tnode.parentNode.removeChild(node);\n\t}\n}\n\n/**\n * @returns {void} */\nexport function destroy_each(iterations, detaching) {\n\tfor (let i = 0; i < iterations.length; i += 1) {\n\t\tif (iterations[i]) iterations[i].d(detaching);\n\t}\n}\n\n/**\n * @template {keyof HTMLElementTagNameMap} K\n * @param {K} name\n * @returns {HTMLElementTagNameMap[K]}\n */\nexport function element(name) {\n\treturn document.createElement(name);\n}\n\n/**\n * @template {keyof HTMLElementTagNameMap} K\n * @param {K} name\n * @param {string} is\n * @returns {HTMLElementTagNameMap[K]}\n */\nexport function element_is(name, is) {\n\treturn document.createElement(name, { is });\n}\n\n/**\n * @template T\n * @template {keyof T} K\n * @param {T} obj\n * @param {K[]} exclude\n * @returns {Pick<T, Exclude<keyof T, K>>}\n */\nexport function object_without_properties(obj, exclude) {\n\tconst target = /** @type {Pick<T, Exclude<keyof T, K>>} */ ({});\n\tfor (const k in obj) {\n\t\tif (\n\t\t\thas_prop(obj, k) &&\n\t\t\t// @ts-ignore\n\t\t\texclude.indexOf(k) === -1\n\t\t) {\n\t\t\t// @ts-ignore\n\t\t\ttarget[k] = obj[k];\n\t\t}\n\t}\n\treturn target;\n}\n\n/**\n * @template {keyof SVGElementTagNameMap} K\n * @param {K} name\n * @returns {SVGElement}\n */\nexport function svg_element(name) {\n\treturn document.createElementNS('http://www.w3.org/2000/svg', name);\n}\n\n/**\n * @param {string} data\n * @returns {Text}\n */\nexport function text(data) {\n\treturn document.createTextNode(data);\n}\n\n/**\n * @returns {Text} */\nexport function space() {\n\treturn text(' ');\n}\n\n/**\n * @returns {Text} */\nexport function empty() {\n\treturn text('');\n}\n\n/**\n * @param {string} content\n * @returns {Comment}\n */\nexport function comment(content) {\n\treturn document.createComment(content);\n}\n\n/**\n * @param {EventTarget} node\n * @param {string} event\n * @param {EventListenerOrEventListenerObject} handler\n * @param {boolean | AddEventListenerOptions | EventListenerOptions} [options]\n * @returns {() => void}\n */\nexport function listen(node, event, handler, options) {\n\tnode.addEventListener(event, handler, options);\n\treturn () => node.removeEventListener(event, handler, options);\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function prevent_default(fn) {\n\treturn function (event) {\n\t\tevent.preventDefault();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function stop_propagation(fn) {\n\treturn function (event) {\n\t\tevent.stopPropagation();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function stop_immediate_propagation(fn) {\n\treturn function (event) {\n\t\tevent.stopImmediatePropagation();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => void} */\nexport function self(fn) {\n\treturn function (event) {\n\t\t// @ts-ignore\n\t\tif (event.target === this) fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => void} */\nexport function trusted(fn) {\n\treturn function (event) {\n\t\t// @ts-ignore\n\t\tif (event.isTrusted) fn.call(this, event);\n\t};\n}\n\n/**\n * @param {Element} node\n * @param {string} attribute\n * @param {string} [value]\n * @returns {void}\n */\nexport function attr(node, attribute, value) {\n\tif (value == null) node.removeAttribute(attribute);\n\telse if (node.getAttribute(attribute) !== value) node.setAttribute(attribute, value);\n}\n/**\n * List of attributes that should always be set through the attr method,\n * because updating them through the property setter doesn't work reliably.\n * In the example of `width`/`height`, the problem is that the setter only\n * accepts numeric values, but the attribute can also be set to a string like `50%`.\n * If this list becomes too big, rethink this approach.\n */\nconst always_set_through_set_attribute = ['width', 'height'];\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {{ [x: string]: string }} attributes\n * @returns {void}\n */\nexport function set_attributes(node, attributes) {\n\t// @ts-ignore\n\tconst descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n\tfor (const key in attributes) {\n\t\tif (attributes[key] == null) {\n\t\t\tnode.removeAttribute(key);\n\t\t} else if (key === 'style') {\n\t\t\tnode.style.cssText = attributes[key];\n\t\t} else if (key === '__value') {\n\t\t\t/** @type {any} */ (node).value = node[key] = attributes[key];\n\t\t} else if (\n\t\t\tdescriptors[key] &&\n\t\t\tdescriptors[key].set &&\n\t\t\talways_set_through_set_attribute.indexOf(key) === -1\n\t\t) {\n\t\t\tnode[key] = attributes[key];\n\t\t} else {\n\t\t\tattr(node, key, attributes[key]);\n\t\t}\n\t}\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {{ [x: string]: string }} attributes\n * @returns {void}\n */\nexport function set_svg_attributes(node, attributes) {\n\tfor (const key in attributes) {\n\t\tattr(node, key, attributes[key]);\n\t}\n}\n\n/**\n * @param {Record<string, unknown>} data_map\n * @returns {void}\n */\nexport function set_custom_element_data_map(node, data_map) {\n\tObject.keys(data_map).forEach((key) => {\n\t\tset_custom_element_data(node, key, data_map[key]);\n\t});\n}\n\n/**\n * @returns {void} */\nexport function set_custom_element_data(node, prop, value) {\n\tconst lower = prop.toLowerCase(); // for backwards compatibility with existing behavior we do lowercase first\n\tif (lower in node) {\n\t\tnode[lower] = typeof node[lower] === 'boolean' && value === '' ? true : value;\n\t} else if (prop in node) {\n\t\tnode[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n\t} else {\n\t\tattr(node, prop, value);\n\t}\n}\n\n/**\n * @param {string} tag\n */\nexport function set_dynamic_element_data(tag) {\n\treturn /-/.test(tag) ? set_custom_element_data_map : set_attributes;\n}\n\n/**\n * @returns {void}\n */\nexport function xlink_attr(node, attribute, value) {\n\tnode.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\n\n/**\n * @param {HTMLElement} node\n * @returns {string}\n */\nexport function get_svelte_dataset(node) {\n\treturn node.dataset.svelteH;\n}\n\n/**\n * @returns {unknown[]} */\nexport function get_binding_group_value(group, __value, checked) {\n\tconst value = new Set();\n\tfor (let i = 0; i < group.length; i += 1) {\n\t\tif (group[i].checked) value.add(group[i].__value);\n\t}\n\tif (!checked) {\n\t\tvalue.delete(__value);\n\t}\n\treturn Array.from(value);\n}\n\n/**\n * @param {HTMLInputElement[]} group\n * @returns {{ p(...inputs: HTMLInputElement[]): void; r(): void; }}\n */\nexport function init_binding_group(group) {\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _inputs;\n\treturn {\n\t\t/* push */ p(...inputs) {\n\t\t\t_inputs = inputs;\n\t\t\t_inputs.forEach((input) => group.push(input));\n\t\t},\n\t\t/* remove */ r() {\n\t\t\t_inputs.forEach((input) => group.splice(group.indexOf(input), 1));\n\t\t}\n\t};\n}\n\n/**\n * @param {number[]} indexes\n * @returns {{ u(new_indexes: number[]): void; p(...inputs: HTMLInputElement[]): void; r: () => void; }}\n */\nexport function init_binding_group_dynamic(group, indexes) {\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _group = get_binding_group(group);\n\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _inputs;\n\n\tfunction get_binding_group(group) {\n\t\tfor (let i = 0; i < indexes.length; i++) {\n\t\t\tgroup = group[indexes[i]] = group[indexes[i]] || [];\n\t\t}\n\t\treturn group;\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction push() {\n\t\t_inputs.forEach((input) => _group.push(input));\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction remove() {\n\t\t_inputs.forEach((input) => _group.splice(_group.indexOf(input), 1));\n\t}\n\treturn {\n\t\t/* update */ u(new_indexes) {\n\t\t\tindexes = new_indexes;\n\t\t\tconst new_group = get_binding_group(group);\n\t\t\tif (new_group !== _group) {\n\t\t\t\tremove();\n\t\t\t\t_group = new_group;\n\t\t\t\tpush();\n\t\t\t}\n\t\t},\n\t\t/* push */ p(...inputs) {\n\t\t\t_inputs = inputs;\n\t\t\tpush();\n\t\t},\n\t\t/* remove */ r: remove\n\t};\n}\n\n/** @returns {number} */\nexport function to_number(value) {\n\treturn value === '' ? null : +value;\n}\n\n/** @returns {any[]} */\nexport function time_ranges_to_array(ranges) {\n\tconst array = [];\n\tfor (let i = 0; i < ranges.length; i += 1) {\n\t\tarray.push({ start: ranges.start(i), end: ranges.end(i) });\n\t}\n\treturn array;\n}\n\n/**\n * @param {Element} element\n * @returns {ChildNode[]}\n */\nexport function children(element) {\n\treturn Array.from(element.childNodes);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {void}\n */\nfunction init_claim_info(nodes) {\n\tif (nodes.claim_info === undefined) {\n\t\tnodes.claim_info = { last_index: 0, total_claimed: 0 };\n\t}\n}\n\n/**\n * @template {ChildNodeEx} R\n * @param {ChildNodeArray} nodes\n * @param {(node: ChildNodeEx) => node is R} predicate\n * @param {(node: ChildNodeEx) => ChildNodeEx | undefined} process_node\n * @param {() => R} create_node\n * @param {boolean} dont_update_last_index\n * @returns {R}\n */\nfunction claim_node(nodes, predicate, process_node, create_node, dont_update_last_index = false) {\n\t// Try to find nodes in an order such that we lengthen the longest increasing subsequence\n\tinit_claim_info(nodes);\n\tconst result_node = (() => {\n\t\t// We first try to find an element after the previous one\n\t\tfor (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n\t\t\tconst node = nodes[i];\n\t\t\tif (predicate(node)) {\n\t\t\t\tconst replacement = process_node(node);\n\t\t\t\tif (replacement === undefined) {\n\t\t\t\t\tnodes.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\tnodes[i] = replacement;\n\t\t\t\t}\n\t\t\t\tif (!dont_update_last_index) {\n\t\t\t\t\tnodes.claim_info.last_index = i;\n\t\t\t\t}\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\t// Otherwise, we try to find one before\n\t\t// We iterate in reverse so that we don't go too far back\n\t\tfor (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n\t\t\tconst node = nodes[i];\n\t\t\tif (predicate(node)) {\n\t\t\t\tconst replacement = process_node(node);\n\t\t\t\tif (replacement === undefined) {\n\t\t\t\t\tnodes.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\tnodes[i] = replacement;\n\t\t\t\t}\n\t\t\t\tif (!dont_update_last_index) {\n\t\t\t\t\tnodes.claim_info.last_index = i;\n\t\t\t\t} else if (replacement === undefined) {\n\t\t\t\t\t// Since we spliced before the last_index, we decrease it\n\t\t\t\t\tnodes.claim_info.last_index--;\n\t\t\t\t}\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\t// If we can't find any matching node, we create a new one\n\t\treturn create_node();\n\t})();\n\tresult_node.claim_order = nodes.claim_info.total_claimed;\n\tnodes.claim_info.total_claimed += 1;\n\treturn result_node;\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @param {(name: string) => Element | SVGElement} create_element\n * @returns {Element | SVGElement}\n */\nfunction claim_element_base(nodes, name, attributes, create_element) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Element | SVGElement} */\n\t\t(node) => node.nodeName === name,\n\t\t/** @param {Element} node */\n\t\t(node) => {\n\t\t\tconst remove = [];\n\t\t\tfor (let j = 0; j < node.attributes.length; j++) {\n\t\t\t\tconst attribute = node.attributes[j];\n\t\t\t\tif (!attributes[attribute.name]) {\n\t\t\t\t\tremove.push(attribute.name);\n\t\t\t\t}\n\t\t\t}\n\t\t\tremove.forEach((v) => node.removeAttribute(v));\n\t\t\treturn undefined;\n\t\t},\n\t\t() => create_element(name)\n\t);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @returns {Element | SVGElement}\n */\nexport function claim_element(nodes, name, attributes) {\n\treturn claim_element_base(nodes, name, attributes, element);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @returns {Element | SVGElement}\n */\nexport function claim_svg_element(nodes, name, attributes) {\n\treturn claim_element_base(nodes, name, attributes, svg_element);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {Text}\n */\nexport function claim_text(nodes, data) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Text} */\n\t\t(node) => node.nodeType === 3,\n\t\t/** @param {Text} node */\n\t\t(node) => {\n\t\t\tconst data_str = '' + data;\n\t\t\tif (node.data.startsWith(data_str)) {\n\t\t\t\tif (node.data.length !== data_str.length) {\n\t\t\t\t\treturn node.splitText(data_str.length);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tnode.data = data_str;\n\t\t\t}\n\t\t},\n\t\t() => text(data),\n\t\ttrue // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n\t);\n}\n\n/**\n * @returns {Text} */\nexport function claim_space(nodes) {\n\treturn claim_text(nodes, ' ');\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {Comment}\n */\nexport function claim_comment(nodes, data) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Comment} */\n\t\t(node) => node.nodeType === 8,\n\t\t/** @param {Comment} node */\n\t\t(node) => {\n\t\t\tnode.data = '' + data;\n\t\t\treturn undefined;\n\t\t},\n\t\t() => comment(data),\n\t\ttrue\n\t);\n}\n\nfunction get_comment_idx(nodes, text, start) {\n\tfor (let i = start; i < nodes.length; i += 1) {\n\t\tconst node = nodes[i];\n\t\tif (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\n/**\n * @param {boolean} is_svg\n * @returns {HtmlTagHydration}\n */\nexport function claim_html_tag(nodes, is_svg) {\n\t// find html opening tag\n\tconst start_index = get_comment_idx(nodes, 'HTML_TAG_START', 0);\n\tconst end_index = get_comment_idx(nodes, 'HTML_TAG_END', start_index + 1);\n\tif (start_index === -1 || end_index === -1) {\n\t\treturn new HtmlTagHydration(is_svg);\n\t}\n\n\tinit_claim_info(nodes);\n\tconst html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n\tdetach(html_tag_nodes[0]);\n\tdetach(html_tag_nodes[html_tag_nodes.length - 1]);\n\tconst claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n\tif (claimed_nodes.length === 0) {\n\t\treturn new HtmlTagHydration(is_svg);\n\t}\n\tfor (const n of claimed_nodes) {\n\t\tn.claim_order = nodes.claim_info.total_claimed;\n\t\tnodes.claim_info.total_claimed += 1;\n\t}\n\treturn new HtmlTagHydration(is_svg, claimed_nodes);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @returns {void}\n */\nexport function set_data(text, data) {\n\tdata = '' + data;\n\tif (text.data === data) return;\n\ttext.data = /** @type {string} */ (data);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @returns {void}\n */\nexport function set_data_contenteditable(text, data) {\n\tdata = '' + data;\n\tif (text.wholeText === data) return;\n\ttext.data = /** @type {string} */ (data);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @param {string} attr_value\n * @returns {void}\n */\nexport function set_data_maybe_contenteditable(text, data, attr_value) {\n\tif (~contenteditable_truthy_values.indexOf(attr_value)) {\n\t\tset_data_contenteditable(text, data);\n\t} else {\n\t\tset_data(text, data);\n\t}\n}\n\n/**\n * @returns {void} */\nexport function set_input_value(input, value) {\n\tinput.value = value == null ? '' : value;\n}\n\n/**\n * @returns {void} */\nexport function set_input_type(input, type) {\n\ttry {\n\t\tinput.type = type;\n\t} catch (e) {\n\t\t// do nothing\n\t}\n}\n\n/**\n * @returns {void} */\nexport function set_style(node, key, value, important) {\n\tif (value == null) {\n\t\tnode.style.removeProperty(key);\n\t} else {\n\t\tnode.style.setProperty(key, value, important ? 'important' : '');\n\t}\n}\n\n/**\n * @returns {void} */\nexport function select_option(select, value, mounting) {\n\tfor (let i = 0; i < select.options.length; i += 1) {\n\t\tconst option = select.options[i];\n\t\tif (option.__value === value) {\n\t\t\toption.selected = true;\n\t\t\treturn;\n\t\t}\n\t}\n\tif (!mounting || value !== undefined) {\n\t\tselect.selectedIndex = -1; // no option should be selected\n\t}\n}\n\n/**\n * @returns {void} */\nexport function select_options(select, value) {\n\tfor (let i = 0; i < select.options.length; i += 1) {\n\t\tconst option = select.options[i];\n\t\toption.selected = ~value.indexOf(option.__value);\n\t}\n}\n\nexport function select_value(select) {\n\tconst selected_option = select.querySelector(':checked');\n\treturn selected_option && selected_option.__value;\n}\n\nexport function select_multiple_value(select) {\n\treturn [].map.call(select.querySelectorAll(':checked'), (option) => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\n\n/**\n * @type {boolean} */\nlet crossorigin;\n\n/**\n * @returns {boolean} */\nexport function is_crossorigin() {\n\tif (crossorigin === undefined) {\n\t\tcrossorigin = false;\n\t\ttry {\n\t\t\tif (typeof window !== 'undefined' && window.parent) {\n\t\t\t\tvoid window.parent.document;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tcrossorigin = true;\n\t\t}\n\t}\n\treturn crossorigin;\n}\n\n/**\n * @param {HTMLElement} node\n * @param {() => void} fn\n * @returns {() => void}\n */\nexport function add_iframe_resize_listener(node, fn) {\n\tconst computed_style = getComputedStyle(node);\n\tif (computed_style.position === 'static') {\n\t\tnode.style.position = 'relative';\n\t}\n\tconst iframe = element('iframe');\n\tiframe.setAttribute(\n\t\t'style',\n\t\t'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n\t\t\t'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;'\n\t);\n\tiframe.setAttribute('aria-hidden', 'true');\n\tiframe.tabIndex = -1;\n\tconst crossorigin = is_crossorigin();\n\n\t/**\n\t * @type {() => void}\n\t */\n\tlet unsubscribe;\n\tif (crossorigin) {\n\t\tiframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n\t\tunsubscribe = listen(\n\t\t\twindow,\n\t\t\t'message',\n\t\t\t/** @param {MessageEvent} event */ (event) => {\n\t\t\t\tif (event.source === iframe.contentWindow) fn();\n\t\t\t}\n\t\t);\n\t} else {\n\t\tiframe.src = 'about:blank';\n\t\tiframe.onload = () => {\n\t\t\tunsubscribe = listen(iframe.contentWindow, 'resize', fn);\n\t\t\t// make sure an initial resize event is fired _after_ the iframe is loaded (which is asynchronous)\n\t\t\t// see https://github.com/sveltejs/svelte/issues/4233\n\t\t\tfn();\n\t\t};\n\t}\n\tappend(node, iframe);\n\treturn () => {\n\t\tif (crossorigin) {\n\t\t\tunsubscribe();\n\t\t} else if (unsubscribe && iframe.contentWindow) {\n\t\t\tunsubscribe();\n\t\t}\n\t\tdetach(iframe);\n\t};\n}\nexport const resize_observer_content_box = /* @__PURE__ */ new ResizeObserverSingleton({\n\tbox: 'content-box'\n});\nexport const resize_observer_border_box = /* @__PURE__ */ new ResizeObserverSingleton({\n\tbox: 'border-box'\n});\nexport const resize_observer_device_pixel_content_box = /* @__PURE__ */ new ResizeObserverSingleton(\n\t{ box: 'device-pixel-content-box' }\n);\nexport { ResizeObserverSingleton };\n\n/**\n * @returns {void} */\nexport function toggle_class(element, name, toggle) {\n\t// The `!!` is required because an `undefined` flag means flipping the current state.\n\telement.classList.toggle(name, !!toggle);\n}\n\n/**\n * @template T\n * @param {string} type\n * @param {T} [detail]\n * @param {{ bubbles?: boolean, cancelable?: boolean }} [options]\n * @returns {CustomEvent<T>}\n */\nexport function custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n\treturn new CustomEvent(type, { detail, bubbles, cancelable });\n}\n\n/**\n * @param {string} selector\n * @param {HTMLElement} parent\n * @returns {ChildNodeArray}\n */\nexport function query_selector_all(selector, parent = document.body) {\n\treturn Array.from(parent.querySelectorAll(selector));\n}\n\n/**\n * @param {string} nodeId\n * @param {HTMLElement} head\n * @returns {any[]}\n */\nexport function head_selector(nodeId, head) {\n\tconst result = [];\n\tlet started = 0;\n\tfor (const node of head.childNodes) {\n\t\tif (node.nodeType === 8 /* comment node */) {\n\t\t\tconst comment = node.textContent.trim();\n\t\t\tif (comment === `HEAD_${nodeId}_END`) {\n\t\t\t\tstarted -= 1;\n\t\t\t\tresult.push(node);\n\t\t\t} else if (comment === `HEAD_${nodeId}_START`) {\n\t\t\t\tstarted += 1;\n\t\t\t\tresult.push(node);\n\t\t\t}\n\t\t} else if (started > 0) {\n\t\t\tresult.push(node);\n\t\t}\n\t}\n\treturn result;\n}\n/** */\nexport class HtmlTag {\n\t/**\n\t * @private\n\t * @default false\n\t */\n\tis_svg = false;\n\t/** parent for creating node */\n\te = undefined;\n\t/** html tag nodes */\n\tn = undefined;\n\t/** target */\n\tt = undefined;\n\t/** anchor */\n\ta = undefined;\n\tconstructor(is_svg = false) {\n\t\tthis.is_svg = is_svg;\n\t\tthis.e = this.n = null;\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tc(html) {\n\t\tthis.h(html);\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @param {HTMLElement | SVGElement} target\n\t * @param {HTMLElement | SVGElement} anchor\n\t * @returns {void}\n\t */\n\tm(html, target, anchor = null) {\n\t\tif (!this.e) {\n\t\t\tif (this.is_svg)\n\t\t\t\tthis.e = svg_element(/** @type {keyof SVGElementTagNameMap} */ (target.nodeName));\n\t\t\t/** #7364  target for <template> may be provided as #document-fragment(11) */ else\n\t\t\t\tthis.e = element(\n\t\t\t\t\t/** @type {keyof HTMLElementTagNameMap} */ (\n\t\t\t\t\t\ttarget.nodeType === 11 ? 'TEMPLATE' : target.nodeName\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\tthis.t =\n\t\t\t\ttarget.tagName !== 'TEMPLATE'\n\t\t\t\t\t? target\n\t\t\t\t\t: /** @type {HTMLTemplateElement} */ (target).content;\n\t\t\tthis.c(html);\n\t\t}\n\t\tthis.i(anchor);\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\th(html) {\n\t\tthis.e.innerHTML = html;\n\t\tthis.n = Array.from(\n\t\t\tthis.e.nodeName === 'TEMPLATE' ? this.e.content.childNodes : this.e.childNodes\n\t\t);\n\t}\n\n\t/**\n\t * @returns {void} */\n\ti(anchor) {\n\t\tfor (let i = 0; i < this.n.length; i += 1) {\n\t\t\tinsert(this.t, this.n[i], anchor);\n\t\t}\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tp(html) {\n\t\tthis.d();\n\t\tthis.h(html);\n\t\tthis.i(this.a);\n\t}\n\n\t/**\n\t * @returns {void} */\n\td() {\n\t\tthis.n.forEach(detach);\n\t}\n}\n\nexport class HtmlTagHydration extends HtmlTag {\n\t/** @type {Element[]} hydration claimed nodes */\n\tl = undefined;\n\n\tconstructor(is_svg = false, claimed_nodes) {\n\t\tsuper(is_svg);\n\t\tthis.e = this.n = null;\n\t\tthis.l = claimed_nodes;\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tc(html) {\n\t\tif (this.l) {\n\t\t\tthis.n = this.l;\n\t\t} else {\n\t\t\tsuper.c(html);\n\t\t}\n\t}\n\n\t/**\n\t * @returns {void} */\n\ti(anchor) {\n\t\tfor (let i = 0; i < this.n.length; i += 1) {\n\t\t\tinsert_hydration(this.t, this.n[i], anchor);\n\t\t}\n\t}\n}\n\n/**\n * @param {NamedNodeMap} attributes\n * @returns {{}}\n */\nexport function attribute_to_object(attributes) {\n\tconst result = {};\n\tfor (const attribute of attributes) {\n\t\tresult[attribute.name] = attribute.value;\n\t}\n\treturn result;\n}\n\nconst escaped = {\n\t'\"': '&quot;',\n\t'&': '&amp;',\n\t'<': '&lt;'\n};\n\nconst regex_attribute_characters_to_escape = /[\"&<]/g;\n\n/**\n * Note that the attribute itself should be surrounded in double quotes\n * @param {any} attribute\n */\nfunction escape_attribute(attribute) {\n\treturn String(attribute).replace(regex_attribute_characters_to_escape, (match) => escaped[match]);\n}\n\n/**\n * @param {Record<string, string>} attributes\n */\nexport function stringify_spread(attributes) {\n\tlet str = ' ';\n\tfor (const key in attributes) {\n\t\tif (attributes[key] != null) {\n\t\t\tstr += `${key}=\"${escape_attribute(attributes[key])}\" `;\n\t\t}\n\t}\n\n\treturn str;\n}\n\n/**\n * @param {HTMLElement} element\n * @returns {{}}\n */\nexport function get_custom_elements_slots(element) {\n\tconst result = {};\n\telement.childNodes.forEach(\n\t\t/** @param {Element} node */ (node) => {\n\t\t\tresult[node.slot || 'default'] = true;\n\t\t}\n\t);\n\treturn result;\n}\n\nexport function construct_svelte_component(component, props) {\n\treturn new component(props);\n}\n\n/**\n * @typedef {Node & {\n * \tclaim_order?: number;\n * \thydrate_init?: true;\n * \tactual_end_child?: NodeEx;\n * \tchildNodes: NodeListOf<NodeEx>;\n * }} NodeEx\n */\n\n/** @typedef {ChildNode & NodeEx} ChildNodeEx */\n\n/** @typedef {NodeEx & { claim_order: number }} NodeEx2 */\n\n/**\n * @typedef {ChildNodeEx[] & {\n * \tclaim_info?: {\n * \t\tlast_index: number;\n * \t\ttotal_claimed: number;\n * \t};\n * }} ChildNodeArray\n */\n","import { custom_event } from './dom.js';\n\nexport let current_component;\n\n/** @returns {void} */\nexport function set_current_component(component) {\n\tcurrent_component = component;\n}\n\nexport function get_current_component() {\n\tif (!current_component) throw new Error('Function called outside component initialization');\n\treturn current_component;\n}\n\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`\n *\n * https://svelte.dev/docs/svelte#beforeupdate\n * @param {() => any} fn\n * @returns {void}\n */\nexport function beforeUpdate(fn) {\n\tget_current_component().$$.before_update.push(fn);\n}\n\n/**\n * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\n * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\n * it can be called from an external module).\n *\n * If a function is returned _synchronously_ from `onMount`, it will be called when the component is unmounted.\n *\n * `onMount` does not run inside a [server-side component](https://svelte.dev/docs#run-time-server-side-component-api).\n *\n * https://svelte.dev/docs/svelte#onmount\n * @template T\n * @param {() => import('./private.js').NotFunction<T> | Promise<import('./private.js').NotFunction<T>> | (() => any)} fn\n * @returns {void}\n */\nexport function onMount(fn) {\n\tget_current_component().$$.on_mount.push(fn);\n}\n\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`\n *\n * https://svelte.dev/docs/svelte#afterupdate\n * @param {() => any} fn\n * @returns {void}\n */\nexport function afterUpdate(fn) {\n\tget_current_component().$$.after_update.push(fn);\n}\n\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * https://svelte.dev/docs/svelte#ondestroy\n * @param {() => any} fn\n * @returns {void}\n */\nexport function onDestroy(fn) {\n\tget_current_component().$$.on_destroy.push(fn);\n}\n\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](https://svelte.dev/docs#template-syntax-component-directives-on-eventname).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * The event dispatcher can be typed to narrow the allowed event names and the type of the `detail` argument:\n * ```ts\n * const dispatch = createEventDispatcher<{\n *  loaded: never; // does not take a detail argument\n *  change: string; // takes a detail argument of type string, which is required\n *  optional: number | null; // takes an optional detail argument of type number\n * }>();\n * ```\n *\n * https://svelte.dev/docs/svelte#createeventdispatcher\n * @template {Record<string, any>} [EventMap=any]\n * @returns {import('./public.js').EventDispatcher<EventMap>}\n */\nexport function createEventDispatcher() {\n\tconst component = get_current_component();\n\treturn (type, detail, { cancelable = false } = {}) => {\n\t\tconst callbacks = component.$$.callbacks[type];\n\t\tif (callbacks) {\n\t\t\t// TODO are there situations where events could be dispatched\n\t\t\t// in a server (non-DOM) environment?\n\t\t\tconst event = custom_event(/** @type {string} */ (type), detail, { cancelable });\n\t\t\tcallbacks.slice().forEach((fn) => {\n\t\t\t\tfn.call(component, event);\n\t\t\t});\n\t\t\treturn !event.defaultPrevented;\n\t\t}\n\t\treturn true;\n\t};\n}\n\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#setcontext\n * @template T\n * @param {any} key\n * @param {T} context\n * @returns {T}\n */\nexport function setContext(key, context) {\n\tget_current_component().$$.context.set(key, context);\n\treturn context;\n}\n\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#getcontext\n * @template T\n * @param {any} key\n * @returns {T}\n */\nexport function getContext(key) {\n\treturn get_current_component().$$.context.get(key);\n}\n\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * https://svelte.dev/docs/svelte#getallcontexts\n * @template {Map<any, any>} [T=Map<any, any>]\n * @returns {T}\n */\nexport function getAllContexts() {\n\treturn get_current_component().$$.context;\n}\n\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#hascontext\n * @param {any} key\n * @returns {boolean}\n */\nexport function hasContext(key) {\n\treturn get_current_component().$$.context.has(key);\n}\n\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\n/**\n * @param component\n * @param event\n * @returns {void}\n */\nexport function bubble(component, event) {\n\tconst callbacks = component.$$.callbacks[event.type];\n\tif (callbacks) {\n\t\t// @ts-ignore\n\t\tcallbacks.slice().forEach((fn) => fn.call(this, event));\n\t}\n}\n","import { run_all } from './utils.js';\nimport { current_component, set_current_component } from './lifecycle.js';\n\nexport const dirty_components = [];\nexport const intros = { enabled: false };\nexport const binding_callbacks = [];\n\nlet render_callbacks = [];\n\nconst flush_callbacks = [];\n\nconst resolved_promise = /* @__PURE__ */ Promise.resolve();\n\nlet update_scheduled = false;\n\n/** @returns {void} */\nexport function schedule_update() {\n\tif (!update_scheduled) {\n\t\tupdate_scheduled = true;\n\t\tresolved_promise.then(flush);\n\t}\n}\n\n/** @returns {Promise<void>} */\nexport function tick() {\n\tschedule_update();\n\treturn resolved_promise;\n}\n\n/** @returns {void} */\nexport function add_render_callback(fn) {\n\trender_callbacks.push(fn);\n}\n\n/** @returns {void} */\nexport function add_flush_callback(fn) {\n\tflush_callbacks.push(fn);\n}\n\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\n\nlet flushidx = 0; // Do *not* move this inside the flush() function\n\n/** @returns {void} */\nexport function flush() {\n\t// Do not reenter flush while dirty components are updated, as this can\n\t// result in an infinite loop. Instead, let the inner flush handle it.\n\t// Reentrancy is ok afterwards for bindings etc.\n\tif (flushidx !== 0) {\n\t\treturn;\n\t}\n\tconst saved_component = current_component;\n\tdo {\n\t\t// first, call beforeUpdate functions\n\t\t// and update components\n\t\ttry {\n\t\t\twhile (flushidx < dirty_components.length) {\n\t\t\t\tconst component = dirty_components[flushidx];\n\t\t\t\tflushidx++;\n\t\t\t\tset_current_component(component);\n\t\t\t\tupdate(component.$$);\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t// reset dirty state to not end up in a deadlocked state and then rethrow\n\t\t\tdirty_components.length = 0;\n\t\t\tflushidx = 0;\n\t\t\tthrow e;\n\t\t}\n\t\tset_current_component(null);\n\t\tdirty_components.length = 0;\n\t\tflushidx = 0;\n\t\twhile (binding_callbacks.length) binding_callbacks.pop()();\n\t\t// then, once components are updated, call\n\t\t// afterUpdate functions. This may cause\n\t\t// subsequent updates...\n\t\tfor (let i = 0; i < render_callbacks.length; i += 1) {\n\t\t\tconst callback = render_callbacks[i];\n\t\t\tif (!seen_callbacks.has(callback)) {\n\t\t\t\t// ...so guard against infinite loops\n\t\t\t\tseen_callbacks.add(callback);\n\t\t\t\tcallback();\n\t\t\t}\n\t\t}\n\t\trender_callbacks.length = 0;\n\t} while (dirty_components.length);\n\twhile (flush_callbacks.length) {\n\t\tflush_callbacks.pop()();\n\t}\n\tupdate_scheduled = false;\n\tseen_callbacks.clear();\n\tset_current_component(saved_component);\n}\n\n/** @returns {void} */\nfunction update($$) {\n\tif ($$.fragment !== null) {\n\t\t$$.update();\n\t\trun_all($$.before_update);\n\t\tconst dirty = $$.dirty;\n\t\t$$.dirty = [-1];\n\t\t$$.fragment && $$.fragment.p($$.ctx, dirty);\n\t\t$$.after_update.forEach(add_render_callback);\n\t}\n}\n\n/**\n * Useful for example to execute remaining `afterUpdate` callbacks before executing `destroy`.\n * @param {Function[]} fns\n * @returns {void}\n */\nexport function flush_render_callbacks(fns) {\n\tconst filtered = [];\n\tconst targets = [];\n\trender_callbacks.forEach((c) => (fns.indexOf(c) === -1 ? filtered.push(c) : targets.push(c)));\n\ttargets.forEach((c) => c());\n\trender_callbacks = filtered;\n}\n","import { identity as linear, is_function, noop, run_all } from './utils.js';\nimport { now } from './environment.js';\nimport { loop } from './loop.js';\nimport { create_rule, delete_rule } from './style_manager.js';\nimport { custom_event } from './dom.js';\nimport { add_render_callback } from './scheduler.js';\n\n/**\n * @type {Promise<void> | null}\n */\nlet promise;\n\n/**\n * @returns {Promise<void>}\n */\nfunction wait() {\n\tif (!promise) {\n\t\tpromise = Promise.resolve();\n\t\tpromise.then(() => {\n\t\t\tpromise = null;\n\t\t});\n\t}\n\treturn promise;\n}\n\n/**\n * @param {Element} node\n * @param {INTRO | OUTRO | boolean} direction\n * @param {'start' | 'end'} kind\n * @returns {void}\n */\nfunction dispatch(node, direction, kind) {\n\tnode.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\n\nconst outroing = new Set();\n\n/**\n * @type {Outro}\n */\nlet outros;\n\n/**\n * @returns {void} */\nexport function group_outros() {\n\toutros = {\n\t\tr: 0,\n\t\tc: [],\n\t\tp: outros // parent group\n\t};\n}\n\n/**\n * @returns {void} */\nexport function check_outros() {\n\tif (!outros.r) {\n\t\trun_all(outros.c);\n\t}\n\toutros = outros.p;\n}\n\n/**\n * @param {import('./private.js').Fragment} block\n * @param {0 | 1} [local]\n * @returns {void}\n */\nexport function transition_in(block, local) {\n\tif (block && block.i) {\n\t\toutroing.delete(block);\n\t\tblock.i(local);\n\t}\n}\n\n/**\n * @param {import('./private.js').Fragment} block\n * @param {0 | 1} local\n * @param {0 | 1} [detach]\n * @param {() => void} [callback]\n * @returns {void}\n */\nexport function transition_out(block, local, detach, callback) {\n\tif (block && block.o) {\n\t\tif (outroing.has(block)) return;\n\t\toutroing.add(block);\n\t\toutros.c.push(() => {\n\t\t\toutroing.delete(block);\n\t\t\tif (callback) {\n\t\t\t\tif (detach) block.d(1);\n\t\t\t\tcallback();\n\t\t\t}\n\t\t});\n\t\tblock.o(local);\n\t} else if (callback) {\n\t\tcallback();\n\t}\n}\n\n/**\n * @type {import('../transition/public.js').TransitionConfig}\n */\nconst null_transition = { duration: 0 };\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @returns {{ start(): void; invalidate(): void; end(): void; }}\n */\nexport function create_in_transition(node, fn, params) {\n\t/**\n\t * @type {TransitionOptions} */\n\tconst options = { direction: 'in' };\n\tlet config = fn(node, params, options);\n\tlet running = false;\n\tlet animation_name;\n\tlet task;\n\tlet uid = 0;\n\n\t/**\n\t * @returns {void} */\n\tfunction cleanup() {\n\t\tif (animation_name) delete_rule(node, animation_name);\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction go() {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\t\tif (css) animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n\t\ttick(0, 1);\n\t\tconst start_time = now() + delay;\n\t\tconst end_time = start_time + duration;\n\t\tif (task) task.abort();\n\t\trunning = true;\n\t\tadd_render_callback(() => dispatch(node, true, 'start'));\n\t\ttask = loop((now) => {\n\t\t\tif (running) {\n\t\t\t\tif (now >= end_time) {\n\t\t\t\t\ttick(1, 0);\n\t\t\t\t\tdispatch(node, true, 'end');\n\t\t\t\t\tcleanup();\n\t\t\t\t\treturn (running = false);\n\t\t\t\t}\n\t\t\t\tif (now >= start_time) {\n\t\t\t\t\tconst t = easing((now - start_time) / duration);\n\t\t\t\t\ttick(t, 1 - t);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn running;\n\t\t});\n\t}\n\tlet started = false;\n\treturn {\n\t\tstart() {\n\t\t\tif (started) return;\n\t\t\tstarted = true;\n\t\t\tdelete_rule(node);\n\t\t\tif (is_function(config)) {\n\t\t\t\tconfig = config(options);\n\t\t\t\twait().then(go);\n\t\t\t} else {\n\t\t\t\tgo();\n\t\t\t}\n\t\t},\n\t\tinvalidate() {\n\t\t\tstarted = false;\n\t\t},\n\t\tend() {\n\t\t\tif (running) {\n\t\t\t\tcleanup();\n\t\t\t\trunning = false;\n\t\t\t}\n\t\t}\n\t};\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @returns {{ end(reset: any): void; }}\n */\nexport function create_out_transition(node, fn, params) {\n\t/** @type {TransitionOptions} */\n\tconst options = { direction: 'out' };\n\tlet config = fn(node, params, options);\n\tlet running = true;\n\tlet animation_name;\n\tconst group = outros;\n\tgroup.r += 1;\n\t/** @type {boolean} */\n\tlet original_inert_value;\n\n\t/**\n\t * @returns {void} */\n\tfunction go() {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\n\t\tif (css) animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n\n\t\tconst start_time = now() + delay;\n\t\tconst end_time = start_time + duration;\n\t\tadd_render_callback(() => dispatch(node, false, 'start'));\n\n\t\tif ('inert' in node) {\n\t\t\toriginal_inert_value = /** @type {HTMLElement} */ (node).inert;\n\t\t\tnode.inert = true;\n\t\t}\n\n\t\tloop((now) => {\n\t\t\tif (running) {\n\t\t\t\tif (now >= end_time) {\n\t\t\t\t\ttick(0, 1);\n\t\t\t\t\tdispatch(node, false, 'end');\n\t\t\t\t\tif (!--group.r) {\n\t\t\t\t\t\t// this will result in `end()` being called,\n\t\t\t\t\t\t// so we don't need to clean up here\n\t\t\t\t\t\trun_all(group.c);\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif (now >= start_time) {\n\t\t\t\t\tconst t = easing((now - start_time) / duration);\n\t\t\t\t\ttick(1 - t, t);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn running;\n\t\t});\n\t}\n\n\tif (is_function(config)) {\n\t\twait().then(() => {\n\t\t\t// @ts-ignore\n\t\t\tconfig = config(options);\n\t\t\tgo();\n\t\t});\n\t} else {\n\t\tgo();\n\t}\n\n\treturn {\n\t\tend(reset) {\n\t\t\tif (reset && 'inert' in node) {\n\t\t\t\tnode.inert = original_inert_value;\n\t\t\t}\n\t\t\tif (reset && config.tick) {\n\t\t\t\tconfig.tick(1, 0);\n\t\t\t}\n\t\t\tif (running) {\n\t\t\t\tif (animation_name) delete_rule(node, animation_name);\n\t\t\t\trunning = false;\n\t\t\t}\n\t\t}\n\t};\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @param {boolean} intro\n * @returns {{ run(b: 0 | 1): void; end(): void; }}\n */\nexport function create_bidirectional_transition(node, fn, params, intro) {\n\t/**\n\t * @type {TransitionOptions} */\n\tconst options = { direction: 'both' };\n\tlet config = fn(node, params, options);\n\tlet t = intro ? 0 : 1;\n\n\t/**\n\t * @type {Program | null} */\n\tlet running_program = null;\n\n\t/**\n\t * @type {PendingProgram | null} */\n\tlet pending_program = null;\n\tlet animation_name = null;\n\n\t/** @type {boolean} */\n\tlet original_inert_value;\n\n\t/**\n\t * @returns {void} */\n\tfunction clear_animation() {\n\t\tif (animation_name) delete_rule(node, animation_name);\n\t}\n\n\t/**\n\t * @param {PendingProgram} program\n\t * @param {number} duration\n\t * @returns {Program}\n\t */\n\tfunction init(program, duration) {\n\t\tconst d = /** @type {Program['d']} */ (program.b - t);\n\t\tduration *= Math.abs(d);\n\t\treturn {\n\t\t\ta: t,\n\t\t\tb: program.b,\n\t\t\td,\n\t\t\tduration,\n\t\t\tstart: program.start,\n\t\t\tend: program.start + duration,\n\t\t\tgroup: program.group\n\t\t};\n\t}\n\n\t/**\n\t * @param {INTRO | OUTRO} b\n\t * @returns {void}\n\t */\n\tfunction go(b) {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\n\t\t/**\n\t\t * @type {PendingProgram} */\n\t\tconst program = {\n\t\t\tstart: now() + delay,\n\t\t\tb\n\t\t};\n\n\t\tif (!b) {\n\t\t\t// @ts-ignore todo: improve typings\n\t\t\tprogram.group = outros;\n\t\t\toutros.r += 1;\n\t\t}\n\n\t\tif ('inert' in node) {\n\t\t\tif (b) {\n\t\t\t\tif (original_inert_value !== undefined) {\n\t\t\t\t\t// aborted/reversed outro — restore previous inert value\n\t\t\t\t\tnode.inert = original_inert_value;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toriginal_inert_value = /** @type {HTMLElement} */ (node).inert;\n\t\t\t\tnode.inert = true;\n\t\t\t}\n\t\t}\n\n\t\tif (running_program || pending_program) {\n\t\t\tpending_program = program;\n\t\t} else {\n\t\t\t// if this is an intro, and there's a delay, we need to do\n\t\t\t// an initial tick and/or apply CSS animation immediately\n\t\t\tif (css) {\n\t\t\t\tclear_animation();\n\t\t\t\tanimation_name = create_rule(node, t, b, duration, delay, easing, css);\n\t\t\t}\n\t\t\tif (b) tick(0, 1);\n\t\t\trunning_program = init(program, duration);\n\t\t\tadd_render_callback(() => dispatch(node, b, 'start'));\n\t\t\tloop((now) => {\n\t\t\t\tif (pending_program && now > pending_program.start) {\n\t\t\t\t\trunning_program = init(pending_program, duration);\n\t\t\t\t\tpending_program = null;\n\t\t\t\t\tdispatch(node, running_program.b, 'start');\n\t\t\t\t\tif (css) {\n\t\t\t\t\t\tclear_animation();\n\t\t\t\t\t\tanimation_name = create_rule(\n\t\t\t\t\t\t\tnode,\n\t\t\t\t\t\t\tt,\n\t\t\t\t\t\t\trunning_program.b,\n\t\t\t\t\t\t\trunning_program.duration,\n\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\teasing,\n\t\t\t\t\t\t\tconfig.css\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (running_program) {\n\t\t\t\t\tif (now >= running_program.end) {\n\t\t\t\t\t\ttick((t = running_program.b), 1 - t);\n\t\t\t\t\t\tdispatch(node, running_program.b, 'end');\n\t\t\t\t\t\tif (!pending_program) {\n\t\t\t\t\t\t\t// we're done\n\t\t\t\t\t\t\tif (running_program.b) {\n\t\t\t\t\t\t\t\t// intro — we can tidy up immediately\n\t\t\t\t\t\t\t\tclear_animation();\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// outro — needs to be coordinated\n\t\t\t\t\t\t\t\tif (!--running_program.group.r) run_all(running_program.group.c);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\trunning_program = null;\n\t\t\t\t\t} else if (now >= running_program.start) {\n\t\t\t\t\t\tconst p = now - running_program.start;\n\t\t\t\t\t\tt = running_program.a + running_program.d * easing(p / running_program.duration);\n\t\t\t\t\t\ttick(t, 1 - t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn !!(running_program || pending_program);\n\t\t\t});\n\t\t}\n\t}\n\treturn {\n\t\trun(b) {\n\t\t\tif (is_function(config)) {\n\t\t\t\twait().then(() => {\n\t\t\t\t\tconst opts = { direction: b ? 'in' : 'out' };\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tconfig = config(opts);\n\t\t\t\t\tgo(b);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tgo(b);\n\t\t\t}\n\t\t},\n\t\tend() {\n\t\t\tclear_animation();\n\t\t\trunning_program = pending_program = null;\n\t\t}\n\t};\n}\n\n/** @typedef {1} INTRO */\n/** @typedef {0} OUTRO */\n/** @typedef {{ direction: 'in' | 'out' | 'both' }} TransitionOptions */\n/** @typedef {(node: Element, params: any, options: TransitionOptions) => import('../transition/public.js').TransitionConfig} TransitionFn */\n\n/**\n * @typedef {Object} Outro\n * @property {number} r\n * @property {Function[]} c\n * @property {Object} p\n */\n\n/**\n * @typedef {Object} PendingProgram\n * @property {number} start\n * @property {INTRO|OUTRO} b\n * @property {Outro} [group]\n */\n\n/**\n * @typedef {Object} Program\n * @property {number} a\n * @property {INTRO|OUTRO} b\n * @property {1|-1} d\n * @property {number} duration\n * @property {number} start\n * @property {number} end\n * @property {Outro} [group]\n */\n","import { transition_in, transition_out } from './transitions.js';\nimport { run_all } from './utils.js';\n\n// general each functions:\n\nexport function ensure_array_like(array_like_or_iterator) {\n\treturn array_like_or_iterator?.length !== undefined\n\t\t? array_like_or_iterator\n\t\t: Array.from(array_like_or_iterator);\n}\n\n// keyed each functions:\n\n/** @returns {void} */\nexport function destroy_block(block, lookup) {\n\tblock.d(1);\n\tlookup.delete(block.key);\n}\n\n/** @returns {void} */\nexport function outro_and_destroy_block(block, lookup) {\n\ttransition_out(block, 1, 1, () => {\n\t\tlookup.delete(block.key);\n\t});\n}\n\n/** @returns {void} */\nexport function fix_and_destroy_block(block, lookup) {\n\tblock.f();\n\tdestroy_block(block, lookup);\n}\n\n/** @returns {void} */\nexport function fix_and_outro_and_destroy_block(block, lookup) {\n\tblock.f();\n\toutro_and_destroy_block(block, lookup);\n}\n\n/** @returns {any[]} */\nexport function update_keyed_each(\n\told_blocks,\n\tdirty,\n\tget_key,\n\tdynamic,\n\tctx,\n\tlist,\n\tlookup,\n\tnode,\n\tdestroy,\n\tcreate_each_block,\n\tnext,\n\tget_context\n) {\n\tlet o = old_blocks.length;\n\tlet n = list.length;\n\tlet i = o;\n\tconst old_indexes = {};\n\twhile (i--) old_indexes[old_blocks[i].key] = i;\n\tconst new_blocks = [];\n\tconst new_lookup = new Map();\n\tconst deltas = new Map();\n\tconst updates = [];\n\ti = n;\n\twhile (i--) {\n\t\tconst child_ctx = get_context(ctx, list, i);\n\t\tconst key = get_key(child_ctx);\n\t\tlet block = lookup.get(key);\n\t\tif (!block) {\n\t\t\tblock = create_each_block(key, child_ctx);\n\t\t\tblock.c();\n\t\t} else if (dynamic) {\n\t\t\t// defer updates until all the DOM shuffling is done\n\t\t\tupdates.push(() => block.p(child_ctx, dirty));\n\t\t}\n\t\tnew_lookup.set(key, (new_blocks[i] = block));\n\t\tif (key in old_indexes) deltas.set(key, Math.abs(i - old_indexes[key]));\n\t}\n\tconst will_move = new Set();\n\tconst did_move = new Set();\n\t/** @returns {void} */\n\tfunction insert(block) {\n\t\ttransition_in(block, 1);\n\t\tblock.m(node, next);\n\t\tlookup.set(block.key, block);\n\t\tnext = block.first;\n\t\tn--;\n\t}\n\twhile (o && n) {\n\t\tconst new_block = new_blocks[n - 1];\n\t\tconst old_block = old_blocks[o - 1];\n\t\tconst new_key = new_block.key;\n\t\tconst old_key = old_block.key;\n\t\tif (new_block === old_block) {\n\t\t\t// do nothing\n\t\t\tnext = new_block.first;\n\t\t\to--;\n\t\t\tn--;\n\t\t} else if (!new_lookup.has(old_key)) {\n\t\t\t// remove old block\n\t\t\tdestroy(old_block, lookup);\n\t\t\to--;\n\t\t} else if (!lookup.has(new_key) || will_move.has(new_key)) {\n\t\t\tinsert(new_block);\n\t\t} else if (did_move.has(old_key)) {\n\t\t\to--;\n\t\t} else if (deltas.get(new_key) > deltas.get(old_key)) {\n\t\t\tdid_move.add(new_key);\n\t\t\tinsert(new_block);\n\t\t} else {\n\t\t\twill_move.add(old_key);\n\t\t\to--;\n\t\t}\n\t}\n\twhile (o--) {\n\t\tconst old_block = old_blocks[o];\n\t\tif (!new_lookup.has(old_block.key)) destroy(old_block, lookup);\n\t}\n\twhile (n) insert(new_blocks[n - 1]);\n\trun_all(updates);\n\treturn new_blocks;\n}\n\n/** @returns {void} */\nexport function validate_each_keys(ctx, list, get_context, get_key) {\n\tconst keys = new Map();\n\tfor (let i = 0; i < list.length; i++) {\n\t\tconst key = get_key(get_context(ctx, list, i));\n\t\tif (keys.has(key)) {\n\t\t\tlet value = '';\n\t\t\ttry {\n\t\t\t\tvalue = `with value '${String(key)}' `;\n\t\t\t} catch (e) {\n\t\t\t\t// can't stringify\n\t\t\t}\n\t\t\tthrow new Error(\n\t\t\t\t`Cannot have duplicate keys in a keyed each: Keys at index ${keys.get(\n\t\t\t\t\tkey\n\t\t\t\t)} and ${i} ${value}are duplicates`\n\t\t\t);\n\t\t}\n\t\tkeys.set(key, i);\n\t}\n}\n","import {\n\tadd_render_callback,\n\tflush,\n\tflush_render_callbacks,\n\tschedule_update,\n\tdirty_components\n} from './scheduler.js';\nimport { current_component, set_current_component } from './lifecycle.js';\nimport { blank_object, is_empty, is_function, run, run_all, noop } from './utils.js';\nimport {\n\tchildren,\n\tdetach,\n\tstart_hydrating,\n\tend_hydrating,\n\tget_custom_elements_slots,\n\tinsert,\n\telement,\n\tattr\n} from './dom.js';\nimport { transition_in } from './transitions.js';\n\n/** @returns {void} */\nexport function bind(component, name, callback) {\n\tconst index = component.$$.props[name];\n\tif (index !== undefined) {\n\t\tcomponent.$$.bound[index] = callback;\n\t\tcallback(component.$$.ctx[index]);\n\t}\n}\n\n/** @returns {void} */\nexport function create_component(block) {\n\tblock && block.c();\n}\n\n/** @returns {void} */\nexport function claim_component(block, parent_nodes) {\n\tblock && block.l(parent_nodes);\n}\n\n/** @returns {void} */\nexport function mount_component(component, target, anchor) {\n\tconst { fragment, after_update } = component.$$;\n\tfragment && fragment.m(target, anchor);\n\t// onMount happens before the initial afterUpdate\n\tadd_render_callback(() => {\n\t\tconst new_on_destroy = component.$$.on_mount.map(run).filter(is_function);\n\t\t// if the component was destroyed immediately\n\t\t// it will update the `$$.on_destroy` reference to `null`.\n\t\t// the destructured on_destroy may still reference to the old array\n\t\tif (component.$$.on_destroy) {\n\t\t\tcomponent.$$.on_destroy.push(...new_on_destroy);\n\t\t} else {\n\t\t\t// Edge case - component was destroyed immediately,\n\t\t\t// most likely as a result of a binding initialising\n\t\t\trun_all(new_on_destroy);\n\t\t}\n\t\tcomponent.$$.on_mount = [];\n\t});\n\tafter_update.forEach(add_render_callback);\n}\n\n/** @returns {void} */\nexport function destroy_component(component, detaching) {\n\tconst $$ = component.$$;\n\tif ($$.fragment !== null) {\n\t\tflush_render_callbacks($$.after_update);\n\t\trun_all($$.on_destroy);\n\t\t$$.fragment && $$.fragment.d(detaching);\n\t\t// TODO null out other refs, including component.$$ (but need to\n\t\t// preserve final state?)\n\t\t$$.on_destroy = $$.fragment = null;\n\t\t$$.ctx = [];\n\t}\n}\n\n/** @returns {void} */\nfunction make_dirty(component, i) {\n\tif (component.$$.dirty[0] === -1) {\n\t\tdirty_components.push(component);\n\t\tschedule_update();\n\t\tcomponent.$$.dirty.fill(0);\n\t}\n\tcomponent.$$.dirty[(i / 31) | 0] |= 1 << i % 31;\n}\n\n// TODO: Document the other params\n/**\n * @param {SvelteComponent} component\n * @param {import('./public.js').ComponentConstructorOptions} options\n *\n * @param {import('./utils.js')['not_equal']} not_equal Used to compare props and state values.\n * @param {(target: Element | ShadowRoot) => void} [append_styles] Function that appends styles to the DOM when the component is first initialised.\n * This will be the `add_css` function from the compiled component.\n *\n * @returns {void}\n */\nexport function init(\n\tcomponent,\n\toptions,\n\tinstance,\n\tcreate_fragment,\n\tnot_equal,\n\tprops,\n\tappend_styles = null,\n\tdirty = [-1]\n) {\n\tconst parent_component = current_component;\n\tset_current_component(component);\n\t/** @type {import('./private.js').T$$} */\n\tconst $$ = (component.$$ = {\n\t\tfragment: null,\n\t\tctx: [],\n\t\t// state\n\t\tprops,\n\t\tupdate: noop,\n\t\tnot_equal,\n\t\tbound: blank_object(),\n\t\t// lifecycle\n\t\ton_mount: [],\n\t\ton_destroy: [],\n\t\ton_disconnect: [],\n\t\tbefore_update: [],\n\t\tafter_update: [],\n\t\tcontext: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n\t\t// everything else\n\t\tcallbacks: blank_object(),\n\t\tdirty,\n\t\tskip_bound: false,\n\t\troot: options.target || parent_component.$$.root\n\t});\n\tappend_styles && append_styles($$.root);\n\tlet ready = false;\n\t$$.ctx = instance\n\t\t? instance(component, options.props || {}, (i, ret, ...rest) => {\n\t\t\t\tconst value = rest.length ? rest[0] : ret;\n\t\t\t\tif ($$.ctx && not_equal($$.ctx[i], ($$.ctx[i] = value))) {\n\t\t\t\t\tif (!$$.skip_bound && $$.bound[i]) $$.bound[i](value);\n\t\t\t\t\tif (ready) make_dirty(component, i);\n\t\t\t\t}\n\t\t\t\treturn ret;\n\t\t  })\n\t\t: [];\n\t$$.update();\n\tready = true;\n\trun_all($$.before_update);\n\t// `false` as a special case of no DOM component\n\t$$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n\tif (options.target) {\n\t\tif (options.hydrate) {\n\t\t\tstart_hydrating();\n\t\t\t// TODO: what is the correct type here?\n\t\t\t// @ts-expect-error\n\t\t\tconst nodes = children(options.target);\n\t\t\t$$.fragment && $$.fragment.l(nodes);\n\t\t\tnodes.forEach(detach);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\t$$.fragment && $$.fragment.c();\n\t\t}\n\t\tif (options.intro) transition_in(component.$$.fragment);\n\t\tmount_component(component, options.target, options.anchor);\n\t\tend_hydrating();\n\t\tflush();\n\t}\n\tset_current_component(parent_component);\n}\n\nexport let SvelteElement;\n\nif (typeof HTMLElement === 'function') {\n\tSvelteElement = class extends HTMLElement {\n\t\t/** The Svelte component constructor */\n\t\t$$ctor;\n\t\t/** Slots */\n\t\t$$s;\n\t\t/** The Svelte component instance */\n\t\t$$c;\n\t\t/** Whether or not the custom element is connected */\n\t\t$$cn = false;\n\t\t/** Component props data */\n\t\t$$d = {};\n\t\t/** `true` if currently in the process of reflecting component props back to attributes */\n\t\t$$r = false;\n\t\t/** @type {Record<string, CustomElementPropDefinition>} Props definition (name, reflected, type etc) */\n\t\t$$p_d = {};\n\t\t/** @type {Record<string, Function[]>} Event listeners */\n\t\t$$l = {};\n\t\t/** @type {Map<Function, Function>} Event listener unsubscribe functions */\n\t\t$$l_u = new Map();\n\n\t\tconstructor($$componentCtor, $$slots, use_shadow_dom) {\n\t\t\tsuper();\n\t\t\tthis.$$ctor = $$componentCtor;\n\t\t\tthis.$$s = $$slots;\n\t\t\tif (use_shadow_dom) {\n\t\t\t\tthis.attachShadow({ mode: 'open' });\n\t\t\t}\n\t\t}\n\n\t\taddEventListener(type, listener, options) {\n\t\t\t// We can't determine upfront if the event is a custom event or not, so we have to\n\t\t\t// listen to both. If someone uses a custom event with the same name as a regular\n\t\t\t// browser event, this fires twice - we can't avoid that.\n\t\t\tthis.$$l[type] = this.$$l[type] || [];\n\t\t\tthis.$$l[type].push(listener);\n\t\t\tif (this.$$c) {\n\t\t\t\tconst unsub = this.$$c.$on(type, listener);\n\t\t\t\tthis.$$l_u.set(listener, unsub);\n\t\t\t}\n\t\t\tsuper.addEventListener(type, listener, options);\n\t\t}\n\n\t\tremoveEventListener(type, listener, options) {\n\t\t\tsuper.removeEventListener(type, listener, options);\n\t\t\tif (this.$$c) {\n\t\t\t\tconst unsub = this.$$l_u.get(listener);\n\t\t\t\tif (unsub) {\n\t\t\t\t\tunsub();\n\t\t\t\t\tthis.$$l_u.delete(listener);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tasync connectedCallback() {\n\t\t\tthis.$$cn = true;\n\t\t\tif (!this.$$c) {\n\t\t\t\t// We wait one tick to let possible child slot elements be created/mounted\n\t\t\t\tawait Promise.resolve();\n\t\t\t\tif (!this.$$cn || this.$$c) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tfunction create_slot(name) {\n\t\t\t\t\treturn () => {\n\t\t\t\t\t\tlet node;\n\t\t\t\t\t\tconst obj = {\n\t\t\t\t\t\t\tc: function create() {\n\t\t\t\t\t\t\t\tnode = element('slot');\n\t\t\t\t\t\t\t\tif (name !== 'default') {\n\t\t\t\t\t\t\t\t\tattr(node, 'name', name);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t * @param {HTMLElement} target\n\t\t\t\t\t\t\t * @param {HTMLElement} [anchor]\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\tm: function mount(target, anchor) {\n\t\t\t\t\t\t\t\tinsert(target, node, anchor);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\td: function destroy(detaching) {\n\t\t\t\t\t\t\t\tif (detaching) {\n\t\t\t\t\t\t\t\t\tdetach(node);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t\treturn obj;\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tconst $$slots = {};\n\t\t\t\tconst existing_slots = get_custom_elements_slots(this);\n\t\t\t\tfor (const name of this.$$s) {\n\t\t\t\t\tif (name in existing_slots) {\n\t\t\t\t\t\t$$slots[name] = [create_slot(name)];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (const attribute of this.attributes) {\n\t\t\t\t\t// this.$$data takes precedence over this.attributes\n\t\t\t\t\tconst name = this.$$g_p(attribute.name);\n\t\t\t\t\tif (!(name in this.$$d)) {\n\t\t\t\t\t\tthis.$$d[name] = get_custom_element_value(name, attribute.value, this.$$p_d, 'toProp');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Port over props that were set programmatically before ce was initialized\n\t\t\t\tfor (const key in this.$$p_d) {\n\t\t\t\t\tif (!(key in this.$$d) && this[key] !== undefined) {\n\t\t\t\t\t\tthis.$$d[key] = this[key]; // don't transform, these were set through JavaScript\n\t\t\t\t\t\tdelete this[key]; // remove the property that shadows the getter/setter\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.$$c = new this.$$ctor({\n\t\t\t\t\ttarget: this.shadowRoot || this,\n\t\t\t\t\tprops: {\n\t\t\t\t\t\t...this.$$d,\n\t\t\t\t\t\t$$slots,\n\t\t\t\t\t\t$$scope: {\n\t\t\t\t\t\t\tctx: []\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// Reflect component props as attributes\n\t\t\t\tconst reflect_attributes = () => {\n\t\t\t\t\tthis.$$r = true;\n\t\t\t\t\tfor (const key in this.$$p_d) {\n\t\t\t\t\t\tthis.$$d[key] = this.$$c.$$.ctx[this.$$c.$$.props[key]];\n\t\t\t\t\t\tif (this.$$p_d[key].reflect) {\n\t\t\t\t\t\t\tconst attribute_value = get_custom_element_value(\n\t\t\t\t\t\t\t\tkey,\n\t\t\t\t\t\t\t\tthis.$$d[key],\n\t\t\t\t\t\t\t\tthis.$$p_d,\n\t\t\t\t\t\t\t\t'toAttribute'\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif (attribute_value == null) {\n\t\t\t\t\t\t\t\tthis.removeAttribute(this.$$p_d[key].attribute || key);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.setAttribute(this.$$p_d[key].attribute || key, attribute_value);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis.$$r = false;\n\t\t\t\t};\n\t\t\t\tthis.$$c.$$.after_update.push(reflect_attributes);\n\t\t\t\treflect_attributes(); // once initially because after_update is added too late for first render\n\n\t\t\t\tfor (const type in this.$$l) {\n\t\t\t\t\tfor (const listener of this.$$l[type]) {\n\t\t\t\t\t\tconst unsub = this.$$c.$on(type, listener);\n\t\t\t\t\t\tthis.$$l_u.set(listener, unsub);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.$$l = {};\n\t\t\t}\n\t\t}\n\n\t\t// We don't need this when working within Svelte code, but for compatibility of people using this outside of Svelte\n\t\t// and setting attributes through setAttribute etc, this is helpful\n\t\tattributeChangedCallback(attr, _oldValue, newValue) {\n\t\t\tif (this.$$r) return;\n\t\t\tattr = this.$$g_p(attr);\n\t\t\tthis.$$d[attr] = get_custom_element_value(attr, newValue, this.$$p_d, 'toProp');\n\t\t\tthis.$$c?.$set({ [attr]: this.$$d[attr] });\n\t\t}\n\n\t\tdisconnectedCallback() {\n\t\t\tthis.$$cn = false;\n\t\t\t// In a microtask, because this could be a move within the DOM\n\t\t\tPromise.resolve().then(() => {\n\t\t\t\tif (!this.$$cn && this.$$c) {\n\t\t\t\t\tthis.$$c.$destroy();\n\t\t\t\t\tthis.$$c = undefined;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t$$g_p(attribute_name) {\n\t\t\treturn (\n\t\t\t\tObject.keys(this.$$p_d).find(\n\t\t\t\t\t(key) =>\n\t\t\t\t\t\tthis.$$p_d[key].attribute === attribute_name ||\n\t\t\t\t\t\t(!this.$$p_d[key].attribute && key.toLowerCase() === attribute_name)\n\t\t\t\t) || attribute_name\n\t\t\t);\n\t\t}\n\t};\n}\n\n/**\n * @param {string} prop\n * @param {any} value\n * @param {Record<string, CustomElementPropDefinition>} props_definition\n * @param {'toAttribute' | 'toProp'} [transform]\n */\nfunction get_custom_element_value(prop, value, props_definition, transform) {\n\tconst type = props_definition[prop]?.type;\n\tvalue = type === 'Boolean' && typeof value !== 'boolean' ? value != null : value;\n\tif (!transform || !props_definition[prop]) {\n\t\treturn value;\n\t} else if (transform === 'toAttribute') {\n\t\tswitch (type) {\n\t\t\tcase 'Object':\n\t\t\tcase 'Array':\n\t\t\t\treturn value == null ? null : JSON.stringify(value);\n\t\t\tcase 'Boolean':\n\t\t\t\treturn value ? '' : null;\n\t\t\tcase 'Number':\n\t\t\t\treturn value == null ? null : value;\n\t\t\tdefault:\n\t\t\t\treturn value;\n\t\t}\n\t} else {\n\t\tswitch (type) {\n\t\t\tcase 'Object':\n\t\t\tcase 'Array':\n\t\t\t\treturn value && JSON.parse(value);\n\t\t\tcase 'Boolean':\n\t\t\t\treturn value; // conversion already handled above\n\t\t\tcase 'Number':\n\t\t\t\treturn value != null ? +value : value;\n\t\t\tdefault:\n\t\t\t\treturn value;\n\t\t}\n\t}\n}\n\n/**\n * @internal\n *\n * Turn a Svelte component into a custom element.\n * @param {import('./public.js').ComponentType} Component  A Svelte component constructor\n * @param {Record<string, CustomElementPropDefinition>} props_definition  The props to observe\n * @param {string[]} slots  The slots to create\n * @param {string[]} accessors  Other accessors besides the ones for props the component has\n * @param {boolean} use_shadow_dom  Whether to use shadow DOM\n * @param {(ce: new () => HTMLElement) => new () => HTMLElement} [extend]\n */\nexport function create_custom_element(\n\tComponent,\n\tprops_definition,\n\tslots,\n\taccessors,\n\tuse_shadow_dom,\n\textend\n) {\n\tlet Class = class extends SvelteElement {\n\t\tconstructor() {\n\t\t\tsuper(Component, slots, use_shadow_dom);\n\t\t\tthis.$$p_d = props_definition;\n\t\t}\n\t\tstatic get observedAttributes() {\n\t\t\treturn Object.keys(props_definition).map((key) =>\n\t\t\t\t(props_definition[key].attribute || key).toLowerCase()\n\t\t\t);\n\t\t}\n\t};\n\tObject.keys(props_definition).forEach((prop) => {\n\t\tObject.defineProperty(Class.prototype, prop, {\n\t\t\tget() {\n\t\t\t\treturn this.$$c && prop in this.$$c ? this.$$c[prop] : this.$$d[prop];\n\t\t\t},\n\t\t\tset(value) {\n\t\t\t\tvalue = get_custom_element_value(prop, value, props_definition);\n\t\t\t\tthis.$$d[prop] = value;\n\t\t\t\tthis.$$c?.$set({ [prop]: value });\n\t\t\t}\n\t\t});\n\t});\n\taccessors.forEach((accessor) => {\n\t\tObject.defineProperty(Class.prototype, accessor, {\n\t\t\tget() {\n\t\t\t\treturn this.$$c?.[accessor];\n\t\t\t}\n\t\t});\n\t});\n\tif (extend) {\n\t\t// @ts-expect-error - assigning here is fine\n\t\tClass = extend(Class);\n\t}\n\tComponent.element = /** @type {any} */ (Class);\n\treturn Class;\n}\n\n/**\n * Base class for Svelte components. Used when dev=false.\n *\n * @template {Record<string, any>} [Props=any]\n * @template {Record<string, any>} [Events=any]\n */\nexport class SvelteComponent {\n\t/**\n\t * ### PRIVATE API\n\t *\n\t * Do not use, may change at any time\n\t *\n\t * @type {any}\n\t */\n\t$$ = undefined;\n\t/**\n\t * ### PRIVATE API\n\t *\n\t * Do not use, may change at any time\n\t *\n\t * @type {any}\n\t */\n\t$$set = undefined;\n\n\t/** @returns {void} */\n\t$destroy() {\n\t\tdestroy_component(this, 1);\n\t\tthis.$destroy = noop;\n\t}\n\n\t/**\n\t * @template {Extract<keyof Events, string>} K\n\t * @param {K} type\n\t * @param {((e: Events[K]) => void) | null | undefined} callback\n\t * @returns {() => void}\n\t */\n\t$on(type, callback) {\n\t\tif (!is_function(callback)) {\n\t\t\treturn noop;\n\t\t}\n\t\tconst callbacks = this.$$.callbacks[type] || (this.$$.callbacks[type] = []);\n\t\tcallbacks.push(callback);\n\t\treturn () => {\n\t\t\tconst index = callbacks.indexOf(callback);\n\t\t\tif (index !== -1) callbacks.splice(index, 1);\n\t\t};\n\t}\n\n\t/**\n\t * @param {Partial<Props>} props\n\t * @returns {void}\n\t */\n\t$set(props) {\n\t\tif (this.$$set && !is_empty(props)) {\n\t\t\tthis.$$.skip_bound = true;\n\t\t\tthis.$$set(props);\n\t\t\tthis.$$.skip_bound = false;\n\t\t}\n\t}\n}\n\n/**\n * @typedef {Object} CustomElementPropDefinition\n * @property {string} [attribute]\n * @property {boolean} [reflect]\n * @property {'String'|'Boolean'|'Number'|'Array'|'Object'} [type]\n */\n","<script>\n  import { isFunction } from '../utils/type-check.ts';\n\n  export let config, step;\n  let action, classes, disabled, label, secondary, text;\n\n  $: {\n    action = config.action ? config.action.bind(step.tour) : null;\n    classes = config.classes;\n    disabled = config.disabled ? getConfigOption(config.disabled) : false;\n    label = config.label ? getConfigOption(config.label) : null;\n    secondary = config.secondary;\n    text = config.text ? getConfigOption(config.text) : null;\n  }\n\n  function getConfigOption(option) {\n    if (isFunction(option)) {\n      return (option = option.call(step));\n    }\n    return option;\n  }\n</script>\n\n<button\n  aria-label={label ? label : null}\n  class={`${classes || ''} shepherd-button ${\n    secondary ? 'shepherd-button-secondary' : ''\n  }`}\n  {disabled}\n  on:click={action}\n  tabindex=\"0\"\n  type=\"button\"\n>\n  {@html text}\n</button>\n\n<style global>\n  .shepherd-button {\n    background: rgb(50, 136, 230);\n    border: 0;\n    border-radius: 3px;\n    color: rgba(255, 255, 255, 0.75);\n    cursor: pointer;\n    margin-right: 0.5rem;\n    padding: 0.5rem 1.5rem;\n    transition: all 0.5s ease;\n  }\n\n  .shepherd-button:not(:disabled):hover {\n    background: rgb(25, 111, 204);\n    color: rgba(255, 255, 255, 0.75);\n  }\n\n  .shepherd-button.shepherd-button-secondary {\n    background: rgb(241, 242, 243);\n    color: rgba(0, 0, 0, 0.75);\n  }\n\n  .shepherd-button.shepherd-button-secondary:not(:disabled):hover {\n    background: rgb(214, 217, 219);\n    color: rgba(0, 0, 0, 0.75);\n  }\n\n  .shepherd-button:disabled {\n    cursor: not-allowed;\n  }\n</style>\n","import { PUBLIC_VERSION } from '../../../shared/version.js';\n\nif (typeof window !== 'undefined')\n\t// @ts-ignore\n\t(window.__svelte || (window.__svelte = { v: new Set() })).v.add(PUBLIC_VERSION);\n","// generated during release, do not modify\n\n/**\n * The current version, as set in package.json.\n *\n * https://svelte.dev/docs/svelte-compiler#svelte-version\n * @type {string}\n */\nexport const VERSION = '4.2.19';\nexport const PUBLIC_VERSION = '4';\n","<script>\n  import ShepherdButton from './shepherd-button.svelte';\n\n  export let step;\n\n  $: buttons = step.options.buttons;\n</script>\n\n<footer class=\"shepherd-footer\">\n  {#if buttons}\n    {#each buttons as config}\n      <ShepherdButton {config} {step} />\n    {/each}\n  {/if}\n</footer>\n\n<style global>\n  .shepherd-footer {\n    border-bottom-left-radius: 5px;\n    border-bottom-right-radius: 5px;\n    display: flex;\n    justify-content: flex-end;\n    padding: 0 0.75rem 0.75rem;\n  }\n\n  .shepherd-footer .shepherd-button:last-child {\n    margin-right: 0;\n  }\n</style>\n","<script>\n  export let cancelIcon, step;\n\n  /**\n   * Add a click listener to the cancel link that cancels the tour\n   */\n  const handleCancelClick = (e) => {\n    e.preventDefault();\n    step.cancel();\n  };\n</script>\n\n<button\n  aria-label={cancelIcon.label ? cancelIcon.label : 'Close Tour'}\n  class=\"shepherd-cancel-icon\"\n  on:click={handleCancelClick}\n  type=\"button\"\n>\n  <span aria-hidden=\"true\">&times;</span>\n</button>\n\n<style global>\n  .shepherd-cancel-icon {\n    background: transparent;\n    border: none;\n    color: rgba(128, 128, 128, 0.75);\n    font-size: 2em;\n    cursor: pointer;\n    font-weight: normal;\n    margin: 0;\n    padding: 0;\n    transition: color 0.5s ease;\n  }\n\n  .shepherd-cancel-icon:hover {\n    color: rgba(0, 0, 0, 0.75);\n  }\n\n  .shepherd-has-title .shepherd-content .shepherd-cancel-icon {\n    color: rgba(128, 128, 128, 0.75);\n  }\n\n  .shepherd-has-title .shepherd-content .shepherd-cancel-icon:hover {\n    color: rgba(0, 0, 0, 0.75);\n  }\n</style>\n","<script>\n  import { afterUpdate } from 'svelte';\n  import { isFunction } from '../utils/type-check.ts';\n\n  export let labelId, element, title;\n\n  afterUpdate(() => {\n    if (isFunction(title)) {\n      title = title();\n    }\n\n    element.innerHTML = title;\n  });\n</script>\n\n<!-- svelte-ignore a11y-missing-content -->\n<h3 bind:this={element} id={labelId} class=\"shepherd-title\"></h3>\n\n<style global>\n  .shepherd-title {\n    color: rgba(0, 0, 0, 0.75);\n    display: flex;\n    font-size: 1rem;\n    font-weight: normal;\n    flex: 1 0 auto;\n    margin: 0;\n    padding: 0;\n  }\n</style>\n","<script>\n  import ShepherdCancelIcon from './shepherd-cancel-icon.svelte';\n  import ShepherdTitle from './shepherd-title.svelte';\n\n  export let labelId, step;\n  let title, cancelIcon;\n\n  $: {\n    title = step.options.title;\n    cancelIcon = step.options.cancelIcon;\n  }\n</script>\n\n<header class=\"shepherd-header\">\n  {#if title}\n    <ShepherdTitle {labelId} {title} />\n  {/if}\n\n  {#if cancelIcon && cancelIcon.enabled}\n    <ShepherdCancelIcon {cancelIcon} {step} />\n  {/if}\n</header>\n\n<style global>\n  .shepherd-header {\n    align-items: center;\n    border-top-left-radius: 5px;\n    border-top-right-radius: 5px;\n    display: flex;\n    justify-content: flex-end;\n    line-height: 2em;\n    padding: 0.75rem 0.75rem 0;\n  }\n\n  .shepherd-has-title .shepherd-content .shepherd-header {\n    background: #e6e6e6;\n    padding: 1em;\n  }\n</style>\n","<script>\n  import { afterUpdate } from 'svelte';\n  import { isHTMLElement, isFunction } from '../utils/type-check.ts';\n\n  export let descriptionId, element, step;\n\n  afterUpdate(() => {\n    let { text } = step.options;\n\n    if (isFunction(text)) {\n      text = text.call(step);\n    }\n\n    if (isHTMLElement(text)) {\n      element.appendChild(text);\n    } else {\n      element.innerHTML = text;\n    }\n  });\n</script>\n\n<div bind:this={element} class=\"shepherd-text\" id={descriptionId}></div>\n\n<style global>\n  .shepherd-text {\n    color: rgba(0, 0, 0, 0.75);\n    font-size: 1rem;\n    line-height: 1.3em;\n    padding: 0.75em;\n  }\n\n  .shepherd-text p {\n    margin-top: 0;\n  }\n\n  .shepherd-text p:last-child {\n    margin-bottom: 0;\n  }\n</style>\n","<script>\n  import ShepherdFooter from './shepherd-footer.svelte';\n  import ShepherdHeader from './shepherd-header.svelte';\n  import ShepherdText from './shepherd-text.svelte';\n  import { isUndefined } from '../utils/type-check.ts';\n\n  export let descriptionId, labelId, step;\n</script>\n\n<div class=\"shepherd-content\" tabindex=\"0\">\n  {#if !isUndefined(step.options.title) || (step.options.cancelIcon && step.options.cancelIcon.enabled)}\n    <ShepherdHeader {labelId} {step} />\n  {/if}\n\n  {#if !isUndefined(step.options.text)}\n    <ShepherdText {descriptionId} {step} />\n  {/if}\n\n  {#if Array.isArray(step.options.buttons) && step.options.buttons.length}\n    <ShepherdFooter {step} />\n  {/if}\n</div>\n\n<style global>\n  .shepherd-content {\n    border-radius: 5px;\n    outline: none;\n    padding: 0;\n  }\n</style>\n","<script>\n  import { onMount, afterUpdate } from 'svelte';\n  import ShepherdContent from './shepherd-content.svelte';\n  import { isUndefined, isString } from '../utils/type-check.ts';\n\n  const KEY_TAB = 9;\n  const KEY_ESC = 27;\n  const LEFT_ARROW = 37;\n  const RIGHT_ARROW = 39;\n\n  export let classPrefix,\n    element,\n    descriptionId,\n    firstFocusableElement,\n    focusableElements,\n    labelId,\n    lastFocusableElement,\n    step,\n    dataStepId;\n\n  let hasCancelIcon, hasTitle, classes;\n\n  $: {\n    hasCancelIcon =\n      step.options &&\n      step.options.cancelIcon &&\n      step.options.cancelIcon.enabled;\n    hasTitle = step.options && step.options.title;\n  }\n\n  export const getElement = () => element;\n\n  onMount(() => {\n    // Get all elements that are focusable\n    dataStepId = { [`data-${classPrefix}shepherd-step-id`]: step.id };\n    focusableElements = element.querySelectorAll(\n      'a[href], area[href], input:not([disabled]), select:not([disabled]), textarea:not([disabled]), button:not([disabled]), [tabindex=\"0\"]'\n    );\n    firstFocusableElement = focusableElements[0];\n    lastFocusableElement = focusableElements[focusableElements.length - 1];\n  });\n\n  afterUpdate(() => {\n    if (classes !== step.options.classes) {\n      updateDynamicClasses();\n    }\n  });\n\n  function updateDynamicClasses() {\n    removeClasses(classes);\n    classes = step.options.classes;\n    addClasses(classes);\n  }\n\n  function removeClasses(classes) {\n    if (isString(classes)) {\n      const oldClasses = getClassesArray(classes);\n      if (oldClasses.length) {\n        element.classList.remove(...oldClasses);\n      }\n    }\n  }\n\n  function addClasses(classes) {\n    if (isString(classes)) {\n      const newClasses = getClassesArray(classes);\n      if (newClasses.length) {\n        element.classList.add(...newClasses);\n      }\n    }\n  }\n\n  function getClassesArray(classes) {\n    return classes.split(' ').filter((className) => !!className.length);\n  }\n\n  /**\n   * Setup keydown events to allow closing the modal with ESC\n   *\n   * Borrowed from this great post! https://bitsofco.de/accessible-modal-dialog/\n   *\n   * @private\n   */\n  const handleKeyDown = (e) => {\n    const { tour } = step;\n    switch (e.keyCode) {\n      case KEY_TAB:\n        if (focusableElements.length === 0) {\n          e.preventDefault();\n          break;\n        }\n        // Backward tab\n        if (e.shiftKey) {\n          if (\n            document.activeElement === firstFocusableElement ||\n            document.activeElement.classList.contains('shepherd-element')\n          ) {\n            e.preventDefault();\n            lastFocusableElement.focus();\n          }\n        } else {\n          if (document.activeElement === lastFocusableElement) {\n            e.preventDefault();\n            firstFocusableElement.focus();\n          }\n        }\n        break;\n      case KEY_ESC:\n        if (tour.options.exitOnEsc) {\n          e.preventDefault();\n          e.stopPropagation();\n          step.cancel();\n        }\n        break;\n      case LEFT_ARROW:\n        if (tour.options.keyboardNavigation) {\n          e.preventDefault();\n          e.stopPropagation();\n          tour.back();\n        }\n        break;\n      case RIGHT_ARROW:\n        if (tour.options.keyboardNavigation) {\n          e.preventDefault();\n          e.stopPropagation();\n          tour.next();\n        }\n        break;\n      default:\n        break;\n    }\n  };\n</script>\n\n<dialog\n  aria-describedby={!isUndefined(step.options.text) ? descriptionId : null}\n  aria-labelledby={step.options.title ? labelId : null}\n  bind:this={element}\n  class:shepherd-has-cancel-icon={hasCancelIcon}\n  class:shepherd-has-title={hasTitle}\n  class:shepherd-element={true}\n  {...dataStepId}\n  on:keydown={handleKeyDown}\n  open=\"true\"\n>\n  {#if step.options.arrow && step.options.attachTo && step.options.attachTo.element && step.options.attachTo.on}\n    <div class=\"shepherd-arrow\" data-popper-arrow></div>\n  {/if}\n  <ShepherdContent {descriptionId} {labelId} {step} />\n</dialog>\n\n<style global>\n  .shepherd-element {\n    background: #fff;\n    border-radius: 5px;\n    box-shadow: 0 1px 4px rgba(0, 0, 0, 0.2);\n    margin: 0;\n    max-width: 400px;\n    opacity: 0;\n    outline: none;\n    transition:\n      opacity 0.3s,\n      visibility 0.3s;\n    visibility: hidden;\n    width: 100%;\n    z-index: 9999;\n  }\n\n  .shepherd-enabled.shepherd-element {\n    opacity: 1;\n    visibility: visible;\n  }\n\n  .shepherd-element[data-popper-reference-hidden]:not(.shepherd-centered) {\n    opacity: 0;\n    pointer-events: none;\n    visibility: hidden;\n  }\n\n  .shepherd-element,\n  .shepherd-element *,\n  .shepherd-element *:after,\n  .shepherd-element *:before {\n    box-sizing: border-box;\n  }\n\n  .shepherd-arrow,\n  .shepherd-arrow::before {\n    position: absolute;\n    width: 16px;\n    height: 16px;\n    z-index: -1;\n  }\n\n  .shepherd-arrow:before {\n    content: '';\n    transform: rotate(45deg);\n    background: #fff;\n  }\n\n  .shepherd-element[data-popper-placement^='top'] > .shepherd-arrow {\n    bottom: -8px;\n  }\n\n  .shepherd-element[data-popper-placement^='bottom'] > .shepherd-arrow {\n    top: -8px;\n  }\n\n  .shepherd-element[data-popper-placement^='left'] > .shepherd-arrow {\n    right: -8px;\n  }\n\n  .shepherd-element[data-popper-placement^='right'] > .shepherd-arrow {\n    left: -8px;\n  }\n\n  .shepherd-element.shepherd-centered > .shepherd-arrow {\n    opacity: 0;\n  }\n\n  /**\n  * Arrow on top of tooltip centered horizontally, with title color\n  */\n  .shepherd-element.shepherd-has-title[data-popper-placement^='bottom']\n    > .shepherd-arrow::before {\n    background-color: #e6e6e6;\n  }\n\n  .shepherd-target-click-disabled.shepherd-enabled.shepherd-target,\n  .shepherd-target-click-disabled.shepherd-enabled.shepherd-target * {\n    pointer-events: none;\n  }\n</style>\n","/** @returns {{}} */\nexport function get_spread_update(levels, updates) {\n\tconst update = {};\n\tconst to_null_out = {};\n\tconst accounted_for = { $$scope: 1 };\n\tlet i = levels.length;\n\twhile (i--) {\n\t\tconst o = levels[i];\n\t\tconst n = updates[i];\n\t\tif (n) {\n\t\t\tfor (const key in o) {\n\t\t\t\tif (!(key in n)) to_null_out[key] = 1;\n\t\t\t}\n\t\t\tfor (const key in n) {\n\t\t\t\tif (!accounted_for[key]) {\n\t\t\t\t\tupdate[key] = n[key];\n\t\t\t\t\taccounted_for[key] = 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\tlevels[i] = n;\n\t\t} else {\n\t\t\tfor (const key in o) {\n\t\t\t\taccounted_for[key] = 1;\n\t\t\t}\n\t\t}\n\t}\n\tfor (const key in to_null_out) {\n\t\tif (!(key in update)) update[key] = undefined;\n\t}\n\treturn update;\n}\n\nexport function get_spread_object(spread_props) {\n\treturn typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n","import { deepmerge } from 'deepmerge-ts';\nimport { Evented } from './evented.ts';\nimport autoBind from './utils/auto-bind.ts';\nimport {\n  isElement,\n  isHTMLElement,\n  isFunction,\n  isUndefined\n} from './utils/type-check.ts';\nimport { bindAdvance } from './utils/bind.ts';\nimport {\n  parseAttachTo,\n  normalizePrefix,\n  uuid,\n  parseExtraHighlights\n} from './utils/general.ts';\nimport {\n  setupTooltip,\n  destroyTooltip,\n  mergeTooltipConfig\n} from './utils/floating-ui.ts';\n// @ts-expect-error TODO: we don't have Svelte .d.ts files until we generate the dist\nimport ShepherdElement from './components/shepherd-element.svelte';\nimport { type Tour } from './tour.ts';\nimport type { ComputePositionConfig } from '@floating-ui/dom';\n\nexport type StepText =\n  | string\n  | ReadonlyArray<string>\n  | HTMLElement\n  | (() => string | ReadonlyArray<string> | HTMLElement);\n\nexport type StringOrStringFunction = string | (() => string);\n\n/**\n * The options for the step\n */\nexport interface StepOptions {\n  /**\n   * The element the step should be attached to on the page.\n   * An object with properties `element` and `on`.\n   *\n   * ```js\n   * const step = new Step(tour, {\n   *   attachTo: { element: '.some .selector-path', on: 'left' },\n   *   ...moreOptions\n   * });\n   * ```\n   *\n   * If you don’t specify an attachTo the element will appear in the middle of the screen.\n   * If you omit the `on` portion of `attachTo`, the element will still be highlighted, but the tooltip will appear\n   * in the middle of the screen, without an arrow pointing to the target.\n   */\n  attachTo?: StepOptionsAttachTo;\n\n  /**\n   * An action on the page which should advance shepherd to the next step.\n   * It should be an object with a string `selector` and an `event` name\n   * ```js\n   * const step = new Step(tour, {\n   *   advanceOn: { selector: '.some .selector-path', event: 'click' },\n   *   ...moreOptions\n   * });\n   * ```\n   * `event` doesn’t have to be an event inside the tour, it can be any event fired on any element on the page.\n   * You can also always manually advance the Tour by calling `myTour.next()`.\n   */\n  advanceOn?: StepOptionsAdvanceOn;\n\n  /**\n   * Whether to display the arrow for the tooltip or not\n   */\n  arrow?: boolean;\n\n  /**\n   * A function that returns a promise.\n   * When the promise resolves, the rest of the `show` code for the step will execute.\n   */\n  beforeShowPromise?: () => Promise<unknown>;\n\n  /**\n   * An array of buttons to add to the step. These will be rendered in a\n   * footer below the main body text.\n   */\n  buttons?: ReadonlyArray<StepOptionsButton>;\n\n  /**\n   * Should a cancel “✕” be shown in the header of the step?\n   */\n  cancelIcon?: StepOptionsCancelIcon;\n\n  /**\n   * A boolean, that when set to false, will set `pointer-events: none` on the target.\n   */\n  canClickTarget?: boolean;\n\n  /**\n   * A string of extra classes to add to the step's content element.\n   */\n  classes?: string;\n\n  /**\n   * An array of extra element selectors to highlight when the overlay is shown\n   * The tooltip won't be fixed to these elements, but they will be highlighted\n   * just like the `attachTo` element.\n   * ```js\n   * const step = new Step(tour, {\n   *   extraHighlights: [ '.pricing', '#docs' ],\n   *   ...moreOptions\n   * });\n   * ```\n   */\n  extraHighlights?: ReadonlyArray<string>;\n\n  /**\n   * An extra class to apply to the `attachTo` element when it is\n   * highlighted (that is, when its step is active). You can then target that selector in your CSS.\n   */\n  highlightClass?: string;\n\n  /**\n   * The string to use as the `id` for the step.\n   */\n  id?: string;\n\n  /**\n   * An amount of padding to add around the modal overlay opening\n   */\n  modalOverlayOpeningPadding?: number;\n\n  /**\n   * An amount of border radius to add around the modal overlay opening\n   */\n  modalOverlayOpeningRadius?:\n    | number\n    | {\n        topLeft?: number;\n        bottomLeft?: number;\n        bottomRight?: number;\n        topRight?: number;\n      };\n\n  /**\n   * An amount to offset the modal overlay opening in the x-direction\n   */\n  modalOverlayOpeningXOffset?: number;\n\n  /**\n   * An amount to offset the modal overlay opening in the y-direction\n   */\n  modalOverlayOpeningYOffset?: number;\n\n  /**\n   * Extra [options to pass to FloatingUI]{@link https://floating-ui.com/docs/tutorial/}\n   */\n  floatingUIOptions?: ComputePositionConfig;\n\n  /**\n   * Should the element be scrolled to when this step is shown?\n   */\n  scrollTo?: boolean | ScrollIntoViewOptions;\n\n  /**\n   * A function that lets you override the default scrollTo behavior and\n   * define a custom action to do the scrolling, and possibly other logic.\n   */\n  scrollToHandler?: (element: HTMLElement) => void;\n\n  /**\n   * A function that, when it returns `true`, will show the step.\n   * If it returns `false`, the step will be skipped.\n   */\n  showOn?: () => boolean;\n\n  /**\n   * The text in the body of the step. It can be one of four types:\n   * ```\n   * - HTML string\n   * - Array of HTML strings\n   * - `HTMLElement` object\n   * - `Function` to be executed when the step is built. It must return one of the three options above.\n   * ```\n   */\n  text?: StepText;\n\n  /**\n   * The step's title. It becomes an `h3` at the top of the step.\n   * ```\n   * - HTML string\n   * - `Function` to be executed when the step is built. It must return HTML string.\n   * ```\n   */\n  title?: StringOrStringFunction;\n\n  /**\n   * You can define `show`, `hide`, etc events inside `when`. For example:\n   * ```js\n   * when: {\n   *   show: function() {\n   *     window.scrollTo(0, 0);\n   *   }\n   * }\n   * ```\n   */\n  when?: StepOptionsWhen;\n}\n\nexport type PopperPlacement =\n  | 'auto'\n  | 'auto-start'\n  | 'auto-end'\n  | 'top'\n  | 'top-start'\n  | 'top-end'\n  | 'bottom'\n  | 'bottom-start'\n  | 'bottom-end'\n  | 'right'\n  | 'right-start'\n  | 'right-end'\n  | 'left'\n  | 'left-start'\n  | 'left-end';\n\nexport interface StepOptionsAttachTo {\n  element?:\n    | HTMLElement\n    | string\n    | null\n    | (() => HTMLElement | string | null | undefined);\n  on?: PopperPlacement;\n}\n\nexport interface StepOptionsAdvanceOn {\n  event: string;\n  selector: string;\n}\n\nexport interface StepOptionsButton {\n  /**\n   * A function executed when the button is clicked on\n   * It is automatically bound to the `tour` the step is associated with, so things like `this.next` will\n   * work inside the action.\n   * You can use action to skip steps or navigate to specific steps, with something like:\n   * ```js\n   * action() {\n   *   return this.show('some_step_name');\n   * }\n   * ```\n   */\n  action?: (this: Tour) => void;\n\n  /**\n   * Extra classes to apply to the `<a>`\n   */\n  classes?: string;\n\n  /**\n   * Whether the button should be disabled\n   * When the value is `true`, or the function returns `true` the button will be disabled\n   */\n  disabled?: boolean | (() => boolean);\n\n  /**\n   * The aria-label text of the button\n   */\n  label?: StringOrStringFunction;\n\n  /**\n   * A boolean, that when true, adds a `shepherd-button-secondary` class to the button.\n   */\n  secondary?: boolean;\n\n  /**\n   * The HTML text of the button\n   */\n  text?: StringOrStringFunction;\n}\n\nexport interface StepOptionsButtonEvent {\n  [key: string]: () => void;\n}\n\nexport interface StepOptionsCancelIcon {\n  enabled?: boolean;\n  label?: string;\n}\n\nexport interface StepOptionsWhen {\n  [key: string]: (this: Step) => void;\n}\n\n/**\n * A class representing steps to be added to a tour.\n * @extends {Evented}\n */\nexport class Step extends Evented {\n  _resolvedAttachTo: StepOptionsAttachTo | null;\n  _resolvedExtraHighlightElements?: HTMLElement[];\n  classPrefix?: string;\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  declare cleanup: Function | null;\n  el?: HTMLElement | null;\n  declare id: string;\n  declare options: StepOptions;\n  target?: HTMLElement | null;\n  tour: Tour;\n\n  constructor(tour: Tour, options: StepOptions = {}) {\n    super();\n\n    this.tour = tour;\n    this.classPrefix = this.tour.options\n      ? normalizePrefix(this.tour.options.classPrefix)\n      : '';\n    // @ts-expect-error TODO: investigate where styles comes from\n    this.styles = tour.styles;\n\n    /**\n     * Resolved attachTo options. Due to lazy evaluation, we only resolve the options during `before-show` phase.\n     * Do not use this directly, use the _getResolvedAttachToOptions method instead.\n     * @type {StepOptionsAttachTo | null}\n     * @private\n     */\n    this._resolvedAttachTo = null;\n\n    autoBind(this);\n\n    this._setOptions(options);\n\n    return this;\n  }\n\n  /**\n   * Cancel the tour\n   * Triggers the `cancel` event\n   */\n  cancel() {\n    this.tour.cancel();\n    this.trigger('cancel');\n  }\n\n  /**\n   * Complete the tour\n   * Triggers the `complete` event\n   */\n  complete() {\n    this.tour.complete();\n    this.trigger('complete');\n  }\n\n  /**\n   * Remove the step, delete the step's element, and destroy the FloatingUI instance for the step.\n   * Triggers `destroy` event\n   */\n  destroy() {\n    destroyTooltip(this);\n\n    if (isHTMLElement(this.el)) {\n      this.el.remove();\n      this.el = null;\n    }\n\n    this._updateStepTargetOnHide();\n\n    this.trigger('destroy');\n  }\n\n  /**\n   * Returns the tour for the step\n   * @return The tour instance\n   */\n  getTour() {\n    return this.tour;\n  }\n\n  /**\n   * Hide the step\n   */\n  hide() {\n    this.tour.modal?.hide();\n\n    this.trigger('before-hide');\n\n    if (this.el) {\n      this.el.hidden = true;\n    }\n\n    this._updateStepTargetOnHide();\n\n    this.trigger('hide');\n  }\n\n  /**\n   * Resolves attachTo options.\n   * @returns {{}|{element, on}}\n   */\n  _resolveExtraHiglightElements() {\n    this._resolvedExtraHighlightElements = parseExtraHighlights(this);\n    return this._resolvedExtraHighlightElements;\n  }\n\n  /**\n   * Resolves attachTo options.\n   * @returns {{}|{element, on}}\n   */\n  _resolveAttachToOptions() {\n    this._resolvedAttachTo = parseAttachTo(this);\n    return this._resolvedAttachTo;\n  }\n\n  /**\n   * A selector for resolved attachTo options.\n   * @returns {{}|{element, on}}\n   * @private\n   */\n  _getResolvedAttachToOptions() {\n    if (this._resolvedAttachTo === null) {\n      return this._resolveAttachToOptions();\n    }\n\n    return this._resolvedAttachTo;\n  }\n\n  /**\n   * Check if the step is open and visible\n   * @return True if the step is open and visible\n   */\n  isOpen() {\n    return Boolean(this.el && !this.el.hidden);\n  }\n\n  /**\n   * Wraps `_show` and ensures `beforeShowPromise` resolves before calling show\n   */\n  show() {\n    if (isFunction(this.options.beforeShowPromise)) {\n      return Promise.resolve(this.options.beforeShowPromise()).then(() =>\n        this._show()\n      );\n    }\n    return Promise.resolve(this._show());\n  }\n\n  /**\n   * Updates the options of the step.\n   *\n   * @param {StepOptions} options The options for the step\n   */\n  updateStepOptions(options: StepOptions) {\n    Object.assign(this.options, options);\n\n    // @ts-expect-error TODO: get types for Svelte components\n    if (this.shepherdElementComponent) {\n      // @ts-expect-error TODO: get types for Svelte components\n      this.shepherdElementComponent.$set({ step: this });\n    }\n  }\n\n  /**\n   * Returns the element for the step\n   * @return {HTMLElement|null|undefined} The element instance. undefined if it has never been shown, null if it has been destroyed\n   */\n  getElement() {\n    return this.el;\n  }\n\n  /**\n   * Returns the target for the step\n   * @return {HTMLElement|null|undefined} The element instance. undefined if it has never been shown, null if query string has not been found\n   */\n  getTarget() {\n    return this.target;\n  }\n\n  /**\n   * Creates Shepherd element for step based on options\n   *\n   * @return {HTMLElement} The DOM element for the step tooltip\n   * @private\n   */\n  _createTooltipContent() {\n    const descriptionId = `${this.id}-description`;\n    const labelId = `${this.id}-label`;\n\n    // @ts-expect-error TODO: get types for Svelte components\n    this.shepherdElementComponent = new ShepherdElement({\n      target: this.tour.options.stepsContainer || document.body,\n      props: {\n        classPrefix: this.classPrefix,\n        descriptionId,\n        labelId,\n        step: this,\n        // @ts-expect-error TODO: investigate where styles comes from\n        styles: this.styles\n      }\n    });\n\n    // @ts-expect-error TODO: get types for Svelte components\n    return this.shepherdElementComponent.getElement();\n  }\n\n  /**\n   * If a custom scrollToHandler is defined, call that, otherwise do the generic\n   * scrollIntoView call.\n   *\n   * @param {boolean | ScrollIntoViewOptions} scrollToOptions - If true, uses the default `scrollIntoView`,\n   * if an object, passes that object as the params to `scrollIntoView` i.e. `{ behavior: 'smooth', block: 'center' }`\n   * @private\n   */\n  _scrollTo(scrollToOptions: boolean | ScrollIntoViewOptions) {\n    const { element } = this._getResolvedAttachToOptions();\n\n    if (isFunction(this.options.scrollToHandler)) {\n      this.options.scrollToHandler(element as HTMLElement);\n    } else if (\n      isElement(element) &&\n      typeof element.scrollIntoView === 'function'\n    ) {\n      element.scrollIntoView(scrollToOptions);\n    }\n  }\n\n  /**\n   * _getClassOptions gets all possible classes for the step\n   * @param {StepOptions} stepOptions The step specific options\n   * @returns {string} unique string from array of classes\n   */\n  _getClassOptions(stepOptions: StepOptions) {\n    const defaultStepOptions =\n      this.tour && this.tour.options && this.tour.options.defaultStepOptions;\n    const stepClasses = stepOptions.classes ? stepOptions.classes : '';\n    const defaultStepOptionsClasses =\n      defaultStepOptions && defaultStepOptions.classes\n        ? defaultStepOptions.classes\n        : '';\n    const allClasses = [\n      ...stepClasses.split(' '),\n      ...defaultStepOptionsClasses.split(' ')\n    ];\n    const uniqClasses = new Set(allClasses);\n\n    return Array.from(uniqClasses).join(' ').trim();\n  }\n\n  /**\n   * Sets the options for the step, maps `when` to events, sets up buttons\n   * @param options - The options for the step\n   */\n  _setOptions(options: StepOptions = {}) {\n    let tourOptions =\n      this.tour && this.tour.options && this.tour.options.defaultStepOptions;\n\n    tourOptions = deepmerge({}, tourOptions || {});\n\n    this.options = Object.assign(\n      {\n        arrow: true\n      },\n      tourOptions,\n      options,\n      mergeTooltipConfig(tourOptions, options)\n    );\n\n    const { when } = this.options;\n\n    this.options.classes = this._getClassOptions(options);\n\n    this.destroy();\n    this.id = this.options.id || `step-${uuid()}`;\n\n    if (when) {\n      Object.keys(when).forEach((event) => {\n        // @ts-expect-error TODO: fix this type error\n        this.on(event, when[event], this);\n      });\n    }\n  }\n\n  /**\n   * Create the element and set up the FloatingUI instance\n   * @private\n   */\n  _setupElements() {\n    if (!isUndefined(this.el)) {\n      this.destroy();\n    }\n\n    this.el = this._createTooltipContent();\n\n    if (this.options.advanceOn) {\n      bindAdvance(this);\n    }\n\n    // The tooltip implementation details are handled outside of the Step\n    // object.\n    setupTooltip(this);\n  }\n\n  /**\n   * Triggers `before-show`, generates the tooltip DOM content,\n   * sets up a FloatingUI instance for the tooltip, then triggers `show`.\n   * @private\n   */\n  _show() {\n    this.trigger('before-show');\n\n    // Force resolve to make sure the options are updated on subsequent shows.\n    this._resolveAttachToOptions();\n    this._resolveExtraHiglightElements();\n    this._setupElements();\n\n    if (!this.tour.modal) {\n      this.tour.setupModal();\n    }\n\n    this.tour.modal?.setupForStep(this);\n    this._styleTargetElementForStep(this);\n\n    if (this.el) {\n      this.el.hidden = false;\n    }\n\n    // start scrolling to target before showing the step\n    if (this.options.scrollTo) {\n      setTimeout(() => {\n        this._scrollTo(\n          this.options.scrollTo as boolean | ScrollIntoViewOptions\n        );\n      });\n    }\n\n    if (this.el) {\n      this.el.hidden = false;\n    }\n\n    // @ts-expect-error TODO: get types for Svelte components\n    const content = this.shepherdElementComponent.getElement();\n    const target = this.target || document.body;\n    const extraHighlightElements = this._resolvedExtraHighlightElements;\n\n    target.classList.add(`${this.classPrefix}shepherd-enabled`);\n    target.classList.add(`${this.classPrefix}shepherd-target`);\n    content.classList.add('shepherd-enabled');\n\n    extraHighlightElements?.forEach((el) => {\n      el.classList.add(`${this.classPrefix}shepherd-enabled`);\n      el.classList.add(`${this.classPrefix}shepherd-target`);\n    });\n\n    this.trigger('show');\n  }\n\n  /**\n   * Modulates the styles of the passed step's target element, based on the step's options and\n   * the tour's `modal` option, to visually emphasize the element\n   *\n   * @param {Step} step The step object that attaches to the element\n   * @private\n   */\n  _styleTargetElementForStep(step: Step) {\n    const targetElement = step.target;\n    const extraHighlightElements = step._resolvedExtraHighlightElements;\n\n    if (!targetElement) {\n      return;\n    }\n\n    const highlightClass = step.options.highlightClass;\n    if (highlightClass) {\n      targetElement.classList.add(highlightClass);\n      extraHighlightElements?.forEach((el) => el.classList.add(highlightClass));\n    }\n\n    targetElement.classList.remove('shepherd-target-click-disabled');\n    extraHighlightElements?.forEach((el) =>\n      el.classList.remove('shepherd-target-click-disabled')\n    );\n\n    if (step.options.canClickTarget === false) {\n      targetElement.classList.add('shepherd-target-click-disabled');\n      extraHighlightElements?.forEach((el) =>\n        el.classList.add('shepherd-target-click-disabled')\n      );\n    }\n  }\n\n  /**\n   * When a step is hidden, remove the highlightClass and 'shepherd-enabled'\n   * and 'shepherd-target' classes\n   * @private\n   */\n  _updateStepTargetOnHide() {\n    const target = this.target || document.body;\n    const extraHighlightElements = this._resolvedExtraHighlightElements;\n\n    const highlightClass = this.options.highlightClass;\n    if (highlightClass) {\n      target.classList.remove(highlightClass);\n      extraHighlightElements?.forEach((el) =>\n        el.classList.remove(highlightClass)\n      );\n    }\n\n    target.classList.remove(\n      'shepherd-target-click-disabled',\n      `${this.classPrefix}shepherd-enabled`,\n      `${this.classPrefix}shepherd-target`\n    );\n    extraHighlightElements?.forEach((el) => {\n      el.classList.remove(\n        'shepherd-target-click-disabled',\n        `${this.classPrefix}shepherd-enabled`,\n        `${this.classPrefix}shepherd-target`\n      );\n    });\n  }\n}\n","import type { Step } from '../step.ts';\nimport { isUndefined } from './type-check.ts';\n\n/**\n * Sets up the handler to determine if we should advance the tour\n * @param step The step instance\n * @param selector\n * @private\n */\nfunction _setupAdvanceOnHandler(step: Step, selector?: string) {\n  return (event: Event) => {\n    if (step.isOpen()) {\n      const targetIsEl = step.el && event.currentTarget === step.el;\n      const targetIsSelector =\n        !isUndefined(selector) &&\n        (event.currentTarget as HTMLElement).matches(selector);\n\n      if (targetIsSelector || targetIsEl) {\n        step.tour.next();\n      }\n    }\n  };\n}\n\n/**\n * Bind the event handler for advanceOn\n * @param step The step instance\n */\nexport function bindAdvance(step: Step) {\n  // An empty selector matches the step element\n  const { event, selector } = step.options.advanceOn || {};\n  if (event) {\n    const handler = _setupAdvanceOnHandler(step, selector);\n\n    // TODO: this should also bind/unbind on show/hide\n    let el: Element | null = null;\n\n    if (!isUndefined(selector)) {\n      el = document.querySelector(selector);\n\n      if (!el) {\n        return console.error(\n          `No element was found for the selector supplied to advanceOn: ${selector}`\n        );\n      }\n    }\n\n    if (el) {\n      el.addEventListener(event, handler);\n      step.on('destroy', () => {\n        return (el as HTMLElement).removeEventListener(event, handler);\n      });\n    } else {\n      document.body.addEventListener(event, handler, true);\n      step.on('destroy', () => {\n        return document.body.removeEventListener(event, handler, true);\n      });\n    }\n  } else {\n    return console.error(\n      'advanceOn was defined, but no event name was passed.'\n    );\n  }\n}\n","<script>\n  import { makeOverlayPath } from '../utils/overlay-path.ts';\n\n  export let element, openingProperties;\n  let modalIsVisible = false;\n  let rafId = undefined;\n  let pathDefinition;\n\n  $: pathDefinition = makeOverlayPath(openingProperties);\n\n  closeModalOpening();\n\n  export const getElement = () => element;\n\n  export function closeModalOpening() {\n    openingProperties = [\n      {\n        width: 0,\n        height: 0,\n        x: 0,\n        y: 0,\n        r: 0\n      }\n    ];\n  }\n\n  /**\n   * Hide the modal overlay\n   */\n  export function hide() {\n    modalIsVisible = false;\n\n    // Ensure we cleanup all event listeners when we hide the modal\n    _cleanupStepEventListeners();\n  }\n\n  /**\n   * Uses the bounds of the element we want the opening overtop of to set the dimensions of the opening and position it\n   * @param {Number} modalOverlayOpeningPadding An amount of padding to add around the modal overlay opening\n   * @param {Number | { topLeft: Number, bottomLeft: Number, bottomRight: Number, topRight: Number }} modalOverlayOpeningRadius An amount of border radius to add around the modal overlay opening\n   * @param {Number} modalOverlayOpeningXOffset An amount to offset the modal overlay opening in the x-direction\n   * @param {Number} modalOverlayOpeningYOffset An amount to offset the modal overlay opening in the y-direction\n   * @param {HTMLElement} scrollParent The scrollable parent of the target element\n   * @param {HTMLElement} targetElement The element the opening will expose\n   */\n  export function positionModal(\n    modalOverlayOpeningPadding = 0,\n    modalOverlayOpeningRadius = 0,\n    modalOverlayOpeningXOffset = 0,\n    modalOverlayOpeningYOffset = 0,\n    scrollParent,\n    targetElement,\n    extraHighlights\n  ) {\n    if (targetElement) {\n      const elementsToHighlight = [targetElement, ...(extraHighlights || [])];\n      openingProperties = [];\n\n      for (const element of elementsToHighlight) {\n        if (!element) continue;\n\n        // Skip duplicate elements\n        if (\n          elementsToHighlight.indexOf(element) !==\n          elementsToHighlight.lastIndexOf(element)\n        ) {\n          continue;\n        }\n\n        const { y, height } = _getVisibleHeight(element, scrollParent);\n        const { x, width, left } = element.getBoundingClientRect();\n\n        // Check if the element is contained by another element\n        const isContained = elementsToHighlight.some((otherElement) => {\n          if (otherElement === element) return false;\n          const otherRect = otherElement.getBoundingClientRect();\n          return (\n            x >= otherRect.left &&\n            x + width <= otherRect.right &&\n            y >= otherRect.top &&\n            y + height <= otherRect.bottom\n          );\n        });\n\n        if (isContained) continue;\n\n        // getBoundingClientRect is not consistent. Some browsers use x and y, while others use left and top\n        openingProperties.push({\n          width: width + modalOverlayOpeningPadding * 2,\n          height: height + modalOverlayOpeningPadding * 2,\n          x:\n            (x || left) +\n            modalOverlayOpeningXOffset -\n            modalOverlayOpeningPadding,\n          y: y + modalOverlayOpeningYOffset - modalOverlayOpeningPadding,\n          r: modalOverlayOpeningRadius\n        });\n      }\n    } else {\n      closeModalOpening();\n    }\n  }\n\n  /**\n   * If modal is enabled, setup the svg mask opening and modal overlay for the step\n   * @param {Step} step The step instance\n   */\n  export function setupForStep(step) {\n    // Ensure we move listeners from the previous step, before we setup new ones\n    _cleanupStepEventListeners();\n\n    if (step.tour.options.useModalOverlay) {\n      _styleForStep(step);\n      show();\n    } else {\n      hide();\n    }\n  }\n\n  /**\n   * Show the modal overlay\n   */\n  export function show() {\n    modalIsVisible = true;\n  }\n\n  const _preventModalBodyTouch = (e) => {\n    e.preventDefault();\n  };\n\n  const _preventModalOverlayTouch = (e) => {\n    e.stopPropagation();\n  };\n\n  /**\n   * Add touchmove event listener\n   * @private\n   */\n  function _addStepEventListeners() {\n    // Prevents window from moving on touch.\n    window.addEventListener('touchmove', _preventModalBodyTouch, {\n      passive: false\n    });\n  }\n\n  /**\n   * Cancel the requestAnimationFrame loop and remove touchmove event listeners\n   * @private\n   */\n  function _cleanupStepEventListeners() {\n    if (rafId) {\n      cancelAnimationFrame(rafId);\n      rafId = undefined;\n    }\n\n    window.removeEventListener('touchmove', _preventModalBodyTouch, {\n      passive: false\n    });\n  }\n\n  /**\n   * Style the modal for the step\n   * @param {Step} step The step to style the opening for\n   * @private\n   */\n  function _styleForStep(step) {\n    const {\n      modalOverlayOpeningPadding,\n      modalOverlayOpeningRadius,\n      modalOverlayOpeningXOffset = 0,\n      modalOverlayOpeningYOffset = 0\n    } = step.options;\n\n    const iframeOffset = _getIframeOffset(step.target);\n    const scrollParent = _getScrollParent(step.target);\n\n    // Setup recursive function to call requestAnimationFrame to update the modal opening position\n    const rafLoop = () => {\n      rafId = undefined;\n      positionModal(\n        modalOverlayOpeningPadding,\n        modalOverlayOpeningRadius,\n        modalOverlayOpeningXOffset + iframeOffset.left,\n        modalOverlayOpeningYOffset + iframeOffset.top,\n        scrollParent,\n        step.target,\n        step._resolvedExtraHighlightElements\n      );\n      rafId = requestAnimationFrame(rafLoop);\n    };\n\n    rafLoop();\n\n    _addStepEventListeners();\n  }\n\n  /**\n   * Find the closest scrollable parent element\n   * @param {HTMLElement} element The target element\n   * @returns {HTMLElement}\n   * @private\n   */\n  function _getScrollParent(element) {\n    if (!element) {\n      return null;\n    }\n\n    const isHtmlElement = element instanceof HTMLElement;\n    const overflowY =\n      isHtmlElement && window.getComputedStyle(element).overflowY;\n    const isScrollable = overflowY !== 'hidden' && overflowY !== 'visible';\n\n    if (isScrollable && element.scrollHeight >= element.clientHeight) {\n      return element;\n    }\n\n    return _getScrollParent(element.parentElement);\n  }\n\n  /**\n   * Get the top and left offset required to position the modal overlay cutout\n   * when the target element is within an iframe\n   * @param {HTMLElement} element The target element\n   * @private\n   */\n  function _getIframeOffset(element) {\n    let offset = {\n      top: 0,\n      left: 0\n    };\n\n    if (!element) {\n      return offset;\n    }\n\n    let targetWindow = element.ownerDocument.defaultView;\n\n    while (targetWindow !== window.top) {\n      const targetIframe = targetWindow?.frameElement;\n\n      if (targetIframe) {\n        const targetIframeRect = targetIframe.getBoundingClientRect();\n\n        offset.top += targetIframeRect.top + (targetIframeRect.scrollTop ?? 0);\n        offset.left +=\n          targetIframeRect.left + (targetIframeRect.scrollLeft ?? 0);\n      }\n\n      targetWindow = targetWindow.parent;\n    }\n\n    return offset;\n  }\n\n  /**\n   * Get the visible height of the target element relative to its scrollParent.\n   * If there is no scroll parent, the height of the element is returned.\n   *\n   * @param {HTMLElement} element The target element\n   * @param {HTMLElement} [scrollParent] The scrollable parent element\n   * @returns {{y: number, height: number}}\n   * @private\n   */\n  function _getVisibleHeight(element, scrollParent) {\n    const elementRect = element.getBoundingClientRect();\n    let top = elementRect.y || elementRect.top;\n    let bottom = elementRect.bottom || top + elementRect.height;\n\n    if (scrollParent) {\n      const scrollRect = scrollParent.getBoundingClientRect();\n      const scrollTop = scrollRect.y || scrollRect.top;\n      const scrollBottom = scrollRect.bottom || scrollTop + scrollRect.height;\n\n      top = Math.max(top, scrollTop);\n      bottom = Math.min(bottom, scrollBottom);\n    }\n\n    const height = Math.max(bottom - top, 0); // Default to 0 if height is negative\n\n    return { y: top, height };\n  }\n</script>\n\n<svg\n  bind:this={element}\n  class={`${\n    modalIsVisible ? 'shepherd-modal-is-visible' : ''\n  } shepherd-modal-overlay-container`}\n  on:touchmove={_preventModalOverlayTouch}\n>\n  <path d={pathDefinition} />\n</svg>\n\n<style global>\n  .shepherd-modal-overlay-container {\n    height: 0;\n    left: 0;\n    opacity: 0;\n    overflow: hidden;\n    pointer-events: none;\n    position: fixed;\n    top: 0;\n    transition:\n      all 0.3s ease-out,\n      height 0ms 0.3s,\n      opacity 0.3s 0ms;\n    width: 100vw;\n    z-index: 9997;\n  }\n\n  .shepherd-modal-overlay-container.shepherd-modal-is-visible {\n    height: 100vh;\n    opacity: 0.5;\n    transition:\n      all 0.3s ease-out,\n      height 0s 0s,\n      opacity 0.3s 0s;\n    transform: translateZ(0);\n  }\n\n  .shepherd-modal-overlay-container.shepherd-modal-is-visible path {\n    pointer-events: all;\n  }\n</style>\n","interface OverlayPathParams {\n  height: number;\n  r?:\n    | number\n    | {\n        bottomLeft: number;\n        bottomRight: number;\n        topLeft: number;\n        topRight: number;\n      };\n  x?: number;\n  y?: number;\n  width: number;\n}\n/**\n * Generates the svg path data for a rounded rectangle overlay\n * @param dimension - Dimensions of rectangle.\n * @param dimension.width - Width.\n * @param dimension.height - Height.\n * @param dimension.x - Offset from top left corner in x axis. default 0.\n * @param dimension.y - Offset from top left corner in y axis. default 0.\n * @param dimension.r - Corner Radius. Keep this smaller than half of width or height.\n * @returns Rounded rectangle overlay path data.\n */\nexport function makeOverlayPath(overlayPaths: OverlayPathParams[]) {\n  let openings = '';\n\n  const { innerWidth: w, innerHeight: h } = window;\n\n  overlayPaths.forEach((overlayPath) => {\n    const { width, height, x = 0, y = 0, r = 0 } = overlayPath;\n    const {\n      topLeft = 0,\n      topRight = 0,\n      bottomRight = 0,\n      bottomLeft = 0\n    } = typeof r === 'number'\n      ? { topLeft: r, topRight: r, bottomRight: r, bottomLeft: r }\n      : r;\n\n    openings += `M${x + topLeft},${y}\\\n      a${topLeft},${topLeft},0,0,0-${topLeft},${topLeft}\\\n      V${height + y - bottomLeft}\\\n      a${bottomLeft},${bottomLeft},0,0,0,${bottomLeft},${bottomLeft}\\\n      H${width + x - bottomRight}\\\n      a${bottomRight},${bottomRight},0,0,0,${bottomRight}-${bottomRight}\\\n      V${y + topRight}\\\n      a${topRight},${topRight},0,0,0-${topRight}-${topRight}\\\n      Z`;\n  });\n\n  return `M${w},${h}\\\n          H0\\\n          V0\\\n          H${w}\\\n          V${h}\\\n          Z\\\n          ${openings}`.replace(/\\s/g, '');\n}\n","import { Evented } from './evented.ts';\nimport { Step, type StepOptions } from './step.ts';\nimport autoBind from './utils/auto-bind.ts';\nimport {\n  isHTMLElement,\n  isFunction,\n  isString,\n  isUndefined\n} from './utils/type-check.ts';\nimport { cleanupSteps } from './utils/cleanup.ts';\nimport { normalizePrefix, uuid } from './utils/general.ts';\n// @ts-expect-error TODO: we don't have Svelte .d.ts files until we generate the dist\nimport ShepherdModal from './components/shepherd-modal.svelte';\n\nexport interface EventOptions {\n  previous?: Step | null;\n  step?: Step | null;\n  tour: Tour;\n}\n\nexport type TourConfirmCancel =\n  | boolean\n  | (() => boolean)\n  | Promise<boolean>\n  | (() => Promise<boolean>);\n\n/**\n * The options for the tour\n */\nexport interface TourOptions {\n  /**\n   * If true, will issue a `window.confirm` before cancelling.\n   * If it is a function(support Async Function), it will be called and wait for the return value,\n   * and will only be cancelled if the value returned is true.\n   */\n  confirmCancel?: TourConfirmCancel;\n  /**\n   * The message to display in the `window.confirm` dialog.\n   */\n  confirmCancelMessage?: string;\n  /**\n   * The prefix to add to the `shepherd-enabled` and `shepherd-target` class names as well as the `data-shepherd-step-id`.\n   */\n  classPrefix?: string;\n  /**\n   * Default options for Steps ({@link Step#constructor}), created through `addStep`.\n   */\n  defaultStepOptions?: StepOptions;\n  /**\n   * Exiting the tour with the escape key will be enabled unless this is explicitly\n   * set to false.\n   */\n  exitOnEsc?: boolean;\n  /**\n   * Explicitly set the id for the tour. If not set, the id will be a generated uuid.\n   */\n  id?: string;\n  /**\n   * Navigating the tour via left and right arrow keys will be enabled\n   * unless this is explicitly set to false.\n   */\n  keyboardNavigation?: boolean;\n  /**\n   * An optional container element for the modal.\n   * If not set, the modal will be appended to `document.body`.\n   */\n  modalContainer?: HTMLElement;\n  /**\n   * An optional container element for the steps.\n   * If not set, the steps will be appended to `document.body`.\n   */\n  stepsContainer?: HTMLElement;\n  /**\n   * An array of step options objects or Step instances to initialize the tour with.\n   */\n  steps?: Array<StepOptions> | Array<Step>;\n  /**\n   * An optional \"name\" for the tour. This will be appended to the the tour's\n   * dynamically generated `id` property.\n   */\n  tourName?: string;\n  /**\n   * Whether or not steps should be placed above a darkened\n   * modal overlay. If true, the overlay will create an opening around the target element so that it\n   * can remain interactive\n   */\n  useModalOverlay?: boolean;\n}\n\nexport class ShepherdBase extends Evented {\n  activeTour?: Tour | null;\n  declare Step: typeof Step;\n  declare Tour: typeof Tour;\n\n  constructor() {\n    super();\n\n    autoBind(this);\n  }\n}\n\n/**\n * Class representing the site tour\n * @extends {Evented}\n */\nexport class Tour extends Evented {\n  trackedEvents = ['active', 'cancel', 'complete', 'show'];\n\n  classPrefix: string;\n  currentStep?: Step | null;\n  focusedElBeforeOpen?: HTMLElement | null;\n  id?: string;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  modal?: any | null;\n  options: TourOptions;\n  steps: Array<Step>;\n\n  constructor(options: TourOptions = {}) {\n    super();\n\n    autoBind(this);\n\n    const defaultTourOptions = {\n      exitOnEsc: true,\n      keyboardNavigation: true\n    };\n\n    this.options = Object.assign({}, defaultTourOptions, options);\n    this.classPrefix = normalizePrefix(this.options.classPrefix);\n    this.steps = [];\n    this.addSteps(this.options.steps);\n\n    // Pass these events onto the global Shepherd object\n    const events = [\n      'active',\n      'cancel',\n      'complete',\n      'inactive',\n      'show',\n      'start'\n    ];\n    events.map((event) => {\n      ((e) => {\n        this.on(e, (opts?: { [key: string]: unknown }) => {\n          opts = opts || {};\n          opts['tour'] = this;\n          Shepherd.trigger(e, opts);\n        });\n      })(event);\n    });\n\n    this._setTourID(options.id);\n\n    return this;\n  }\n\n  /**\n   * Adds a new step to the tour\n   * @param {StepOptions} options - An object containing step options or a Step instance\n   * @param {number | undefined} index - The optional index to insert the step at. If undefined, the step\n   * is added to the end of the array.\n   * @return The newly added step\n   */\n  addStep(options: StepOptions | Step, index?: number) {\n    let step = options;\n\n    if (!(step instanceof Step)) {\n      step = new Step(this, step);\n    } else {\n      step.tour = this;\n    }\n\n    if (!isUndefined(index)) {\n      this.steps.splice(index, 0, step as Step);\n    } else {\n      this.steps.push(step as Step);\n    }\n\n    return step;\n  }\n\n  /**\n   * Add multiple steps to the tour\n   * @param {Array<StepOptions> | Array<Step> | undefined} steps - The steps to add to the tour\n   */\n  addSteps(steps?: Array<StepOptions> | Array<Step>) {\n    if (Array.isArray(steps)) {\n      steps.forEach((step) => {\n        this.addStep(step);\n      });\n    }\n\n    return this;\n  }\n\n  /**\n   * Go to the previous step in the tour\n   */\n  back() {\n    const index = this.steps.indexOf(this.currentStep as Step);\n    this.show(index - 1, false);\n  }\n\n  /**\n   * Calls _done() triggering the 'cancel' event\n   * If `confirmCancel` is true, will show a window.confirm before cancelling\n   * If `confirmCancel` is a function, will call it and wait for the return value,\n   * and only cancel when the value returned is true\n   */\n  async cancel() {\n    if (this.options.confirmCancel) {\n      const cancelMessage =\n        this.options.confirmCancelMessage ||\n        'Are you sure you want to stop the tour?';\n      let stopTour;\n\n      if (isFunction(this.options.confirmCancel)) {\n        stopTour = await this.options.confirmCancel();\n      } else {\n        stopTour = window.confirm(cancelMessage);\n      }\n\n      if (stopTour) {\n        this._done('cancel');\n      }\n    } else {\n      this._done('cancel');\n    }\n  }\n\n  /**\n   * Calls _done() triggering the `complete` event\n   */\n  complete() {\n    this._done('complete');\n  }\n\n  /**\n   * Gets the step from a given id\n   * @param {number | string} id - The id of the step to retrieve\n   * @return The step corresponding to the `id`\n   */\n  getById(id: number | string) {\n    return this.steps.find((step) => {\n      return step.id === id;\n    });\n  }\n\n  /**\n   * Gets the current step\n   */\n  getCurrentStep() {\n    return this.currentStep;\n  }\n\n  /**\n   * Hide the current step\n   */\n  hide() {\n    const currentStep = this.getCurrentStep();\n\n    if (currentStep) {\n      return currentStep.hide();\n    }\n  }\n\n  /**\n   * Check if the tour is active\n   */\n  isActive() {\n    return Shepherd.activeTour === this;\n  }\n\n  /**\n   * Go to the next step in the tour\n   * If we are at the end, call `complete`\n   */\n  next() {\n    const index = this.steps.indexOf(this.currentStep as Step);\n\n    if (index === this.steps.length - 1) {\n      this.complete();\n    } else {\n      this.show(index + 1, true);\n    }\n  }\n\n  /**\n   * Removes the step from the tour\n   * @param {string} name - The id for the step to remove\n   */\n  removeStep(name: string) {\n    const current = this.getCurrentStep();\n\n    // Find the step, destroy it and remove it from this.steps\n    this.steps.some((step, i) => {\n      if (step.id === name) {\n        if (step.isOpen()) {\n          step.hide();\n        }\n\n        step.destroy();\n        this.steps.splice(i, 1);\n\n        return true;\n      }\n    });\n\n    if (current && current.id === name) {\n      this.currentStep = undefined;\n\n      // If we have steps left, show the first one, otherwise just cancel the tour\n      this.steps.length ? this.show(0) : this.cancel();\n    }\n  }\n\n  /**\n   * Show a specific step in the tour\n   * @param {number | string} key - The key to look up the step by\n   * @param {boolean} forward - True if we are going forward, false if backward\n   */\n  show(key: number | string = 0, forward = true) {\n    const step = isString(key) ? this.getById(key) : this.steps[key];\n\n    if (step) {\n      this._updateStateBeforeShow();\n\n      const shouldSkipStep =\n        isFunction(step.options.showOn) && !step.options.showOn();\n\n      // If `showOn` returns false, we want to skip the step, otherwise, show the step like normal\n      if (shouldSkipStep) {\n        this._skipStep(step, forward);\n      } else {\n        this.currentStep = step;\n        this.trigger('show', {\n          step,\n          previous: this.currentStep\n        });\n\n        step.show();\n      }\n    }\n  }\n\n  /**\n   * Start the tour\n   */\n  async start() {\n    this.trigger('start');\n\n    // Save the focused element before the tour opens\n    this.focusedElBeforeOpen = document.activeElement as HTMLElement | null;\n\n    this.currentStep = null;\n\n    this.setupModal();\n\n    this._setupActiveTour();\n    this.next();\n  }\n\n  /**\n   * Called whenever the tour is cancelled or completed, basically anytime we exit the tour\n   * @param {string} event - The event name to trigger\n   * @private\n   */\n  _done(event: string) {\n    const index = this.steps.indexOf(this.currentStep as Step);\n    if (Array.isArray(this.steps)) {\n      this.steps.forEach((step) => step.destroy());\n    }\n\n    cleanupSteps(this);\n\n    this.trigger(event, { index });\n\n    Shepherd.activeTour = null;\n    this.trigger('inactive', { tour: this });\n\n    if (this.modal) {\n      this.modal.hide();\n    }\n\n    if (event === 'cancel' || event === 'complete') {\n      if (this.modal) {\n        const modalContainer = document.querySelector(\n          '.shepherd-modal-overlay-container'\n        );\n\n        if (modalContainer) {\n          modalContainer.remove();\n          this.modal = null;\n        }\n      }\n    }\n\n    // Focus the element that was focused before the tour started\n    if (isHTMLElement(this.focusedElBeforeOpen)) {\n      this.focusedElBeforeOpen.focus();\n    }\n  }\n\n  /**\n   * Make this tour \"active\"\n   */\n  _setupActiveTour() {\n    this.trigger('active', { tour: this });\n\n    Shepherd.activeTour = this;\n  }\n\n  /**\n   * setupModal create the modal container and instance\n   */\n  setupModal() {\n    this.modal = new ShepherdModal({\n      target: this.options.modalContainer || document.body,\n      props: {\n        // @ts-expect-error TODO: investigate where styles comes from\n        styles: this.styles\n      }\n    });\n  }\n\n  /**\n   * Called when `showOn` evaluates to false, to skip the step or complete the tour if it's the last step\n   * @param {Step} step - The step to skip\n   * @param {boolean} forward - True if we are going forward, false if backward\n   * @private\n   */\n  _skipStep(step: Step, forward: boolean) {\n    const index = this.steps.indexOf(step);\n\n    if (index === this.steps.length - 1) {\n      this.complete();\n    } else {\n      const nextIndex = forward ? index + 1 : index - 1;\n      this.show(nextIndex, forward);\n    }\n  }\n\n  /**\n   * Before showing, hide the current step and if the tour is not\n   * already active, call `this._setupActiveTour`.\n   * @private\n   */\n  _updateStateBeforeShow() {\n    if (this.currentStep) {\n      this.currentStep.hide();\n    }\n\n    if (!this.isActive()) {\n      this._setupActiveTour();\n    }\n  }\n\n  /**\n   * Sets this.id to a provided tourName and id or `${tourName}--${uuid}`\n   * @param {string} optionsId - True if we are going forward, false if backward\n   * @private\n   */\n  _setTourID(optionsId: string | undefined) {\n    const tourName = this.options.tourName || 'tour';\n    const tourId = optionsId || uuid();\n\n    this.id = `${tourName}--${tourId}`;\n  }\n}\n\n/**\n * @public\n */\nconst Shepherd = new ShepherdBase();\n\nexport { Shepherd };\n","import { Shepherd, Tour } from './tour.ts';\nimport { StepNoOp, TourNoOp } from './utils/general.ts';\nimport { Step } from './step.ts';\n\nconst isServerSide = typeof window === 'undefined';\n\nShepherd.Step = (isServerSide ? StepNoOp : Step) as unknown as typeof Step;\nShepherd.Tour = (isServerSide ? TourNoOp : Tour) as unknown as typeof Tour;\n\nexport { ShepherdBase } from './tour.ts';\nexport default Shepherd;\n// Reexport types so they can be more easily used.\nexport type * from './evented.ts';\nexport type * from './step.ts';\nexport type * from './tour.ts';\n","import type { Tour } from '../tour.ts';\nimport { isHTMLElement } from './type-check.ts';\n\n/**\n * Cleanup the steps and set pointerEvents back to 'auto'\n * @param tour The tour object\n */\nexport function cleanupSteps(tour: Tour) {\n  if (tour) {\n    const { steps } = tour;\n\n    steps.forEach((step) => {\n      if (\n        step.options &&\n        step.options.canClickTarget === false &&\n        step.options.attachTo\n      ) {\n        if (isHTMLElement(step.target)) {\n          step.target.classList.remove('shepherd-target-click-disabled');\n        }\n\n        if (step._resolvedExtraHighlightElements) {\n          step._resolvedExtraHighlightElements.forEach((element) => {\n            if (isHTMLElement(element)) {\n              element.classList.remove('shepherd-target-click-disabled');\n            }\n          });\n        }\n      }\n    });\n  }\n}\n"],"names":["isHTMLElement$1","value","HTMLElement","isFunction","isString","isUndefined","undefined","Evented","on","event","handler","ctx","once","_this$bindings$event","this","bindings","push","off","_this$bindings$event2","forEach","binding","index","_this$bindings$event3","splice","trigger","args","_this$bindings$event4","context","_this$bindings$event5","apply","actions","defaultMerge","Symbol","skip","defaultMetaDataUpdater","previousMeta","metaMeta","defaultFilterValues","values","meta","filter","ObjectType","getObjectType","object","Array","isArray","validRecordToStringValues","has","Object","prototype","toString","call","constructor","hasOwnProperty","isRecord","Set","Map","getIterableOfIterables","iterables","iterator","iterable","mergeFunctions","mergeRecords","utils","result","key","objects","keys","getOwnPropertySymbols","add","getKeys","propValues","property","propertyIsEnumerable","length","updatedMeta","metaDataUpdater","parents","propertyResult","mergeUnknowns","defineProperty","configurable","enumerable","writable","mergeArrays","flat","mergeSets","mergeMaps","mergeOthers","at","deepmerge","options","customizedDeepmerge","_options$metaDataUpda","_options$enableImplic","_options$filterValues","defaultMergeFunctions","_extends","fromEntries","entries","option","hasOwn","map","useImplicitDefaultMerging","enableImplicitDefaultMerging","filterValues","getUtils","deepmergeCustom","_utils$filterValues","filteredValues","type","m_index","autoBind","self","getOwnPropertyNames","i","val","bind","normalizePrefix","prefix","charAt","shouldCenterStep","resolvedAttachToOptions","element","uuid","d","Date","now","replace","c","r","Math","random","floor","alignments","placements","reduce","acc","side","concat","min","max","round","createCoords","v","x","y","oppositeSideMap","left","right","bottom","top","oppositeAlignmentMap","start","end","clamp","evaluate","param","getSide","placement","split","getAlignment","getOppositeAxis","axis","getAxisLength","getSideAxis","includes","getAlignmentAxis","getAlignmentSides","rects","rtl","alignment","alignmentAxis","mainAlignmentSide","reference","floating","getOppositePlacement","getOppositeAlignmentPlacement","getPaddingObject","padding","expandPaddingObject","rectToClientRect","rect","width","height","computeCoordsFromPlacement","_ref","sideAxis","alignLength","isVertical","commonX","commonY","commonAlign","coords","async","detectOverflow","state","_await$platform$isEle","platform","elements","strategy","boundary","rootBoundary","elementContext","altBoundary","paddingObject","clippingClientRect","getClippingRect","isElement","contextElement","getDocumentElement","offsetParent","getOffsetParent","offsetScale","getScale","elementClientRect","convertOffsetParentRelativeRectToViewportRelativeRect","getNodeName","node","isNode","nodeName","toLowerCase","getWindow","_node$ownerDocument","ownerDocument","defaultView","window","document","documentElement","Node","Element","isHTMLElement","isShadowRoot","ShadowRoot","isOverflowElement","overflow","overflowX","overflowY","display","getComputedStyle","test","isTableElement","isTopLayer","some","selector","matches","e","isContainingBlock","elementOrCss","webkit","isWebKit","css","transform","perspective","containerType","backdropFilter","willChange","contain","CSS","supports","isLastTraversableNode","getNodeScroll","scrollLeft","scrollTop","scrollX","scrollY","getParentNode","assignedSlot","parentNode","host","getNearestOverflowAncestor","body","getOverflowAncestors","list","traverseIframes","_node$ownerDocument2","scrollableAncestor","isBody","win","visualViewport","frameElement","getCssDimensions","parseFloat","hasOffset","offsetWidth","offsetHeight","shouldFallback","$","unwrapElement","domElement","getBoundingClientRect","Number","isFinite","noOffsets","getVisualOffsets","offsetLeft","offsetTop","includeScale","isFixedStrategy","clientRect","scale","visualOffsets","isFixed","floatingOffsetParent","shouldAddVisualOffsets","offsetWin","currentWin","currentIFrame","iframeScale","iframeRect","clientLeft","paddingLeft","clientTop","paddingTop","getWindowScrollBarX","getClientRectFromClippingAncestor","clippingAncestor","html","clientWidth","clientHeight","visualViewportBased","getViewportRect","scroll","scrollWidth","scrollHeight","direction","getDocumentRect","getInnerBoundingClientRect","hasFixedPositionAncestor","stopNode","position","getRectRelativeToOffsetParent","isOffsetParentAnElement","offsets","offsetRect","isStaticPositioned","getTrueOffsetParent","polyfill","svgOffsetParent","currentNode","getContainingBlock","topLayer","elementClippingAncestors","cache","cachedResult","get","el","currentContainingBlockComputedStyle","elementIsFixed","computedStyle","currentNodeIsContaining","ancestor","set","getClippingElementAncestors","_c","clippingAncestors","firstClippingAncestor","clippingRect","accRect","getElementRects","data","getOffsetParentFn","getDimensionsFn","getDimensions","floatingDimensions","getClientRects","from","isRTL","limitShift","fn","middlewareData","offset","mainAxis","checkMainAxis","crossAxis","checkCrossAxis","mainAxisCoord","crossAxisCoord","rawOffset","computedOffset","len","limitMin","limitMax","_middlewareData$offse","_middlewareData$offse2","isOriginSide","setupTooltip","step","cleanup","attachToOptions","_getResolvedAttachToOptions","target","floatingUIOptions","_attachToOptions$on","_attachToOptions$on2","_attachToOptions$on3","arrowEl","arrow","querySelector","addArrow","shouldCenter","hasAutoPlacement","hasEdgeAlignment","_attachToOptions$on4","middleware","name","_middlewareData$autoP","_middlewareData$autoP2","_placementsThatFitOnE","_evaluate","allowedPlacements","autoAlignment","detectOverflowOptions","_objectWithoutPropertiesLoose","_excluded","placements$1","getPlacementList","currentIndex","autoPlacement","currentPlacement","alignmentSides","reset","currentOverflows","allOverflows","overflows","nextPlacement","placementsSortedByMostSpace","slice","sort","a","b","resetPlacement","every","pop","_middlewareData$arrow","_middlewareData$flip","initialPlacement","_evaluate2","fallbackPlacements","specifiedFallbackPlacements","fallbackStrategy","fallbackAxisSideDirection","flipAlignment","_excluded2","alignmentOffset","initialSideAxis","isBasePlacement","oppositePlacement","getExpandedPlacements","hasFallbackAxisSideDirection","isStart","lr","rl","tb","bt","getSideList","getOppositeAxisPlacements","overflowsData","flip","sides","_middlewareData$flip2","_overflowsData$filter","nextIndex","_overflowsData$filter2","currentSideAxis","_evaluate4","limiter","_excluded4","maxSide","limitedCoords","shift","arrowDimensions","isYAxis","minProp","maxProp","clientProp","endDiff","startDiff","arrowOffsetParent","clientSize","centerToReference","largestPossiblePadding","minPadding","maxPadding","min$1","center","shouldAddOffset","centerOffset","getFloatingUIOptions","shepherdElementComponent","getElement","classList","update","ancestorScroll","ancestorResize","elementResize","ResizeObserver","layoutShift","IntersectionObserver","animationFrame","referenceEl","ancestors","addEventListener","passive","cleanupIo","onMove","timeoutId","io","root","_io","clearTimeout","disconnect","refresh","threshold","rootMargin","isFirstUpdate","handleObserve","ratio","intersectionRatio","setTimeout","observe","observeMove","frameId","reobserveFrame","resizeObserver","firstEntry","unobserve","cancelAnimationFrame","requestAnimationFrame","_resizeObserver","prevRefRect","frameLoop","nextRefRect","_resizeObserver2","removeEventListener","autoUpdate","computePosition","mergedOptions","platformWithCache","config","validMiddleware","Boolean","statefulPlacement","resetCount","nextX","nextY","computePosition$1","then","assign","style","dataset","arrowX","arrowY","placeArrow","floatingUIposition","Promise","resolve","focus","preventScroll","setPosition","noop","tar","src","k","run","blank_object","create","run_all","fns","is_function","thing","safe_not_equal","append","appendChild","insert","anchor","insertBefore","detach","removeChild","createElement","svg_element","createElementNS","text","createTextNode","space","listen","attr","attribute","removeAttribute","getAttribute","setAttribute","always_set_through_set_attribute","set_attributes","attributes","descriptors","getOwnPropertyDescriptors","__proto__","cssText","indexOf","toggle_class","toggle","current_component","set_current_component","component","get_current_component","Error","afterUpdate","$$","after_update","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","update_scheduled","add_render_callback","seen_callbacks","flushidx","flush","saved_component","callback","clear","fragment","before_update","dirty","p","outroing","outros","group_outros","check_outros","transition_in","block","local","delete","transition_out","o","ensure_array_like","array_like_or_iterator","create_component","mount_component","m","new_on_destroy","on_mount","on_destroy","destroy_component","detaching","filtered","targets","flush_render_callbacks","init","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_disconnect","callbacks","skip_bound","ready","ret","rest","fill","make_dirty","hydrate","nodes","childNodes","children","l","intro","SvelteComponent","$$set","$destroy","$on","$set","obj","button","button_class_value","arguments","action","classes","disabled","label","secondary","$$props","getConfigOption","$$invalidate","tour","__svelte","each_blocks","iterations","create_if_block$3","footer","buttons","button_aria_label_value","span","cancelIcon","preventDefault","cancel","h3","labelId","title","innerHTML","$$value","create_if_block_1$1","enabled","create_if_block$2","header","div","descriptionId","show_if_2","show_if_1","show_if","attachTo","create_if_block","dialog_aria_describedby_value","dialog","levels","updates","to_null_out","accounted_for","$$scope","n","current","getClassesArray","className","hasCancelIcon","hasTitle","classPrefix","firstFocusableElement","focusableElements","lastFocusableElement","dataStepId","id","querySelectorAll","oldClasses","remove","removeClasses","newClasses","addClasses","keyCode","shiftKey","activeElement","contains","exitOnEsc","stopPropagation","keyboardNavigation","back","next","Step","super","_resolvedAttachTo","_resolvedExtraHighlightElements","styles","_setOptions","complete","destroy","_updateStepTargetOnHide","getTour","hide","_this$tour$modal","modal","hidden","_resolveExtraHiglightElements","extraHighlights","flatMap","highlight","_resolveAttachToOptions","returnOpts","console","error","parseAttachTo","isOpen","show","beforeShowPromise","_show","updateStepOptions","getTarget","_createTooltipContent","Shepherd_element","stepsContainer","_scrollTo","scrollToOptions","scrollToHandler","scrollIntoView","_getClassOptions","stepOptions","defaultStepOptions","stepClasses","defaultStepOptionsClasses","allClasses","uniqClasses","join","trim","tourOptions","mergeTooltipConfig","when","_setupElements","advanceOn","targetIsEl","currentTarget","_setupAdvanceOnHandler","bindAdvance","_this$tour$modal2","setupModal","setupForStep","_styleTargetElementForStep","scrollTo","content","extraHighlightElements","targetElement","highlightClass","canClickTarget","svg","path","_getScrollParent","parentElement","_getVisibleHeight","scrollParent","elementRect","scrollRect","scrollBottom","rafId","pathDefinition","openingProperties","modalIsVisible","closeModalOpening","_cleanupStepEventListeners","positionModal","modalOverlayOpeningPadding","modalOverlayOpeningRadius","modalOverlayOpeningXOffset","modalOverlayOpeningYOffset","elementsToHighlight","lastIndexOf","otherElement","otherRect","_preventModalBodyTouch","overlayPaths","openings","innerWidth","w","innerHeight","h","overlayPath","topLeft","topRight","bottomRight","bottomLeft","makeOverlayPath","useModalOverlay","iframeOffset","targetWindow","_targetWindow","targetIframe","_targetIframeRect$scr","_targetIframeRect$scr2","targetIframeRect","parent","_getIframeOffset","rafLoop","_styleForStep","ShepherdBase","activeTour","Shepherd","isServerSide","_options","Tour","_tour","trackedEvents","currentStep","focusedElBeforeOpen","steps","addSteps","opts","_setTourID","addStep","confirmCancel","cancelMessage","confirmCancelMessage","stopTour","confirm","_done","getById","find","getCurrentStep","isActive","removeStep","forward","_updateStateBeforeShow","showOn","_skipStep","previous","_setupActiveTour","cleanupSteps","modalContainer","Shepherd_modal","optionsId","tourName","tourId"],"sourceRoot":""}